{
  "hapi": {
    "name": "hapi",
    "versions": [
      {
        "name": "20.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "20.0.0"
    ],
    "api": false,
    "20.0.0": {
      "menu": "",
      "api": "",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "The Simple, Secure Framework Developers Trust",
    "forks": 1303,
    "stars": 12698,
    "date": "2020-08-26T10:20:52Z",
    "updated": "Wed Aug 26 2020",
    "link": "https://github.com/hapijs/hapi"
  },
  "accept": {
    "name": "accept",
    "versions": [
      {
        "name": "5.0.1",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "5.0.1"
    ],
    "api": true,
    "5.0.1": {
      "menu": "- [Methods](#methods)\n  - [`charset()`](#charsetcharsetheader-preferences)\n  - [`charsets()`](#charsetscharsetheader)\n  - [`encoding()`](#encodingencodingheader-preferences)\n  - [`encodings()`](#encodingsencodingheader)\n  - [`language()`](#languagelanguageheader-preferences)\n  - [`languages()`](#languageslanguageheader)\n  - [`mediaType()`](#mediatypemediatypeheader-preferences)\n  - [`mediaTypes()`](#mediatypesmediatypeheader)\n  - [`parseAll()`](#parseallheaders)\n- [Q Weightings](#q-weightings)\n- [Encodings](#encodings)\n  - [Preferences](#preferences)\n  - [Identity](#identity)",
      "api": "<h2>\n<a id=\"methods\" class=\"anchor\" href=\"#methods\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Methods</h2>\n<h3>\n<a id=\"charsetcharsetheader-preferences\" class=\"anchor\" href=\"#charsetcharsetheader-preferences\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>charset(charsetHeader, [preferences])</code>\n</h3>\n<p>Given a string of acceptable charsets from a HTTP request Accept-Charset header, and an optional array of charset preferences, it will return a string indicating the best charset option that can be used in the HTTP response.  This takes into account any weighting parameters given in the header for ordering and exclusion.</p>\n<pre><code>const charset = Accept.charsets(\"iso-8859-5, unicode-1-1;q=0.8\"); // charset === \"iso-8859-5\"\nconst charset = Accept.charsets(\"iso-8859-5, unicode-1-1;q=0.8\", [\"unicode-1-1\"]); // charset === \"unicode-1-1\"\n</code></pre>\n<h3>\n<a id=\"charsetscharsetheader\" class=\"anchor\" href=\"#charsetscharsetheader\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>charsets(charsetHeader)</code>\n</h3>\n<p>Given a string of acceptable charsets from a HTTP request Accept-Charset header it will return an array of strings indicating the possible charset options that can be used in the HTTP response, in order from most preferred to least as determined by the <a href=\"#weightings\">q weightings</a></p>\n<pre><code>const charsets = Accept.charsets(\"iso-8859-5, unicode-1-1;q=0.8\"); // charsets === [\"iso-8859-5\", \"unicode-1-1\"]\nconst charsets = Accept.charsets(\"iso-8859-5;q=0.5, unicode-1-1;q=0.8\"); // charsets === [\"unicode-1-1\", \"iso-8859-5\"]\n</code></pre>\n<h3>\n<a id=\"encodingencodingheader-preferences\" class=\"anchor\" href=\"#encodingencodingheader-preferences\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>encoding(encodingHeader, [preferences])</code>\n</h3>\n<p>Given a string of acceptable encodings from a HTTP request Accept-Encoding header, and optionally an array of preferences, it will return a string with the best fit encoding that should be used in the HTTP response.  If no preferences array parameter is given the highest weighted or first ordered encoding is returned.  If weightings are given in the header (using the q parameter) they are taken into account and the highest weighted match is returned.  If a preferences array is given the best match from the array is returned.  For more information about how the preferences array works see the section below on <a href=\"#preferences\">Preferences</a>.</p>\n<pre><code>const encoding = Accept.encoding(\"gzip, deflate, sdch\"); // encoding === \"gzip\"\nconst encoding = Accept.encoding(\"gzip, deflate, sdch\", [\"deflate\", \"identity\"]); // encoding === \"delate\"\n</code></pre>\n<h3>\n<a id=\"encodingsencodingheader\" class=\"anchor\" href=\"#encodingsencodingheader\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>encodings(encodingHeader)</code>\n</h3>\n<p>Given a string of acceptable encodings from a HTTP request Accept-Encoding header it will return an array of strings indicating the possible encoding options that can be used in the HTTP response, in order from most preferred to least as determined by the <a href=\"#weightings\">q weightings</a></p>\n<pre><code>const encodings = Accept.encodings(\"compress;q=0.5, gzip;q=1.0\"); // encodings === [\"gzip\", \"compress\", \"identity\"]\n</code></pre>\n<h3>\n<a id=\"languagelanguageheader-preferences\" class=\"anchor\" href=\"#languagelanguageheader-preferences\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>language(languageHeader, [preferences])</code>\n</h3>\n<p>Given a string of acceptable languages from a HTTP request Accept-Language header, and an optional array of language preferences, it will return a string indicating the best language that can be used in the HTTP response.  It respects the <a href=\"#weightings\">q weightings</a> of the languages in the header, returning the matched preference with the highest weighting.  The case of the preference does not have to match the case of the option in the header.</p>\n<pre><code>const language = Accept.language(\"en;q=0.7, en-GB;q=0.8\"); // language === \"en-GB\"\n\n// the case of the preference \"en-gb\" does not match the case of the header option \"en-GB\"\nconst language = Accept.language(\"en;q=0.7, en-GB;q=0.8\", [\"en-gb\"]); // language === \"en-GB\"\n</code></pre>\n<h3>\n<a id=\"languageslanguageheader\" class=\"anchor\" href=\"#languageslanguageheader\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>languages(languageHeader)</code>\n</h3>\n<p>Given a string of acceptable languages from a HTTP request Accept-Language header it will return an array of strings indicating the possible languages that can be used in the HTTP response, in order from most preferred to least as determined by the <a href=\"#weightings\">q weightings</a>.</p>\n<pre><code>const languages = Accept.languages(\"da, en;q=0.7, en-GB;q=0.8\"); // languages === [\"da\", \"en-GB\", \"en\"]\n</code></pre>\n<h3>\n<a id=\"mediatypemediatypeheader-preferences\" class=\"anchor\" href=\"#mediatypemediatypeheader-preferences\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>mediaType(mediaTypeHeader, [preferences])</code>\n</h3>\n<p>Given a string of acceptable media types from a HTTP request Accept header, and optionally an array of preferences, it will return a string with the best fit media type that should be used in the HTTP response.  If no preferences array parameter is given the highest weighted or first ordered media type is returned.  If weightings are given in the header (using the q parameter) they are taken into account and the highest weighted match is returned.  If a preferences array is given the best match from the array is returned.  For more information about how the preferences array works see the section below on <a href=\"#preferences\">Preferences</a>.</p>\n<pre><code>const mediaType = Accept.mediaType(\"text/plain, application/json;q=0.5, text/html, */*;q=0.1\");\n// mediaType === \"text/plain\"\n\nconst mediaType = Accept.mediaType(\"text/plain, application/json;q=0.5, text/html, */*;q=0.1\", [\"text/html\", \"application/json\"]);\n// mediaType === \"text/html\"\n</code></pre>\n<h3>\n<a id=\"mediatypesmediatypeheader\" class=\"anchor\" href=\"#mediatypesmediatypeheader\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>mediaTypes(mediaTypeHeader)</code>\n</h3>\n<p>Given a string of acceptable media types from a HTTP request Accept header it will return an array of strings indicating the possible media types that can be used in the HTTP response, in order from most preferred to least as determined by the <a href=\"#weightings\">q weightings</a>.</p>\n<pre><code>const mediaTypes = Accept.mediaTypes(\"text/plain, application/json;q=0.5, text/html, */*;q=0.1\");\n// mediaTypes === [\"text/plain\", \"text/html\", \"application/json\", \"*/*\"]\n</code></pre>\n<h3>\n<a id=\"parseallheaders\" class=\"anchor\" href=\"#parseallheaders\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>parseAll(headers)</code>\n</h3>\n<p>Given the headers from a Hapi request object, <code>parseAll()</code> will parse all of the Accepts-* headers it currently understands into an object.</p>\n<pre><code>const all = Accept.parseAll(request.headers);\n// all === {\n//    \"charsets\": [\"iso-8859-5\", \"unicode-1-1\"],\n//    \"encodings\": [\"gzip\", \"compress\", \"identity\"],\n//    \"languages\": [\"da\", \"en-gb\", \"en\"],\n//    \"mediaTypes\": [\"text/plain\", \"text/html\", \"application/json\", \"*/*\"]\n// }\n</code></pre>\n<h2>\n<a id=\"q-weightings\" class=\"anchor\" href=\"#q-weightings\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Q Weightings</h2>\n<p>The Accept-* headers may optionally include preferential weighting to indicate which options are best for the requester.  It does this with <code>q</code> parameters in the headers (which stands for quality).  These q weightings must be in the range of 0 to 1, with a max of three decimal places.  The weightings are used to order the data given in the header, with the highest number being most preferential.  Anything with a q rating of 0 is not allowed at all.</p>\n<p>If a particular Accept method allows a <code>preferences</code> array parameter, such as <code>encoding()</code>, the weightings in the header affect which preference will be returned.  Your preferences are matched with the weighting in mind, and the highest weighted option will be returned, no matter what order you list your preferences.  The header weighting is most important.</p>\n<pre><code>const encoding = Accept.encoding(\"gzip;q=1.0, identity;q=0.5\", [\"identity\", \"gzip\"]);\n// encoding === \"gzip\"\n// despite identity getting listed first in the preferences array, gzip has a higher q weighting, so it is returned.\n</code></pre>\n<h2>\n<a id=\"encodings\" class=\"anchor\" href=\"#encodings\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Encodings</h2>\n<h3>\n<a id=\"preferences\" class=\"anchor\" href=\"#preferences\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Preferences</h3>\n<p>If you are looking for a set of specific encodings you can pass that in as an array to the <code>preferences</code> parameter.  Your preferences <strong>must</strong> be an array.  In the preferences array you specify a list of possible encodings you want to look for, in order of preference.  Accept will return back the most preferential option it can find, if any match. The preferences array does not support parameters, only base types.</p>\n<pre><code>const encoding = Accept.encoding(\"gzip, deflate, sdch\", [\"deflate\", \"identity\"]); // encoding === \"delate\"\n</code></pre>\n<p>Your preferences are evaluated without any case sensitivity, to better match what the browser sends.  This means that \"gZip\" will match a preference of [\"gzip\"].</p>\n<pre><code>const encoding = Accept.encoding(\"gZip, deflate, sdch\", [\"gzip\"]); // encoding === \"gzip\"\n</code></pre>\n<p>If you supply a preferences array, and no match is found, <code>encoding()</code> will return an empty string, rather than an encoding from the header.</p>\n<pre><code>const encoding = Accept.encoding(\"gZip\", [\"deflate\"]); // encoding === \"\"\n</code></pre>\n<p>If the encoding header is the special \"*\" that indicates the browser will accept any encoding.  In that case the top preference from your supplied options will be returned.</p>\n<pre><code>const encoding = Accept.encoding(\"*\", [\"gzip\"]); // encoding === \"gzip\"\n</code></pre>\n<h3>\n<a id=\"identity\" class=\"anchor\" href=\"#identity\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Identity</h3>\n<p>When you ask Accept for a list of all the supported encodings from the request, using the <code>encodings()</code> function (plural, not singular), you will be returned an array of strings in order from most preferred to least as determined by the encoding weight.</p>\n<pre><code>const encodings = Accept.encodings(\"compress;q=0.5, gzip;q=1.0\"); // encodings === [\"gzip\", \"compress\", \"identity\"]\n</code></pre>\n<p>You'll notice that <code>identity</code> was returned in the array, even though it's not in the encoding header.  Identity is always an option for encoding, unless specifically excluded in the header using a weighting of zero.  Identity just means respond with no special encoding.</p>\n",
      "intro": "## Introduction\n\nAccept helps to answer the question of how best to respond to a HTTP request, based on the requesting browser's capabilities.  Accept will parse the headers of a HTTP request and tell you what the preferred encoding is, what language should be used, and what charsets and media types are accepted.\n\nAdditional details about Accept headers and content negotiation can be found in [IETF RFC 7231, Section 5.3](https://tools.ietf.org/html/rfc7231#section-5.3).\n",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "HTTP Accept-* headers parsing.",
    "forks": 23,
    "stars": 39,
    "date": "2020-08-22T17:13:52Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/accept"
  },
  "ammo": {
    "name": "ammo",
    "versions": [
      {
        "name": "5.0.1",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "5.0.1"
    ],
    "api": true,
    "5.0.1": {
      "menu": "- [Methods](#methods)\n  - [`header()`](#headerheader-length)\n  - [`new Ammo.Stream()`](#new-ammostreamrange)",
      "api": "<h2>\n<a id=\"methods\" class=\"anchor\" href=\"#methods\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Methods</h2>\n<h3>\n<a id=\"headerheader-length\" class=\"anchor\" href=\"#headerheader-length\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>header(header, length)</code>\n</h3>\n<p>Parses the range from a HTTP header, where:</p>\n<ul>\n<li>\n<code>header</code> - A string in the form of <code>bytes=from-to</code>, where <code>from</code> and <code>to</code> are integers specifying the range. Both are optional. Multiple ranges can be passed as a comma delimited list.</li>\n<li>\n<code>length</code> - A positive integer specifying the maximum length the range can cover. If a <code>to</code> value passed in the <code>header</code> string is greater than <code>length</code>, the <code>to</code> value is set as <code>length - 1</code>.</li>\n</ul>\n<p>Returns an array of objects with the properties <code>from</code> and <code>to</code>, which specify the beginning and ending of the range. Overlapping ranges are combined into one object. Returns <code>null</code> for invalid input.</p>\n<h3>\n<a id=\"new-ammostreamrange\" class=\"anchor\" href=\"#new-ammostreamrange\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>new Ammo.Stream(range)</code>\n</h3>\n<p>Creates a <a href=\"https://nodejs.org/api/stream.html\" rel=\"nofollow\"><code>Transform Stream</code></a> that extracts the portion of a piped in stream within <code>range</code>, where:</p>\n<ul>\n<li>\n<code>range</code> - an object with the properties <code>from</code> and <code>to</code> that specify the range of the piped in stream to read. Objects returned by <code>Ammo.header</code> can be passed into <code>range</code>.</li>\n</ul>\n",
      "intro": "",
      "example": "",
      "usage": "## Usage\n\n```js\n// basic usage\nconst range = Ammo.header('bytes=1-5', 10);\n// range --> [{ from: 1, to: 5 }]\n\n// multiple ranges\nconst range = Ammo.header('bytes=1-5,7-10', 10);\n// range --> [{ from: 1, to: 5 }, { from: 7, to: 9 }]\n\n// streams (get range within a `source`)\nconst range = Ammo.header('bytes=1000-4000', 5000);\nconst stream = new Ammo.Stream(range[0]);\nconst buffer = await Wreck.read(source.pipe(stream));\n\n// buffer is the portion of source within range\n```\n",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "HTTP Range processing utilities.",
    "forks": 7,
    "stars": 1,
    "date": "2020-08-22T19:04:01Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/ammo"
  },
  "b64": {
    "name": "b64",
    "versions": [
      {
        "name": "5.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "5.0.0"
    ],
    "api": true,
    "5.0.0": {
      "menu": "- [encode()](#encodebuffer)\n- [decode()](#decodebuffer)\n- [Encoder](#encoder)\n- [Decoder](#decoder)\n- [base64urlEncode()](#base64urlencodevalue)\n- [base64urlDecode()](#base64urldecodevalue)",
      "api": "<h3>\n<a id=\"encodebuffer\" class=\"anchor\" href=\"#encodebuffer\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>encode(buffer)</h3>\n<p>Base64 encode the buffer and return it as a new Buffer.</p>\n<h3>\n<a id=\"decodebuffer\" class=\"anchor\" href=\"#decodebuffer\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>decode(buffer)</h3>\n<p>Base64 decode the buffer and return the result as a new buffer.</p>\n<h3>\n<a id=\"encoder\" class=\"anchor\" href=\"#encoder\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Encoder</h3>\n<p>Transform stream that base64 encodes each chunk of the stream.</p>\n<p>Example:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s\">'use strict'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Fs</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'fs'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">B64</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/b64'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">stream</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Fs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">createReadStream</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">}</span></span>/package.json`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">encoder</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-c1\">B64</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Encoder</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">stream</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">pipe</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">encoder</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">pipe</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">stdout</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"decoder\" class=\"anchor\" href=\"#decoder\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Decoder</h3>\n<p>Transform stream that base64 decodes each chunk of the stream.</p>\n<p>Example:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s\">'use strict'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Fs</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'fs'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">B64</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/b64'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">stream</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Fs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">createReadStream</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">}</span></span>/encodedfile.b64`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">decoder</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-c1\">B64</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Decoder</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">stream</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">pipe</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">decoder</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">pipe</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">stdout</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"base64urlencodevalue\" class=\"anchor\" href=\"#base64urlencodevalue\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>base64urlEncode(value)</h3>\n<p>Encodes value of string or buffer type in Base64 or URL encoding, function will assert input value is correct.</p>\n<h3>\n<a id=\"base64urldecodevalue\" class=\"anchor\" href=\"#base64urldecodevalue\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>base64urlDecode(value)</h3>\n<p>Decodes string into Base64 or URL encoding, function throws an error on invalid input and returns a string or buffer depending on encoding provided.  Default encoding is binary.</p>\n",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Base64 streaming encoder and decoder.",
    "forks": 12,
    "stars": 38,
    "date": "2020-07-21T01:13:50Z",
    "updated": "Mon Jul 20 2020",
    "link": "https://github.com/hapijs/b64"
  },
  "basic": {
    "name": "basic",
    "versions": [
      {
        "name": "6.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "6.0.0"
    ],
    "api": true,
    "6.0.0": {
      "menu": "- [Usage](#usage)",
      "api": "<h2>\n<a id=\"usage\" class=\"anchor\" href=\"#usage\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Usage</h2>\n<p>Basic authentication requires validating a username and password combination. The <code>'basic'</code> scheme takes the following options:</p>\n<ul>\n<li>\n<code>validate</code> - (required) a user lookup and password validation function with the signature <code>[async] function(request, username, password, h)</code> where:\n<ul>\n<li>\n<code>request</code> - is the hapi request object of the request which is being authenticated.</li>\n<li>\n<code>username</code> - the username received from the client.</li>\n<li>\n<code>password</code> - the password received from the client.</li>\n<li>\n<code>h</code> - the response toolkit.</li>\n<li>Returns an object <code>{ isValid, credentials, response }</code> where:\n<ul>\n<li>\n<code>isValid</code> - <code>true</code> if both the username was found and the password matched, otherwise <code>false</code>.</li>\n<li>\n<code>credentials</code> - a credentials object passed back to the application in <code>request.auth.credentials</code>.</li>\n<li>\n<code>response</code> - Optional. If provided will be used immediately as a takeover response. Can be used to redirect the client, for example. Don't need to provide <code>isValid</code> or <code>credentials</code> if <code>response</code> is provided</li>\n</ul>\n</li>\n<li>Throwing an error from this function will replace default <code>Boom.unauthorized</code> error</li>\n<li>Typically, <code>credentials</code> are only included when <code>isValid</code> is <code>true</code>, but there are cases when the application needs to know who tried to authenticate even when it fails (e.g. with authentication mode <code>'try'</code>).</li>\n</ul>\n</li>\n<li>\n<code>allowEmptyUsername</code> - (optional) if <code>true</code>, allows making requests with an empty username. Defaults to <code>false</code>.</li>\n<li>\n<code>unauthorizedAttributes</code> - (optional) if set, passed directly to <a href=\"https://github.com/hapijs/boom#boomunauthorizedmessage-scheme-attributes\">Boom.unauthorized</a> if no custom <code>err</code> is thrown. Useful for setting realm attribute in WWW-Authenticate header. Defaults to <code>undefined</code>.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Bcrypt</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'bcrypt'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">users</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">john</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">username</span>: <span class=\"pl-s\">'john'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">password</span>: <span class=\"pl-s\">'$2a$10$iqJSHD.BGr0E2IxQwYgJmeP3NvhPrXAeLSaGCj6IR/XU5QtjVu5Tm'</span><span class=\"pl-kos\">,</span>   <span class=\"pl-c\">// 'secret'</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'John Doe'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">id</span>: <span class=\"pl-s\">'2133d32a'</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">validate</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">username</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">password</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">username</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'help'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">response</span>: <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">redirect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'https://hapijs.com/help'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>     <span class=\"pl-c\">// custom response</span>\n    <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">user</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">users</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">username</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span>!<span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">credentials</span>: <span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">isValid</span>: <span class=\"pl-c1\">false</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">isValid</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-v\">Bcrypt</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">compare</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">password</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">password</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">credentials</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span> isValid<span class=\"pl-kos\">,</span> credentials <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">main</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">4000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/basic'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">strategy</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'simple'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'basic'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> validate <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">default</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'simple'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-en\">handler</span>: <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n            <span class=\"pl-k\">return</span> <span class=\"pl-s\">'welcome'</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">main</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">server</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Server listening on <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">info</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">uri</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">.</span><span class=\"pl-en\">catch</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">exit</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Basic authentication plugin.",
    "forks": 69,
    "stars": 145,
    "date": "2020-08-22T15:37:43Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/basic"
  },
  "bell": {
    "name": "bell",
    "versions": [
      {
        "name": "12.1.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "12.1.0"
    ],
    "api": true,
    "12.1.0": {
      "menu": "- [Tutorials](#tutorials)\n- [Examples](#examples)\n- [Notes](#notes)\n- [Options](#options)\n- [Authentication information](#authentication-information)\n  - [Always present](#always-present)\n  - [Present on successful authentication](#present-on-successful-authentication)\n    - [OAuth protocol](#oauth-protocol)\n    - [OAuth2 protocol](#oauth2-protocol)\n    - [Present on failed authentication ()](#present-on-failed-authentication-routeauthmodetry)\n- [Advanced Usage](#advanced-usage)\n  - [Configuration via Environment Variables](#configuration-via-environment-variables)\n  - [Handling Errors](#handling-errors)\n  - [Token Refresh](#token-refresh)\n  - [Simulated authentication](#simulated-authentication)\n- [Usage without a strategy](#usage-without-a-strategy)\n- [Customized Scope and Params](#customized-scope-and-params)",
      "api": "<h3>\n<a id=\"tutorials\" class=\"anchor\" href=\"#tutorials\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Tutorials</h3>\n<p><a href=\"http://mph-web.de/social-signup-with-twitter-using-hapi-js/\" rel=\"nofollow\"><strong>Social Login with Twitter using hapi.js</strong></a></p>\n<h3>\n<a id=\"examples\" class=\"anchor\" href=\"#examples\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Examples</h3>\n<p><a href=\"https://github.com/hapijs/bell/tree/master/examples\"><strong>All Examples</strong></a></p>\n<p>Twitter:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-c\">// Load modules</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Bell</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/bell'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n\n<span class=\"pl-c\">// Declare internals</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">internals</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">8000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-c\">// Register bell with the server</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Bell</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-c\">// Declare an authentication strategy using the bell scheme</span>\n    <span class=\"pl-c\">// with the name of the provider, cookie encryption password,</span>\n    <span class=\"pl-c\">// and the OAuth client credentials.</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">strategy</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'twitter'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'bell'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">provider</span>: <span class=\"pl-s\">'twitter'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">password</span>: <span class=\"pl-s\">'cookie_encryption_password_secure'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">clientId</span>: <span class=\"pl-s\">'my_twitter_client_id'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">clientSecret</span>: <span class=\"pl-s\">'my_twitter_client_secret'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">isSecure</span>: <span class=\"pl-c1\">false</span>     <span class=\"pl-c\">// Terrible idea but required if not using HTTPS especially if developing locally</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-c\">// Use the 'twitter' authentication strategy to protect the</span>\n    <span class=\"pl-c\">// endpoint handling the incoming authentication credentials.</span>\n    <span class=\"pl-c\">// This endpoint usually looks up the third party account in</span>\n    <span class=\"pl-c\">// the database and sets some application state (cookie) with</span>\n    <span class=\"pl-c\">// the local application account information.</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">method</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'POST'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>    <span class=\"pl-c\">// Must handle both GET and POST</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/login'</span><span class=\"pl-kos\">,</span>             <span class=\"pl-c\">// The callback endpoint registered with the provider</span>\n        <span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">auth</span>: <span class=\"pl-kos\">{</span>\n              <span class=\"pl-c1\">mode</span>: <span class=\"pl-s\">'try'</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">strategy</span>: <span class=\"pl-s\">'twitter'</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-en\">handler</span>: <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n                <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span>!<span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">isAuthenticated</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n                    <span class=\"pl-k\">return</span> <span class=\"pl-s\">`Authentication failed due to: <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">error</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">message</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-kos\">}</span>\n\n                <span class=\"pl-c\">// Perform any account lookup or registration, setup local session,</span>\n                <span class=\"pl-c\">// and redirect to the application. The third-party credentials are</span>\n                <span class=\"pl-c\">// stored in request.auth.credentials. Any query parameters from</span>\n                <span class=\"pl-c\">// the initial request are passed back via request.auth.credentials.query.</span>\n\n                <span class=\"pl-k\">return</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">redirect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/home'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"notes\" class=\"anchor\" href=\"#notes\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Notes</h3>\n<p>Testing third-party authorization is often a painful process. They are hard to test, tidious to configure, and tend to break when running on local servers. If you are having issues running <strong>bell</strong> locally, you might want to look at the <code>isSecure</code> and <code>isSameSite</code> options. Since most people don't run TLS on their local test server, <code>isSecure</code> must be set to <code>false</code> to remove the TLS requirement. <code>isSameSite</code> might need to be set to <code>'Lax'</code> in some cases.</p>\n<p>You should also review the default scope set for each provider early in your implementation. The default scope is meant to get the minimal permissions needed to perform simple user login. In most cases, you would want to ask for more permissions as the default often does not provide access to most API calls provided by the third-party services.</p>\n<h3>\n<a id=\"options\" class=\"anchor\" href=\"#options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Options</h3>\n<p>The <code>server.auth.strategy()</code> method requires the following strategy options:</p>\n<ul>\n<li>\n<p><code>provider</code> - the name of the third-party provider (<code>'auth0'</code>, <code>'azure'</code>, <code>'bitbucket'</code>,\n<code>'dropbox'</code>, <code>'facebook'</code>, <code>'fitbit'</code>, <code>'foursquare'</code>, <code>'github'</code>, <code>'google'</code>, <code>'googleplus'</code>,\n<code>'instagram'</code>, <code>'linkedin'</code>, <code>'live'</code>, <code>'twitter'</code>, <code>'vk'</code>, <code>'arcgisonline'</code>, <code>'yahoo'</code>,\n<code>'nest'</code>, <code>'phabricator'</code>, <code>'pinterest'</code>) or an object containing a custom\nprovider with the following:</p>\n<ul>\n<li>\n<code>name</code> - the custom provider name. Defaults to <code>custom</code>.</li>\n<li>\n<code>protocol</code> - the authorization protocol used. Must be one of:\n<ul>\n<li>\n<code>'oauth'</code> - OAuth 1.0a</li>\n<li>\n<code>'oauth2'</code> - OAuth 2.0</li>\n</ul>\n</li>\n<li>\n<code>signatureMethod</code> - the OAuth signature method (OAuth 1.0a only). Must be one of:\n<ul>\n<li>\n<code>'HMAC-SHA1'</code> - default</li>\n<li>\n<code>'RSA-SHA1'</code> - in that case, the <code>clientSecret</code> is your RSA private key</li>\n</ul>\n</li>\n<li>\n<code>temporary</code> - the temporary credentials (request token) endpoint (OAuth 1.0a only).</li>\n<li>\n<code>useParamsAuth</code> - boolean that determines if OAuth client id and client secret will be sent\nas parameters as opposed to an Authorization header (OAuth 2.0 only). Defaults to <code>false</code>.</li>\n<li>\n<code>auth</code> - the authorization endpoint URI.</li>\n<li>\n<code>token</code> - the access token endpoint URI.</li>\n<li>\n<code>scope</code> - an array of scope strings (OAuth 2.0 only).</li>\n<li>\n<code>scopeSeparator</code> - the scope separator character (OAuth 2.0 only). Only required when a\nprovider has a broken OAuth 2.0 implementation. Defaults to space (Facebook and GitHub\ndefault to comma).</li>\n<li>\n<code>headers</code> - a headers object with additional headers required by the provider (e.g. GitHub\nrequired the 'User-Agent' header which is set by default).</li>\n<li>\n<code>profileMethod</code> - <code>get</code> or <code>post</code> for obtaining user profile by <code>profile</code> function. Default\nis <code>get</code>.</li>\n<li>\n<code>profile</code> - a function used to obtain user profile information and normalize it. The function\nsignature is <code>async function(credentials, params, get)</code> where:\n<ul>\n<li>\n<code>credentials</code> - the credentials object. Change the object directly within the function\n(profile information is typically stored under <code>credentials.profile</code>).</li>\n<li>\n<code>params</code> - the parsed information received from the provider (e.g. token, secret, and\nother custom fields).</li>\n<li>\n<code>get</code> - an OAuth helper function to make authenticated requests using the credentials\nreceived. The <code>get</code> function signature is <code>async function(uri, params)</code> where:\n<ul>\n<li>\n<code>uri</code> - the requested resource URI (<strong>bell</strong> will add the token or authentication\nheader as needed).</li>\n<li>\n<code>params</code> - any URI query parameters (cannot include them in the URI due to signature\nrequirements).</li>\n<li>returns the parsed profile response object.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><code>password</code> - the cookie encryption password. Used to encrypt the temporary state cookie used by\nthe module in between the authorization protocol steps.</p>\n</li>\n<li>\n<p><code>clientId</code> - the OAuth client identifier (consumer key).</p>\n</li>\n<li>\n<p><code>clientSecret</code> - the OAuth client secret (consumer secret). This is usually a client password\nformatted as a <em>string</em>, but to allow <a href=\"https://tools.ietf.org/html/rfc6749#section-2.3\" rel=\"nofollow\">OAuth2 custom client authentication</a>\n(e.g. client certificate-based authentication), this option can be passed as an <em>object</em>. This\nobject will be merged with the Wreck request object used to call the token endpoint. Such an\nobject can contain custom HTTP headers or TLS options (e.g.\n<code>{ agent: new Https.Agent({ cert: myClientCert, key: myClientKey}) }</code>).</p>\n</li>\n<li>\n<p><code>forceHttps</code> - A boolean indicating whether or not you want the redirect_uri to be forced to\nhttps. Useful if your hapi application runs as http, but is accessed through https.</p>\n</li>\n<li>\n<p><code>location</code> - Set the base redirect_uri manually if it cannot be inferred properly from server\nsettings. Useful to override port, protocol, and host if proxied or forwarded. It may be passed\neither as a string (in which case request.path is appended for you), or a function which takes\nthe client's <code>request</code> and returns a non-empty string, which is used as provided. In both cases,\nan empty string will result in default processing just as if the <code>location</code> option had not been\nspecified.</p>\n</li>\n</ul>\n<p>Each strategy accepts the following optional settings:</p>\n<ul>\n<li>\n<code>cookie</code> - the name of the cookie used to manage the temporary state. Defaults to\n<code>'bell-provider'</code> where 'provider' is the provider name. For\nexample, the Twitter cookie name defaults to <code>'bell-twitter'</code>.</li>\n<li>\n<code>isSameSite</code> - sets the cookie same site option. Defaults to <code>Strict</code>.</li>\n<li>\n<code>isSecure</code> - sets the cookie secure flag. Defaults to <code>true</code>.</li>\n<li>\n<code>isHttpOnly</code> - sets the cookie HTTP only flag. Defaults to <code>true</code>.</li>\n<li>\n<code>ttl</code> - cookie time-to-live in milliseconds. Defaults to <code>null</code> (session time-life - cookies are\ndeleted when the browser is closed).</li>\n<li>\n<code>domain</code> - the domain scope. Defaults to <code>null</code> (no domain).</li>\n<li>\n<code>providerParams</code> - provider-specific query parameters for the authentication endpoint. It may be\npassed either as an object to merge into the query string, or a function which takes the client's\n<code>request</code> and returns an object. Each provider supports its own set of parameters which customize\nthe user's login experience. For example:\n<ul>\n<li>Facebook supports <code>display</code> ('page', 'popup', or 'touch'), <code>auth_type</code>, <code>auth_nonce</code>.</li>\n<li>Google supports <code>access_type</code>, <code>approval_prompt</code>, <code>prompt</code>, <code>login_hint</code>, <code>user_id</code>, <code>hd</code>.</li>\n<li>Twitter supports <code>force_login</code>, <code>screen_name</code>.</li>\n<li>Linkedin supports <code>fields</code>.</li>\n</ul>\n</li>\n<li>\n<code>allowRuntimeProviderParams</code> - allows passing query parameters from a <strong>bell</strong> protected endpoint\nto the auth request. It will merge the query params you pass along with the providerParams and\nany other predefined ones. Be aware that this will override predefined query parameters! Default\nto <code>false</code>.</li>\n<li>\n<code>scope</code> - Each built-in vendor comes with the required scope for basic profile information. Use\n<code>scope</code> to specify a different scope as required by your application. It may be passed either as\nan object to merge into the query string, or a function which takes the client's <code>request</code> and\nreturns an object. Consult the provider for their specific supported scopes.</li>\n<li>\n<code>skipProfile</code> - skips obtaining a user profile from the provider. Useful if you need specific\n<code>scope</code>s, but not the user profile. Defaults to <code>false</code>.</li>\n<li>\n<code>config</code> - a configuration object used to customize the provider settings:\n<ul>\n<li>Twitter:\n<ul>\n<li><code>extendedProfile</code></li>\n<li><code>getMethod</code></li>\n</ul>\n</li>\n<li>GitHub and Phabricator:\n<ul>\n<li>\n<code>uri</code> - allows pointing to a private enterprise installation (e.g.\n<code>'https://vpn.example.com'</code>). See <a href=\"https://github.com/hapijs/bell/blob/master/Providers.md\">Providers documentation</a> for more\ninformation.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>profileParams</code> - an object of key-value pairs that specify additional URL query parameters to\nsend with the profile request to the provider. The built-in <code>facebook</code> provider, for example,\ncould have <code>fields</code> specified to determine the fields returned from the user's graph, which would\nthen be available to you in the <code>auth.credentials.profile.raw</code> object.</li>\n<li>\n<code>runtimeStateCallback</code> - allows passing additional OAuth state from initial request. This must be\na function returning a string, which will be appended to the <strong>bell</strong> internal <code>state</code> parameter\nfor OAuth code flow.</li>\n</ul>\n<h3>\n<a id=\"authentication-information\" class=\"anchor\" href=\"#authentication-information\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Authentication information</h3>\n<p>On route handlers, the <a href=\"https://hapi.dev/api/#request.auth\" rel=\"nofollow\">authentication object</a> may contain one or more of the following properties depending on your route configuration and whether the authentication process was completed successfully or not:</p>\n<h4>\n<a id=\"always-present\" class=\"anchor\" href=\"#always-present\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Always present</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">credentials</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">provider</span>: <span class=\"pl-v\">String</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// provider name</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"present-on-successful-authentication\" class=\"anchor\" href=\"#present-on-successful-authentication\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Present on successful authentication</h4>\n<h5>\n<a id=\"oauth-protocol\" class=\"anchor\" href=\"#oauth-protocol\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>OAuth protocol</h5>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">credentials</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">token</span>: <span class=\"pl-v\">String</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">secret</span>: <span class=\"pl-v\">String</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">query</span>: <span class=\"pl-v\">Object</span> <span class=\"pl-c\">// sign-in request query params</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<h5>\n<a id=\"oauth2-protocol\" class=\"anchor\" href=\"#oauth2-protocol\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>OAuth2 protocol</h5>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">credentials</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">token</span>: <span class=\"pl-v\">String</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">refreshToken</span>: <span class=\"pl-v\">String</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">expiresIn</span>: <span class=\"pl-v\">Number</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">query</span>: <span class=\"pl-v\">Object</span> <span class=\"pl-c\">// sign-in request query params</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">artifacts</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Object</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// OAuth token payload response</span></pre></div>\n<h5>\n<a id=\"present-on-failed-authentication-routeauthmodetry\" class=\"anchor\" href=\"#present-on-failed-authentication-routeauthmodetry\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Present on failed authentication (route.auth.mode=try)</h5>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">credentials</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">query</span>: <span class=\"pl-v\">Object</span> <span class=\"pl-c\">// sign-in request query params</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"advanced-usage\" class=\"anchor\" href=\"#advanced-usage\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Advanced Usage</h3>\n<h4>\n<a id=\"configuration-via-environment-variables\" class=\"anchor\" href=\"#configuration-via-environment-variables\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Configuration via Environment Variables</h4>\n<p>The <code>server.auth.strategy()</code> method supports string representations of its boolean and number typed\noptions. For example, <code>forceHttps</code> can be set to 'true', 'false', 'yes', or 'no'. In effect, this\nallows you to configure any strategy option using environment variables.</p>\n<h4>\n<a id=\"handling-errors\" class=\"anchor\" href=\"#handling-errors\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Handling Errors</h4>\n<p>By default, <strong>bell</strong> will reply back with an internal error (500) on most authentication errors due\nto the nature of the OAuth protocol. There is little that can be done to recover from errors as\nalmost all of them are caused by implementation or deployment issues.</p>\n<p>If you would like to display a useful error page instead of the default JSON response, use the\n<strong>hapi</strong> <a href=\"https://hapi.dev/api#error-transformation\" rel=\"nofollow\"><code>onPreResponse</code></a> extension point to transform\nthe error into a useful page or to redirect the user to another destination.</p>\n<p>Another way to handle authentication errors is within the route handler. By default, an\nauthentication error will cause the handler to be skipped. However, if the authentication mode is\nset to <code>'try'</code> instead of <code>'required'</code>, the handler will still be called. In this case, the\n<code>request.auth.isAuthenticated</code> must be checked to test if authentication failed. In that case,\n<code>request.auth.error</code> will contain the error.</p>\n<h4>\n<a id=\"token-refresh\" class=\"anchor\" href=\"#token-refresh\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Token Refresh</h4>\n<p>To keep track of the token expiry time, <code>request.auth.credentials.expiresIn</code> provides you the\nduration (in seconds) after which you could send a refresh token request using the\n<code>request.auth.credentials.refreshToken</code> to get a new token.</p>\n<h4>\n<a id=\"simulated-authentication\" class=\"anchor\" href=\"#simulated-authentication\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Simulated authentication</h4>\n<p>Testing applications using third-party login can be challenging given the lack of user interaction\nto perform the third-party login flow as well as the multiple steps required. To assist in testing\nsuch application without having to modify the application with custom code, <strong>Bell</strong> provides an\noverride method <code>Bell.simulate()</code> which puts the module into simulation mode and any strategies\ncreated while it is in this mode will return the simulated credentials.</p>\n<p>The <code>Bell.simulate(credentialsFunc)</code> takes a single argument:</p>\n<ul>\n<li>\n<p><code>credentialsFunc</code> - a function called for each incoming request to the protected resource that\nshould return the credentials object to be set in <code>request.auth.credentials</code>. Note that <strong>bell</strong>\nwill set the default keys automatically if not present except for the provider-specific values.</p>\n<p>has the signature <code>function(request)</code> where:</p>\n<ul>\n<li>\n<code>request</code> - the <strong>hapi</strong> request object.</li>\n</ul>\n</li>\n</ul>\n<p>Note that you must call <code>Bell.simulate()</code> before the module is registered by your application and\nneed to call <code>Bell.simulate(false)</code> to stop it from simulating authentication.</p>\n<h3>\n<a id=\"usage-without-a-strategy\" class=\"anchor\" href=\"#usage-without-a-strategy\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Usage without a strategy</h3>\n<p>Sometimes, you want to use bell without using specifying a Hapi strategy. This can be the case when\ncombining the auth logic together with another module.</p>\n<p><strong>bell</strong> exposes an oauth object in its plugin. Therefore, <code>server.plugins.bell.oauth</code> now has all\nthat's needed. For example, calling the <code>v2</code> method with all the settings documented above, will\nhandle the oauth2 flow.</p>\n<h3>\n<a id=\"customized-scope-and-params\" class=\"anchor\" href=\"#customized-scope-and-params\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Customized Scope and Params</h3>\n<p>You can pass a function, rather than an object, into the <code>providerParams</code> and <code>scope</code> config\noptions to allow you to customize the scope or parameters based on the user's request. For example,\nthis may be used you want people to be able to log in with a provider (and only need some basic\nuser information) but also want to let users authorize your application to post messages or status\nupdates on their behalf.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">strategy</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'twitter'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'bell'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">provider</span>: <span class=\"pl-s\">'twitter'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">password</span>: <span class=\"pl-s\">'some cookie password'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">location</span>: <span class=\"pl-s\">'http://example.com/oauth'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">scope</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">scopes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-s\">'public_profile'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'email'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">query</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">wantsSharePermission</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-s1\">scopes</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'publish_actions'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">scopes</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n",
      "intro": "### Introduction\n\n**bell** ships with built-in support for authentication using `ArcGIS Online`, `Auth0`, `AzureAD`,\n`BitBucket`, `Cognito`, `DigitalOcean`, `Discord`, `Dropbox`, `Facebook`, `Fitbit`, `Foursquare`,\n`GitHub`, `GitLab`, `Google Plus`, `Google`, `Instagram`, `LinkedIn`, `Medium`, `Meetup`, `Mixer`,\n`Nest`, `Office365`, `Okta`, `Phabricator`, `Pingfed`, `Pinterest`, `Reddit`, `Salesforce`, `Slack`,\n`Spotify`, `Stripe`, `trakt.tv`, `Tumblr`, `Twitch`, `Twitter`, `VK`, `Wordpress`, `Windows Live`,\nand `Yahoo`.\n\nIt also supports any compliant `OAuth 1.0a` and `OAuth 2.0` based login services with a simple\nconfiguration object.\n\n[**Providers Documentation**](https://hapi.dev/family/bell/providers)\n",
      "example": "",
      "usage": "### Usage\n\n**bell** works by adding a login endpoint and setting it to use a **bell**-based authentication strategy. **bell** will manage the third-party authentication flow and will only call the handler if the user successfully authenticated. The handler function is then used to examine the third-party credentials (e.g. lookup an existing account or offer a registration page), setup an active session, and redirect to the actual application.\n\n**bell** does not maintain a session beyond a temporary state between the authorization flow. If a user authenticated once when accessing the endpoint, they will have to authenticate again. This means **bell** cannot be used alone as a login system except for single-page applications that require loading a single resource. Once the handler is called, the application must set its own\nsession management. A common solution is to combine **bell** with the [**@hapi/cookie**](https://hapi.dev/family/cookie) authentication scheme plugin.\n\n```js\n// Load modules\n\nconst Bell = require('@hapi/bell');\nconst Hapi = require('@hapi/hapi');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.start = async function () {\n\n    const server = Hapi.server({ port: 8000 });\n\n    // Register bell with the server\n\n    await server.register(Bell);\n\n    // Declare an authentication strategy using the bell scheme\n    // with the name of the provider, cookie encryption password,\n    // and the OAuth client credentials.\n\n    server.auth.strategy('twitter', 'bell', {\n        provider: 'twitter',\n        password: 'cookie_encryption_password_secure',\n        clientId: 'my_twitter_client_id',\n        clientSecret: 'my_twitter_client_secret',\n        isSecure: false     // Terrible idea but required if not using HTTPS especially if developing locally\n    });\n\n    // Use the 'twitter' authentication strategy to protect the\n    // endpoint handling the incoming authentication credentials.\n    // This endpoints usually looks up the third party account in\n    // the database and sets some application state (cookie) with\n    // the local application account information.\n\n    server.route({\n        method: ['GET', 'POST'],    // Must handle both GET and POST\n        path: '/login',             // The callback endpoint registered with the provider\n        options: {\n            auth: {\n              mode: 'try',\n              strategy: 'twitter'\n            },\n            handler: function (request, h) {\n\n                if (!request.auth.isAuthenticated) {\n                    return `Authentication failed due to: ${request.auth.error.message}`;\n                }\n\n                // Perform any account lookup or registration, setup local session,\n                // and redirect to the application. The third-party credentials are\n                // stored in request.auth.credentials. Any query parameters from\n                // the initial request are passed back via request.auth.credentials.query.\n\n                return h.redirect('/home');\n            }\n        }\n    });\n\n    await server.start();\n};\n\ninternals.start();\n```\n\n",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Third-party login plugin for hapi.js.",
    "forks": 214,
    "stars": 621,
    "date": "2020-08-22T17:46:03Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/bell"
  },
  "boom": {
    "name": "boom",
    "versions": [
      {
        "name": "9.1.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "9.1.0"
    ],
    "api": true,
    "9.1.0": {
      "menu": "- [`reformat()`](#reformatdebug)\n- [Helper Methods](#helper-methods)\n  - [`new Boom()`](#new-boomboommessage-options)\n  - [`boomify()`](#boomifyerr-options)\n  - [`isBoom()`](#isboomerr-statuscode)\n- [HTTP 4xx Errors](#http-4xx-errors)\n  - [`badRequest()`](#boombadrequestmessage-data)\n  - [`unauthorized()`](#boomunauthorizedmessage-scheme-attributes)\n  - [`paymentRequired()`](#boompaymentrequiredmessage-data)\n  - [`forbidden()`](#boomforbiddenmessage-data)\n  - [`notFound()`](#boomnotfoundmessage-data)\n  - [`methodNotAllowed()`](#boommethodnotallowedmessage-data-allow)\n  - [`notAcceptable()`](#boomnotacceptablemessage-data)\n  - [`proxyAuthRequired()`](#boomproxyauthrequiredmessage-data)\n  - [`clientTimeout()`](#boomclienttimeoutmessage-data)\n  - [`conflict()`](#boomconflictmessage-data)\n  - [`resourceGone()`](#boomresourcegonemessage-data)\n  - [`lengthRequired()`](#boomlengthrequiredmessage-data)\n  - [`preconditionFailed()`](#boompreconditionfailedmessage-data)\n  - [`entityTooLarge()`](#boomentitytoolargemessage-data)\n  - [`uriTooLong()`](#boomuritoolongmessage-data)\n  - [`unsupportedMediaType()`](#boomunsupportedmediatypemessage-data)\n  - [`rangeNotSatisfiable()`](#boomrangenotsatisfiablemessage-data)\n  - [`expectationFailed()`](#boomexpectationfailedmessage-data)\n  - [`teapot()`](#boomteapotmessage-data)\n  - [`badData()`](#boombaddatamessage-data)\n  - [`locked()`](#boomlockedmessage-data)\n  - [`failedDependency()`](#boomfaileddependencymessage-data)\n  - [`tooEarly()`](#boomtooearlymessage-data)\n  - [`preconditionRequired()`](#boompreconditionrequiredmessage-data)\n  - [`tooManyRequests()`](#boomtoomanyrequestsmessage-data)\n  - [`illegal()`](#boomillegalmessage-data)\n- [HTTP 5xx Errors](#http-5xx-errors)\n  - [`badImplementation()` - (*alias: `internal`*)](#boombadimplementationmessage-data---alias-internal)\n  - [`notImplemented()`](#boomnotimplementedmessage-data)\n  - [`badGateway()`](#boombadgatewaymessage-data)\n  - [`serverUnavailable()`](#boomserverunavailablemessage-data)\n  - [`gatewayTimeout()`](#boomgatewaytimeoutmessage-data)",
      "api": "<p><strong>boom</strong> provides a set of utilities for returning HTTP errors. Each utility returns a <code>Boom</code>\nerror response object which includes the following properties:</p>\n<ul>\n<li>\n<code>isBoom</code> - if <code>true</code>, indicates this is a <code>Boom</code> object instance. Note that this boolean should\nonly be used if the error is an instance of <code>Error</code>. If it is not certain, use <code>Boom.isBoom()</code>\ninstead.</li>\n<li>\n<code>isServer</code> - convenience bool indicating status code &gt;= 500.</li>\n<li>\n<code>message</code> - the error message.</li>\n<li>\n<code>typeof</code> - the constructor used to create the error (e.g. <code>Boom.badRequest</code>).</li>\n<li>\n<code>output</code> - the formatted response. Can be directly manipulated after object construction to return a custom\nerror response. Allowed root keys:\n<ul>\n<li>\n<code>statusCode</code> - the HTTP status code (typically 4xx or 5xx).</li>\n<li>\n<code>headers</code> - an object containing any HTTP headers where each key is a header name and value is the header content.</li>\n<li>\n<code>payload</code> - the formatted object used as the response payload (stringified). Can be directly manipulated but any\nchanges will be lost\nif <code>reformat()</code> is called. Any content allowed and by default includes the following content:\n<ul>\n<li>\n<code>statusCode</code> - the HTTP status code, derived from <code>error.output.statusCode</code>.</li>\n<li>\n<code>error</code> - the HTTP status message (e.g. 'Bad Request', 'Internal Server Error') derived from <code>statusCode</code>.</li>\n<li>\n<code>message</code> - the error message derived from <code>error.message</code>.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>inherited <code>Error</code> properties.</li>\n</ul>\n<p>The <code>Boom</code> object also supports the following method:</p>\n<h4>\n<a id=\"reformatdebug\" class=\"anchor\" href=\"#reformatdebug\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>reformat(debug)</code>\n</h4>\n<p>Rebuilds <code>error.output</code> using the other object properties where:</p>\n<ul>\n<li>\n<code>debug</code> - a Boolean that, when <code>true</code>, causes Internal Server Error messages to be left in tact. Defaults to <code>false</code>, meaning that Internal Server Error messages are redacted.</li>\n</ul>\n<p>Note that <code>Boom</code> object will return <code>true</code> when used with <code>instanceof Boom</code>, but do not use the\n<code>Boom</code> prototype (they are either plain <code>Error</code> or the error prototype passed in). This means\n<code>Boom</code> objects should only be tested using <code>instanceof Boom</code> or <code>Boom.isBoom()</code> but not by looking\nat the prototype or contructor information. This limitation is to avoid manipulating the prototype\nchain which is very slow.</p>\n<h4>\n<a id=\"helper-methods\" class=\"anchor\" href=\"#helper-methods\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Helper Methods</h4>\n<h5>\n<a id=\"new-boomboommessage-options\" class=\"anchor\" href=\"#new-boomboommessage-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>new Boom.Boom(message, [options])</code>\n</h5>\n<p>Creates a new <code>Boom</code> object using the provided <code>message</code> and then calling\n<a href=\"#boomifyerr-options\"><code>boomify()</code></a> to decorate the error with the <code>Boom</code> properties, where:</p>\n<ul>\n<li>\n<code>message</code> - the error message. If <code>message</code> is an error, it is the same as calling\n<a href=\"#boomifyerr-options\"><code>boomify()</code></a> directly.</li>\n<li>\n<code>options</code> - and optional object where:\n<ul>\n<li>\n<code>statusCode</code> - the HTTP status code. Defaults to <code>500</code> if no status code is already set.</li>\n<li>\n<code>data</code> - additional error information (assigned to <code>error.data</code>).</li>\n<li>\n<code>decorate</code> - an option with extra properties to set on the error object.</li>\n<li>\n<code>ctor</code> - constructor reference used to crop the exception call stack output.</li>\n<li>if <code>message</code> is an error object, also supports the other <a href=\"#boomifyerr-options\"><code>boomify()</code></a>\noptions.</li>\n</ul>\n</li>\n</ul>\n<h5>\n<a id=\"boomifyerr-options\" class=\"anchor\" href=\"#boomifyerr-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>boomify(err, [options])</code>\n</h5>\n<p>Decorates an error with the <code>Boom</code> properties where:</p>\n<ul>\n<li>\n<code>err</code> - the <code>Error</code> object to decorate.</li>\n<li>\n<code>options</code> - optional object with the following optional settings:\n<ul>\n<li>\n<code>statusCode</code> - the HTTP status code. Defaults to <code>500</code> if no status code is already set and <code>err</code> is not a <code>Boom</code> object.</li>\n<li>\n<code>message</code> - error message string. If the error already has a message, the provided <code>message</code> is added as a prefix.\nDefaults to no message.</li>\n<li>\n<code>decorate</code> - an option with extra properties to set on the error object.</li>\n<li>\n<code>override</code> - if <code>false</code>, the <code>err</code> provided is a <code>Boom</code> object, and a <code>statusCode</code> or <code>message</code> are provided,\nthe values are ignored. Defaults to <code>true</code> (apply the provided <code>statusCode</code> and <code>message</code> options to the error\nregardless of its type, <code>Error</code> or <code>Boom</code> object).</li>\n</ul>\n</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">var</span> <span class=\"pl-s1\">error</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Error</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Unexpected input'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">boomify</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">error</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">statusCode</span>: <span class=\"pl-c1\">400</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h5>\n<a id=\"isboomerr-statuscode\" class=\"anchor\" href=\"#isboomerr-statuscode\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>isBoom(err, [statusCode])</code>\n</h5>\n<p>Identifies whether an error is a <code>Boom</code> object. Same as calling <code>instanceof Boom.Boom</code>.</p>\n<ul>\n<li>\n<code>err</code> - Error object.</li>\n<li>\n<code>statusCode</code> - optional status code.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">isBoom</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">badRequest</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// true</span>\n<span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">isBoom</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">badRequest</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">400</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// true</span></pre></div>\n<h4>\n<a id=\"http-4xx-errors\" class=\"anchor\" href=\"#http-4xx-errors\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>HTTP 4xx Errors</h4>\n<h5>\n<a id=\"boombadrequestmessage-data\" class=\"anchor\" href=\"#boombadrequestmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.badRequest([message], [data])</code>\n</h5>\n<p>Returns a 400 Bad Request error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">badRequest</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'invalid query'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">400</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Bad Request<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>invalid query<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomunauthorizedmessage-scheme-attributes\" class=\"anchor\" href=\"#boomunauthorizedmessage-scheme-attributes\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.unauthorized([message], [scheme], [attributes])</code>\n</h5>\n<p>Returns a 401 Unauthorized error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>scheme</code> can be one of the following:\n<ul>\n<li>an authentication scheme name</li>\n<li>an array of string values. These values will be separated by ', ' and set to the 'WWW-Authenticate' header.</li>\n</ul>\n</li>\n<li>\n<code>attributes</code> - an object of values to use while setting the 'WWW-Authenticate' header. This value is only used\nwhen <code>scheme</code> is a string, otherwise it is ignored. Every key/value pair will be included in the\n'WWW-Authenticate' in the format of 'key=\"value\"' as well as in the response payload under the <code>attributes</code> key.  Alternatively value can be a string which is use to set the value of the scheme, for example setting the token value for negotiate header.  If string is used message parameter must be null.\n<code>null</code> and <code>undefined</code> will be replaced with an empty string. If <code>attributes</code> is set, <code>message</code> will be used as\nthe 'error' segment of the 'WWW-Authenticate' header. If <code>message</code> is unset, the 'error' segment of the header\nwill not be present and <code>isMissing</code> will be true on the error object.</li>\n</ul>\n<p>If either <code>scheme</code> or <code>attributes</code> are set, the resultant <code>Boom</code> object will have the\n'WWW-Authenticate' header set for the response.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">unauthorized</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'invalid password'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response:</p>\n<div class=\"highlight highlight-source-json\"><pre><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>payload<span class=\"pl-pds\">\"</span></span>: {\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">401</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Unauthorized<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>invalid password<span class=\"pl-pds\">\"</span></span>\n},\n<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>headers<span class=\"pl-pds\">\"</span></span> {}</pre></div>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">unauthorized</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'invalid password'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'sample'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response:</p>\n<div class=\"highlight highlight-source-json\"><pre><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>payload<span class=\"pl-pds\">\"</span></span>: {\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">401</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Unauthorized<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>invalid password<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>attributes<span class=\"pl-pds\">\"</span></span>: {\n        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>invalid password<span class=\"pl-pds\">\"</span></span>\n    }\n},\n<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>headers<span class=\"pl-pds\">\"</span></span> {\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>WWW-Authenticate<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sample error=<span class=\"pl-cce\">\\\"</span>invalid password<span class=\"pl-cce\">\\\"</span><span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">unauthorized</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'Negotiate'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'VGhpcyBpcyBhIHRlc3QgdG9rZW4='</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response:</p>\n<div class=\"highlight highlight-source-json\"><pre><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>payload<span class=\"pl-pds\">\"</span></span>: {\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">401</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Unauthorized<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>attributes<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>VGhpcyBpcyBhIHRlc3QgdG9rZW4=<span class=\"pl-pds\">\"</span></span>\n},\n<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>headers<span class=\"pl-pds\">\"</span></span> {\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>WWW-Authenticate<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Negotiate VGhpcyBpcyBhIHRlc3QgdG9rZW4=<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">unauthorized</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'invalid password'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'sample'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">ttl</span>: <span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">cache</span>: <span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">foo</span>: <span class=\"pl-s\">'bar'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response:</p>\n<div class=\"highlight highlight-source-json\"><pre><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>payload<span class=\"pl-pds\">\"</span></span>: {\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">401</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Unauthorized<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>invalid password<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>attributes<span class=\"pl-pds\">\"</span></span>: {\n        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>invalid password<span class=\"pl-pds\">\"</span></span>,\n        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ttl<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">0</span>,\n        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cache<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>,\n        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>foo<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bar<span class=\"pl-pds\">\"</span></span>\n    }\n},\n<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>headers<span class=\"pl-pds\">\"</span></span> {\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>WWW-Authenticate<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sample ttl=<span class=\"pl-cce\">\\\"</span>0<span class=\"pl-cce\">\\\"</span>, cache=<span class=\"pl-cce\">\\\"\\\"</span>, foo=<span class=\"pl-cce\">\\\"</span>bar<span class=\"pl-cce\">\\\"</span>, error=<span class=\"pl-cce\">\\\"</span>invalid password<span class=\"pl-cce\">\\\"</span><span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boompaymentrequiredmessage-data\" class=\"anchor\" href=\"#boompaymentrequiredmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.paymentRequired([message], [data])</code>\n</h5>\n<p>Returns a 402 Payment Required error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">paymentRequired</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'bandwidth used'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">402</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Payment Required<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bandwidth used<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomforbiddenmessage-data\" class=\"anchor\" href=\"#boomforbiddenmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.forbidden([message], [data])</code>\n</h5>\n<p>Returns a 403 Forbidden error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">forbidden</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'try again some time'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">403</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Forbidden<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>try again some time<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomnotfoundmessage-data\" class=\"anchor\" href=\"#boomnotfoundmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.notFound([message], [data])</code>\n</h5>\n<p>Returns a 404 Not Found error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">notFound</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'missing'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">404</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Not Found<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>missing<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boommethodnotallowedmessage-data-allow\" class=\"anchor\" href=\"#boommethodnotallowedmessage-data-allow\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.methodNotAllowed([message], [data], [allow])</code>\n</h5>\n<p>Returns a 405 Method Not Allowed error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n<li>\n<code>allow</code> - optional string or array of strings (to be combined and separated by ', ') which is set to the 'Allow' header.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">methodNotAllowed</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'that method is not allowed'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">405</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Method Not Allowed<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>that method is not allowed<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomnotacceptablemessage-data\" class=\"anchor\" href=\"#boomnotacceptablemessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.notAcceptable([message], [data])</code>\n</h5>\n<p>Returns a 406 Not Acceptable error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">notAcceptable</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'unacceptable'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">406</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Not Acceptable<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>unacceptable<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomproxyauthrequiredmessage-data\" class=\"anchor\" href=\"#boomproxyauthrequiredmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.proxyAuthRequired([message], [data])</code>\n</h5>\n<p>Returns a 407 Proxy Authentication Required error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">proxyAuthRequired</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'auth missing'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">407</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Proxy Authentication Required<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>auth missing<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomclienttimeoutmessage-data\" class=\"anchor\" href=\"#boomclienttimeoutmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.clientTimeout([message], [data])</code>\n</h5>\n<p>Returns a 408 Request Time-out error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">clientTimeout</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'timed out'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">408</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Request Time-out<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>timed out<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomconflictmessage-data\" class=\"anchor\" href=\"#boomconflictmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.conflict([message], [data])</code>\n</h5>\n<p>Returns a 409 Conflict error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">conflict</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'there was a conflict'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">409</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Conflict<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>there was a conflict<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomresourcegonemessage-data\" class=\"anchor\" href=\"#boomresourcegonemessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.resourceGone([message], [data])</code>\n</h5>\n<p>Returns a 410 Gone error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resourceGone</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'it is gone'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">410</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Gone<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>it is gone<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomlengthrequiredmessage-data\" class=\"anchor\" href=\"#boomlengthrequiredmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.lengthRequired([message], [data])</code>\n</h5>\n<p>Returns a 411 Length Required error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">lengthRequired</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'length needed'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">411</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Length Required<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>length needed<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boompreconditionfailedmessage-data\" class=\"anchor\" href=\"#boompreconditionfailedmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.preconditionFailed([message], [data])</code>\n</h5>\n<p>Returns a 412 Precondition Failed error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">preconditionFailed</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">412</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Precondition Failed<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomentitytoolargemessage-data\" class=\"anchor\" href=\"#boomentitytoolargemessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.entityTooLarge([message], [data])</code>\n</h5>\n<p>Returns a 413 Request Entity Too Large error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">entityTooLarge</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'too big'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">413</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Request Entity Too Large<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>too big<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomuritoolongmessage-data\" class=\"anchor\" href=\"#boomuritoolongmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.uriTooLong([message], [data])</code>\n</h5>\n<p>Returns a 414 Request-URI Too Large error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">uriTooLong</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'uri is too long'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">414</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Request-URI Too Large<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>uri is too long<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomunsupportedmediatypemessage-data\" class=\"anchor\" href=\"#boomunsupportedmediatypemessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.unsupportedMediaType([message], [data])</code>\n</h5>\n<p>Returns a 415 Unsupported Media Type error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">unsupportedMediaType</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'that media is not supported'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">415</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Unsupported Media Type<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>that media is not supported<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomrangenotsatisfiablemessage-data\" class=\"anchor\" href=\"#boomrangenotsatisfiablemessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.rangeNotSatisfiable([message], [data])</code>\n</h5>\n<p>Returns a 416 Requested Range Not Satisfiable error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">rangeNotSatisfiable</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">416</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Requested Range Not Satisfiable<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomexpectationfailedmessage-data\" class=\"anchor\" href=\"#boomexpectationfailedmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.expectationFailed([message], [data])</code>\n</h5>\n<p>Returns a 417 Expectation Failed error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">expectationFailed</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'expected this to work'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">417</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Expectation Failed<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>expected this to work<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomteapotmessage-data\" class=\"anchor\" href=\"#boomteapotmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.teapot([message], [data])</code>\n</h5>\n<p>Returns a 418 I'm a Teapot error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">teapot</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'sorry, no coffee...'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">418</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I'm a Teapot<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Sorry, no coffee...<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boombaddatamessage-data\" class=\"anchor\" href=\"#boombaddatamessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.badData([message], [data])</code>\n</h5>\n<p>Returns a 422 Unprocessable Entity error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">badData</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'your data is bad and you should feel bad'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">422</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Unprocessable Entity<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>your data is bad and you should feel bad<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomlockedmessage-data\" class=\"anchor\" href=\"#boomlockedmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.locked([message], [data])</code>\n</h5>\n<p>Returns a 423 Locked error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">locked</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'this resource has been locked'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">423</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Locked<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>this resource has been locked<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomfaileddependencymessage-data\" class=\"anchor\" href=\"#boomfaileddependencymessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.failedDependency([message], [data])</code>\n</h5>\n<p>Returns a 424 Failed Dependency error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">failedDependency</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'an external resource failed'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">424</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed Dependency<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>an external resource failed<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomtooearlymessage-data\" class=\"anchor\" href=\"#boomtooearlymessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.tooEarly([message], [data])</code>\n</h5>\n<p>Returns a 425 Too Early error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">tooEarly</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'the server is unwilling to risk processing the request'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">425</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Too Early<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>the server is unwilling to risk processing the request<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boompreconditionrequiredmessage-data\" class=\"anchor\" href=\"#boompreconditionrequiredmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.preconditionRequired([message], [data])</code>\n</h5>\n<p>Returns a 428 Precondition Required error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">preconditionRequired</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'you must supply an If-Match header'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">428</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Precondition Required<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>you must supply an If-Match header<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomtoomanyrequestsmessage-data\" class=\"anchor\" href=\"#boomtoomanyrequestsmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.tooManyRequests([message], [data])</code>\n</h5>\n<p>Returns a 429 Too Many Requests error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">tooManyRequests</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'you have exceeded your request limit'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">429</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Too Many Requests<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>you have exceeded your request limit<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomillegalmessage-data\" class=\"anchor\" href=\"#boomillegalmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.illegal([message], [data])</code>\n</h5>\n<p>Returns a 451 Unavailable For Legal Reasons error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">illegal</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'you are not permitted to view this resource for legal reasons'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">451</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Unavailable For Legal Reasons<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>you are not permitted to view this resource for legal reasons<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h4>\n<a id=\"http-5xx-errors\" class=\"anchor\" href=\"#http-5xx-errors\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>HTTP 5xx Errors</h4>\n<p>All 500 errors hide your message from the end user.</p>\n<h5>\n<a id=\"boombadimplementationmessage-data---alias-internal\" class=\"anchor\" href=\"#boombadimplementationmessage-data---alias-internal\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.badImplementation([message], [data])</code> - (<em>alias: <code>internal</code></em>)</h5>\n<p>Returns a 500 Internal Server Error error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">badImplementation</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'terrible implementation'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">500</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Internal Server Error<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>An internal server error occurred<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomnotimplementedmessage-data\" class=\"anchor\" href=\"#boomnotimplementedmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.notImplemented([message], [data])</code>\n</h5>\n<p>Returns a 501 Not Implemented error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">notImplemented</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'method not implemented'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">501</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Not Implemented<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>method not implemented<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boombadgatewaymessage-data\" class=\"anchor\" href=\"#boombadgatewaymessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.badGateway([message], [data])</code>\n</h5>\n<p>Returns a 502 Bad Gateway error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">badGateway</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'that is a bad gateway'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">502</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Bad Gateway<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>that is a bad gateway<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomserverunavailablemessage-data\" class=\"anchor\" href=\"#boomserverunavailablemessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.serverUnavailable([message], [data])</code>\n</h5>\n<p>Returns a 503 Service Unavailable error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">serverUnavailable</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'unavailable'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">503</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Service Unavailable<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>message<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>unavailable<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h5>\n<a id=\"boomgatewaytimeoutmessage-data\" class=\"anchor\" href=\"#boomgatewaytimeoutmessage-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Boom.gatewayTimeout([message], [data])</code>\n</h5>\n<p>Returns a 504 Gateway Time-out error where:</p>\n<ul>\n<li>\n<code>message</code> - optional message.</li>\n<li>\n<code>data</code> - optional additional error data.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Boom</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">gatewayTimeout</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Generates the following response payload:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">504</span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Gateway Time-out<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "#### F.A.Q.\n\n**Q** How do I include extra information in my responses? `output.payload` is missing `data`, what gives?\n\n**A** There is a reason the values passed back in the response payloads are pretty locked down. It's mostly for security and to not leak any important information back to the client. This means you will need to put in a little more effort to include extra information about your custom error. Check out the [\"Error transformation\"](https://github.com/hapijs/hapi/blob/master/API.md#error-transformation) section in the hapi documentation.",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "HTTP-friendly error objects.",
    "forks": 199,
    "stars": 2785,
    "date": "2020-08-25T08:21:49Z",
    "updated": "Tue Aug 25 2020",
    "link": "https://github.com/hapijs/boom"
  },
  "bossy": {
    "name": "bossy",
    "versions": [
      {
        "name": "5.0.1",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "5.0.1"
    ],
    "api": true,
    "5.0.1": {
      "menu": "- [Methods](#methods)\n  - [`parse()`](#parsedefinition-options)\n  - [`usage()`](#usagedefinition-usage-options)\n- [Definition Object](#definition-object)",
      "api": "<h2>\n<a id=\"methods\" class=\"anchor\" href=\"#methods\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Methods</h2>\n<h3>\n<a id=\"parsedefinition-options\" class=\"anchor\" href=\"#parsedefinition-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>parse(definition, [options])</code>\n</h3>\n<p>Expects a <em>bossy</em> definition object and will return the parsed <code>process.argv</code> arguments provided.  If there is an error\nthen the return value will be an <code>instanceof Error</code>.</p>\n<p>Options accepts the following keys:</p>\n<ul>\n<li>\n<code>argv</code> - custom argv array value.  Defaults to process.argv.</li>\n</ul>\n<h3>\n<a id=\"usagedefinition-usage-options\" class=\"anchor\" href=\"#usagedefinition-usage-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>usage(definition, [usage], [options])</code>\n</h3>\n<p>Format a  <em>bossy</em> definition object for display in the console.  If <code>usage</code> is provided the returned value will\ninclude the usage value formatted at the top of the message.</p>\n<p>Options accepts the following keys:</p>\n<ul>\n<li>\n<code>colors</code> - Determines if colors are enabled when formatting usage.  Defaults to whatever TTY supports.</li>\n</ul>\n<h2>\n<a id=\"definition-object\" class=\"anchor\" href=\"#definition-object\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Definition Object</h2>\n<p>The definition object should be structured with each object key representing the short form of an available command\nline argument.  Each argument key supports the following properties:</p>\n<ul>\n<li>\n<code>alias</code>: A string or array of strings that can also be used as the argument name.  For example:</li>\n</ul>\n<pre><code>h: {\n    alias: 'help'\n}\n</code></pre>\n<ul>\n<li>\n<p><code>type</code>: Available types are: <code>boolean</code>, <code>range</code>, <code>number</code>, <code>string</code>, and <code>help</code>.  Defaults to <code>string</code>.</p>\n<p><code>help</code> is a special type that allows the switch to be executed even though\nother paramters are required. Use case is to display a help message and\nquit. This will bypass all other errors, so be sure to capture it. It\nbehaves like a <code>boolean</code>.</p>\n</li>\n<li>\n<p><code>multiple</code> : Boolean to indicate if the same argument can be provided multiple times. If true, the parsed value\nwill always be an array of <code>type</code>'s. Defaults to <code>false</code>.</p>\n</li>\n<li>\n<p><code>description</code>: Description message that will be returned with usage information.</p>\n</li>\n<li>\n<p><code>require</code>: Boolean to indicate if the argument is required.  Defaults to <code>false</code></p>\n</li>\n<li>\n<p><code>default</code>: A default value to assign to the argument if its not provided as an argument.</p>\n</li>\n<li>\n<p><code>valid</code>: A value or array of values that the argument is allowed to equal.</p>\n</li>\n</ul>\n",
      "intro": "",
      "example": "",
      "usage": "## Usage\n\n```js\nconst Bossy = require('@hapi/bossy');\n\nconst definition = {\n    h: {\n        description: 'Show help',\n        alias: 'help',\n        type: 'boolean'\n    },\n    n: {\n        description: 'Show your name',\n        alias: 'name'\n    }\n};\n\nconst args = Bossy.parse(definition);\n\nif (args instanceof Error) {\n    console.error(args.message);\n    return;\n}\n\nif (args.h || !args.n) {\n    console.log(Bossy.usage(definition, 'hello -n <name>'));\n    return;\n}\n\nconsole.log('Hello ' + args.n);\nconsole.log('Hello ' + args.name);\n```\n",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Command line options parser.",
    "forks": 31,
    "stars": 45,
    "date": "2020-08-22T16:47:21Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/bossy"
  },
  "bounce": {
    "name": "bounce",
    "versions": [
      {
        "name": "2.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "2.0.0"
    ],
    "api": true,
    "2.0.0": {
      "menu": "- [`rethrow()`](#rethrowerr-types-options)\n- [`ignore()`](#ignoreerr-types-options)\n- [`background()`](#backgroundoperation-action-types-options)\n- [`isBoom()`](#isboomerr)\n- [`isError()`](#iserrorerr)\n- [`isSystem()`](#issystemerr)",
      "api": "<h3>\n<a id=\"rethrowerr-types-options\" class=\"anchor\" href=\"#rethrowerr-types-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>rethrow(err, types, [options])</code>\n</h3>\n<p>Throws the error passed if it matches any of the specified rules where:</p>\n<ul>\n<li>\n<code>err</code> - the error.</li>\n<li>\n<code>type</code> - a single item or an array of items of:\n<ul>\n<li>An error constructor (e.g. <code>SyntaxError</code>).</li>\n<li>\n<code>'system'</code> - matches any languange native error or node assertions.</li>\n<li>\n<code>'boom'</code> - matches <a href=\"https://github.com/hapijs/boom\"><strong>boom</strong></a> errors.</li>\n<li>an object where each property is compared with the error and must match the error property\nvalue. All the properties in the object must match the error but do not need to include all\nthe error properties.</li>\n</ul>\n</li>\n<li>\n<code>options</code> - optional object where:\n<ul>\n<li>\n<code>decorate</code> - an object which is assigned to the <code>err</code>, copying the properties onto the error.</li>\n<li>\n<code>override</code> - an error used to override <code>err</code> when <code>err</code> matches. If used with <code>decorate</code>,\nthe <code>override</code> object is modified.</li>\n<li>\n<code>return</code> - if <code>true</code>, the error is returned instead of thrown. Defaults to <code>false</code>.</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"ignoreerr-types-options\" class=\"anchor\" href=\"#ignoreerr-types-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>ignore(err, types, [options])</code>\n</h3>\n<p>The opposite action of <code>rethrow()</code>. Ignores any errors matching the specified <code>types</code>. Any error\nnot matching is thrown after applying the <code>options</code>.</p>\n<h3>\n<a id=\"backgroundoperation-action-types-options\" class=\"anchor\" href=\"#backgroundoperation-action-types-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>background(operation, [action], [types], [options])</code>\n</h3>\n<p>Awaits for the value to resolve in the background and then apply either the <code>rethrow()</code> or <code>ignore()</code>\nactions where:</p>\n<ul>\n<li>\n<code>operation</code> - a function, promise, or value that is <code>await</code>ed on inside a <code>try...catch</code> and any\nerror thrown processed by the <code>action</code> rule.</li>\n<li>\n<code>action</code> - one of <code>'rethrow'</code> or <code>'ignore'</code>. Defaults to <code>'rethrow'</code>.</li>\n<li>\n<code>types</code> - same as the <code>types</code> argument passed to <code>rethrow()</code> or <code>ignore()</code>. Defaults to <code>'system'</code>.</li>\n<li>\n<code>options</code> - same as the <code>options</code> argument passed to <code>rethrow()</code> or <code>ignore()</code>.</li>\n</ul>\n<h3>\n<a id=\"isboomerr\" class=\"anchor\" href=\"#isboomerr\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>isBoom(err)</code>\n</h3>\n<p>Returns <code>true</code> when <code>err</code> is a <a href=\"https://github.com/hapijs/boom\"><strong>boom</strong></a> error.</p>\n<h3>\n<a id=\"iserrorerr\" class=\"anchor\" href=\"#iserrorerr\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>isError(err)</code>\n</h3>\n<p>Returns <code>true</code> when <code>err</code> is an error.</p>\n<h3>\n<a id=\"issystemerr\" class=\"anchor\" href=\"#issystemerr\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>isSystem(err)</code>\n</h3>\n<p>Return <code>true</code> when <code>err</code> is one of:</p>\n<ul>\n<li><code>EvalError</code></li>\n<li><code>RangeError</code></li>\n<li><code>ReferenceError</code></li>\n<li><code>SyntaxError</code></li>\n<li><code>TypeError</code></li>\n<li><code>URIError</code></li>\n<li>Node's <code>AssertionError</code>\n</li>\n</ul>\n",
      "intro": "## Introduction\n\nWorking with `async`/`await` introduces a new challenge in handling errors. Unlike callbacks, which\nprovide a dual mechanism for passing application errors via the callback `err` argument and\ndeveloper errors via exceptions, `await` combines these two channels into one.\n\nIt is common practice to ignore application errors in background processing or when there is no\nuseful fallback. In those cases, it is still imperative to allow developer errors to surface and\nnot get swallowed.\n\nFor more information read:\n- [Learning to Throw Again](https://medium.com/@eranhammer/learning-to-throw-again-79b498504d28)\n- [Catching without Awaiting](https://medium.com/@eranhammer/catching-without-awaiting-b2cb7df45790)\n\nFor example:\n\n```js\nasync function email(user) {\n\n    if (!user.address) {\n        throw new Error('User has no email address');\n    }\n\n    const message = 'Welcome!';\n    if (user.name) {\n        message = `Welcome ${user.name}!`;\n    }\n\n    await mailer.send(user.address, message);\n}\n\nasync function register(address, name) {\n\n    const user = { address, name };\n    const id = await db.user.insert(user);\n    user.id = id;\n\n    try {\n        await email(user);\n    }\n    catch (err) { }             // Ignore errors\n\n    return user;\n}\n```\n\nThis will fail silently every time the user has a `name` because it is reassigning a value to a\n`const` variable. However, because `email()` errors are ignored, system errors are ignored as well.\nThe idea is that `email()` can be used in both critical and non-critical paths. In the critical\npaths, errors are checked and addressed, but in the non-critical paths, errors are simply ignored.\n\nThis can be solved by adding a `rethrow()` statement:\n\n```js\nconst Bounce = require('@hapi/bounce');\n\nasync function register(address, name) {\n\n    const user = { address, name };\n    const id = await db.user.insert(user);\n    user.id = id;\n\n    try {\n        await email(user);\n    }\n    catch (err) {\n        Bounce.rethrow(err, 'system');  // Rethrows system errors and ignores application errors\n    }\n\n    return user;\n}\n```\n",
      "example": "",
      "usage": "## Usage\n",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Selective error catching and rewrite rules.",
    "forks": 22,
    "stars": 177,
    "date": "2020-08-22T17:46:48Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/bounce"
  },
  "bourne": {
    "name": "bourne",
    "versions": [
      {
        "name": "2.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "2.0.0"
    ],
    "api": true,
    "2.0.0": {
      "menu": "- [`Bourne.parse()`](#bourneparsetext-reviver-options)\n- [`Bourne.scan()`](#bournescanobj-options)",
      "api": "<h3>\n<a id=\"bourneparsetext-reviver-options\" class=\"anchor\" href=\"#bourneparsetext-reviver-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Bourne.parse(text, [reviver], [options])</code>\n</h3>\n<p>Parses a given JSON-formatted text into an object where:</p>\n<ul>\n<li>\n<code>text</code> - the JSON text string.</li>\n<li>\n<code>reviver</code> - the <code>JSON.parse()</code> optional <code>reviver</code> argument.</li>\n<li>\n<code>options</code> - optional configuration object where:\n<ul>\n<li>\n<code>protoAction</code> - optional string with one of:\n<ul>\n<li>\n<code>'error'</code> - throw a <code>SyntaxError</code> when a <code>__proto__</code> key is found. This is the default value.</li>\n<li>\n<code>'remove'</code> - deletes any <code>__proto__</code> keys from the result object.</li>\n<li>\n<code>'ignore'</code> - skips all validation (same as calling <code>JSON.parse()</code> directly).</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"bournescanobj-options\" class=\"anchor\" href=\"#bournescanobj-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Bourne.scan(obj, [options])</code>\n</h3>\n<p>Scans a given object for prototype properties where:</p>\n<ul>\n<li>\n<code>obj</code> - the object being scanned.</li>\n<li>\n<code>options</code> - optional configuration object where:\n<ul>\n<li>\n<code>protoAction</code> - optional string with one of:\n<ul>\n<li>\n<code>'error'</code> - throw a <code>SyntaxError</code> when a <code>__proto__</code> key is found. This is the default value.</li>\n<li>\n<code>'remove'</code> - deletes any <code>__proto__</code> keys from the input <code>obj</code>.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n",
      "intro": "### Introduction\n\nConsider this:\n\n```\n> const a = '{\"__proto__\":{ \"b\":5}}';\n'{\"__proto__\":{ \"b\":5}}'\n\n> const b = JSON.parse(a);\n{ __proto__: { b: 5 } }\n\n> b.b;\nundefined\n\n> const c = Object.assign({}, b);\n{}\n\n> c.b\n5\n```\n\nThe problem is that `JSON.parse()` retains the `__proto__` property as a plain object key. By\nitself, this is not a security issue. However, as soon as that object is assigned to another or\niterated on and values copied, the `__proto__` property leaks and becomes the object's prototype.\n",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "JSON.parse() drop-in replacement with prototype poisoning protection.",
    "forks": 13,
    "stars": 118,
    "date": "2020-08-22T17:11:33Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/bourne"
  },
  "call": {
    "name": "call",
    "versions": [
      {
        "name": "8.0.1",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "8.0.1"
    ],
    "api": true,
    "8.0.1": {
      "menu": "- [Paths matching](#paths-matching)\n  - [Exact match](#exact-match)\n  - [Optional parameters](#optional-parameters)\n  - [Multi-segment parameters](#multi-segment-parameters)\n  - [Catch all](#catch-all)\n- [Routing order](#routing-order)\n- [Method](#method)\n  - [`new Router()`](#new-routeroptions)\n  - [`add()`](#addoptions-data)\n  - [`route()`](#routemethod-path)",
      "api": "<h2>\n<a id=\"paths-matching\" class=\"anchor\" href=\"#paths-matching\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Paths matching</h2>\n<h3>\n<a id=\"exact-match\" class=\"anchor\" href=\"#exact-match\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Exact match</h3>\n<p><code>{param}</code>: If path contains <code>/users/{user}</code> then it matches <code>/users/john</code> or <code>/users/1234</code> but not <code>/users</code>.</p>\n<h3>\n<a id=\"optional-parameters\" class=\"anchor\" href=\"#optional-parameters\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Optional parameters</h3>\n<p><code>{param?}</code>: ? means parameter is optional . If path contains <code>/users/{user?}</code> It matches <code>/users/john</code> as well as <code>/users</code>.</p>\n<p>It is important to be aware that only the last named parameter in a path can be optional. That means that <code>/{one?}/{two}/</code> is an invalid path, since in this case there is another parameter after the optional one. You may also have a named parameter covering only part of a segment of the path, but you may only have one named parameter per segment. That means that /<code>{filename}.jpg</code> is valid while <code>/{filename}.{ext}</code> is not.</p>\n<h3>\n<a id=\"multi-segment-parameters\" class=\"anchor\" href=\"#multi-segment-parameters\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Multi-segment parameters</h3>\n<p><code>{params*n}</code>: With path configuration <code>/users/{user*2}</code>, it matches <code>/users/john/doe</code> or <code>/users/harshal/patil</code> but not <code>/users/john</code>. Number <strong>n</strong> after asterisk sign specifies the multiplier.</p>\n<p>Like the optional parameters, a wildcard parameter (for example <code>/{users*}</code>) may only appear as the last parameter in your path.</p>\n<h3>\n<a id=\"catch-all\" class=\"anchor\" href=\"#catch-all\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Catch all</h3>\n<p><code>{params*}</code>: Using this option, it matches anything. So <code>/users/{user*}</code> with match <code>/users/</code>, <code>/users/john</code>, <code>/users/john/doe</code>, <code>/users/john/doe/smith</code></p>\n<p>For more details about path parameters, <a href=\"https://github.com/hapijs/hapi/blob/master/API.md#path-parameters\">read hapi.js docs</a>.</p>\n<h2>\n<a id=\"routing-order\" class=\"anchor\" href=\"#routing-order\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Routing order</h2>\n<p>When determining what handler to use for a particular request, router searches paths in order from most specific to least specific. That means if you have two routes, one with the path <code>/filename.jpg</code> and a second route <code>/filename.{ext}</code> a request to /filename.jpg will match the first route, and not the second. This also means that a route with the path <code>/{files*}</code> will be the last route tested, and will only match if all other routes fail.</p>\n<p><strong>Call</strong> router has deterministic order than other routers and because of this deterministic order, <code>call</code> is able to detect conflicting routes and throw exception accordingly. In comparison, Express.js has different routing mechanism based on simple RegEx pattern matching making it faster (probably it only matters in theory) but unable to catch route conflicts. Read more about this at <a href=\"https://gist.github.com/hueniverse/a3109f716bf25718ba0e\">Eran Hammer's comments</a>.</p>\n<h2>\n<a id=\"method\" class=\"anchor\" href=\"#method\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Method</h2>\n<h3>\n<a id=\"new-routeroptions\" class=\"anchor\" href=\"#new-routeroptions\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>new Router([options])</code>\n</h3>\n<p>Constructor to create a new router instance where:</p>\n<ul>\n<li>\n<code>options</code> - an optional configuration object with the following fields:\n<ul>\n<li>\n<code>isCaseSensitive</code> - specifies if the paths should case sensitive. If set to <code>true</code>,\n<code>/users</code> and <code>/USERS</code> are considered as two different paths. Defaults to <code>true</code>.</li>\n</ul>\n</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">router</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Call</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Router</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"addoptions-data\" class=\"anchor\" href=\"#addoptions-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>add(options, [data])</code>\n</h3>\n<p>Adds a new route to the router where:</p>\n<ul>\n<li>\n<code>options</code> - a configuration object with the following fields:\n<ul>\n<li>\n<code>method</code> - the HTTP method (<code>'get'</code>, <code>'put'</code>, <code>'post'</code>, <code>'delete'</code>, etc.) or the wildcard\ncharacter (<code>'*'</code>) to match any methods. The method must be lowercase.</li>\n<li>\n<code>path</code> - the URL path to be used for route matching. The path segment can be static like\n<code>'/users/1234'</code> or it can be a <a href=\"#path-matching\">dynamic path</a>.</li>\n</ul>\n</li>\n<li>\n<code>data</code> - the application data to retrieve when a route match is found during lookup. This is\ntypically the route handler or other metadata about what to do when a route is matched.</li>\n</ul>\n<p>Throws on invalid route configuration or on a conflict with existing routes.</p>\n<h3>\n<a id=\"routemethod-path\" class=\"anchor\" href=\"#routemethod-path\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>route(method, path)</code>\n</h3>\n<p>Finds a matching route where:</p>\n<ul>\n<li>\n<code>method</code> - the requested route method.</li>\n<li>\n<code>path</code> - the requested route path.</li>\n</ul>\n<p>Returns an object with the following when a match is found:</p>\n<ul>\n<li>\n<code>params</code> - an object containing all path parameters where each <strong>key</strong> is path name and\n<strong>value</strong> is the corresponding parameter value in the requested <code>path</code>.</li>\n<li>\n<code>paramsArray</code> - an array of the parameter values in order.</li>\n<li>\n<code>route</code> - the <code>data</code> value provided when the route was added.</li>\n</ul>\n<p>If no match is found, returns (not throws) an error.</p>\n",
      "intro": "## Introduction\n\n`call` is a simple node.js HTTP Router. It is used by popular [hapi.js](https://github.com/hapijs/hapi) web framework. It implements predictable and easy to use routing. Even if it is designed to work with Hapi.js, you can still use it as an independent router in your app.\n",
      "example": "## Example\n\n```js\nconst Call = require('@hapi/call');\n\n// Create new router\nconst router = new Call.Router();\n\n// Add route\nrouter.add({ method: 'get', path: '/' }, { label: 'root-path' });\n\n// Add another route\nrouter.add({ method: 'post', path: '/users' }, 'route specific data');\n\n// Add another route with dynamic path\nrouter.add({ method: 'put', path: '/users/{userId}' }, () => { /* ...handler... */ });\n\n// Match route\nrouter.route('post', '/users');\n/* If matching route is found, it returns an object containing\n    {\n        params: {},                     // All dynamic path parameters as key/value\n        paramsArray: [],                // All dynamic path parameter values in order\n        route: 'route specific data';   // routeData\n    }\n*/\n\n\n// Match route\nrouter.route('put', '/users/1234');\n/* returns\n    {\n        params: { userId: '1234' },\n        paramsArray: [ '1234' ],\n        route: [Function]\n    }\n*/\n```\n",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Simple HTTP Router.",
    "forks": 24,
    "stars": 34,
    "date": "2020-08-22T16:26:20Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/call"
  },
  "catbox": {
    "name": "catbox",
    "versions": [
      {
        "name": "11.1.1",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "11.1.1"
    ],
    "api": true,
    "11.1.1": {
      "menu": "- [Installation](#installation)\n- [`Client`](#client)\n  - [API](#api)\n- [`Policy`](#policy)\n  - [API](#api-1)",
      "api": "<p><strong>catbox</strong> is a multi-strategy key-value object store. It comes with extensions supporting a memory\ncache, <a href=\"http://redis.io/\" rel=\"nofollow\">Redis</a>, and <a href=\"http://memcached.org/\" rel=\"nofollow\">Memcached</a>. Additional providers from the\ncommunity can be found on the <a href=\"https://www.npmjs.com/search?q=keywords:catbox\" rel=\"nofollow\">npm Registry</a>.</p>\n<p><strong>catbox</strong> provides two interfaces: a low-level <code>Client</code> and a high-level <code>Policy</code>.</p>\n<h3>\n<a id=\"installation\" class=\"anchor\" href=\"#installation\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Installation</h3>\n<p>In order to reduce module dependencies, <strong>catbox</strong> does not include the external caching\nstrategies. To use other strategies, each service must be manually installed via npm or package\ndependencies manually. The available strategies are:</p>\n<ul>\n<li><a href=\"https://github.com/hapijs/catbox-memory\">Memory</a></li>\n<li><a href=\"https://github.com/hapijs/catbox-redis\">Redis</a></li>\n<li><a href=\"https://github.com/hapijs/catbox-memcached\">Memcached</a></li>\n</ul>\n<h3>\n<a id=\"client\" class=\"anchor\" href=\"#client\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Client</code>\n</h3>\n<p>The <code>Client</code> object provides a low-level cache abstraction. The object is constructed using\n<code>new Client(engine, options)</code> where:</p>\n<ul>\n<li>\n<code>engine</code> - is an object or a prototype function implementing the cache strategy:\n<ul>\n<li>function - a prototype function with the signature <code>function(options)</code>. <strong>catbox</strong> will call\n<code>new func(options)</code>.</li>\n<li>object - a pre instantiated client implementation object. Does not support passing <code>options</code>.</li>\n</ul>\n</li>\n<li>\n<code>options</code> - the strategy configuration object. Each strategy defines its own configuration\noptions with the following common options:\n<ul>\n<li>\n<code>partition</code> - the partition name used to isolate the cached results across multiple clients.\nThe partition name is used as the MongoDB database name, the Riak bucket, or as a key prefix\nin Redis and Memcached. To share the cache across multiple clients, use the same partition\nname.</li>\n</ul>\n</li>\n</ul>\n<p>Note that any implementation of client strategies must return deep copies of the stored data as the\nAPI assumes that the object returned from a <code>get()</code> is owned by the called and can be safely\nmodified without affecting the cache copy.</p>\n<h4>\n<a id=\"api\" class=\"anchor\" href=\"#api\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>API</h4>\n<p>The <code>Client</code> object provides the following methods:</p>\n<ul>\n<li>\n<code>await start()</code> - creates a connection to the cache server. Must be called before any other\nmethod is available. Any errors are thrown.</li>\n<li>\n<code>await stop()</code> - terminates the connection to the cache server.</li>\n<li>\n<code>await get(key)</code> - retrieve an item from the cache engine if found where:\n<ul>\n<li>\n<code>key</code> - a cache key object (see below).</li>\n<li>return value:\n<ul>\n<li>\n<code>null</code> is the item is not found.</li>\n<li>throws an error if the request failed.</li>\n<li>otherwise, an object with the following properties:\n<ul>\n<li>\n<code>item</code> - the value stored in the cache using <code>set()</code>.</li>\n<li>\n<code>stored</code> - the timestamp when the item was stored in the cache (in milliseconds).</li>\n<li>\n<code>ttl</code> - the remaining time-to-live (not the original value used when storing the\nobject).</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>await set(key, value, ttl)</code> - store an item in the cache for a specified length of time, where:\n<ul>\n<li>\n<code>key</code> - a cache key object (see below).</li>\n<li>\n<code>value</code> - the string or object value to be stored.</li>\n<li>\n<code>ttl</code> - a time-to-live value in milliseconds after which the item is automatically removed\nfrom the cache (or is marked invalid).</li>\n<li>any errors are thrown.</li>\n</ul>\n</li>\n<li>\n<code>await drop(key)</code> - remove an item from cache where:\n<ul>\n<li>\n<code>key</code> - a cache key object (see below).</li>\n<li>any errors are thrown.</li>\n</ul>\n</li>\n<li>\n<code>isReady()</code> - returns <code>true</code> if cache engine determines itself as ready, <code>false</code> if it is not\nready.</li>\n<li>\n<code>validateSegmentName(segment)</code> - returns <code>null</code> if the segment name is valid (see below),\notherwise should return an instance of <code>Error</code> with an appropriate message.</li>\n</ul>\n<p>Any method with a <code>key</code> argument takes an object with the following required properties:</p>\n<ul>\n<li>\n<code>segment</code> - a caching segment name string. Enables using a single cache server for storing\ndifferent sets of items with overlapping ids.</li>\n<li>\n<code>id</code> - a unique item identifier string (per segment). Can be an empty string.</li>\n</ul>\n<h3>\n<a id=\"policy\" class=\"anchor\" href=\"#policy\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Policy</code>\n</h3>\n<p>The <code>Policy</code> object provides a convenient cache interface by setting a global policy which is\nautomatically applied to every storage action. The object is constructed using\n<code>new Policy(options, [cache, segment])</code> where:</p>\n<ul>\n<li>\n<code>options</code> - is an object with the following optional keys (unless noted otherwise):\n<ul>\n<li>\n<code>expiresIn</code> - relative expiration expressed in the number of milliseconds since the item was\nsaved in the cache. Cannot be used together with <code>expiresAt</code>.</li>\n<li>\n<code>expiresAt</code> - time of day expressed in 24h notation using the 'HH:MM' format, at which point\nall cache records for the route expire. Uses local time. Cannot be used together with\n<code>expiresIn</code>.</li>\n<li>\n<code>generateFunc</code> - a function used to generate a new cache item if one is not found in the\ncache when calling <code>get()</code>. The method's signature is <code>async function(id, flags)</code> where:\n<ul>\n<li>\n<code>id</code> - the <code>id</code> string or object provided to the <code>get()</code> method as-is (not normalized).</li>\n<li>\n<code>flags</code> - an object used to pass back additional flags:\n<ul>\n<li>\n<code>ttl</code> - the cache ttl value in milliseconds. Set to <code>0</code> to skip storing in the cache.\nDefaults to the cache global policy.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>staleIn</code> - number of milliseconds to mark an item stored in cache as stale and attempt to\nregenerate it when <code>generateFunc</code> is provided. Must be less than <code>expiresIn</code>. Alternatively\nfunction that returns staleIn value in milliseconds. The function signature is\n<code>function(stored, ttl)</code> where:\n<ul>\n<li>\n<code>stored</code> - the timestamp when the item was stored in the cache (in milliseconds).</li>\n<li>\n<code>ttl</code> - the remaining time-to-live (not the original value used when storing the object).</li>\n</ul>\n</li>\n<li>\n<code>staleTimeout</code> - number of milliseconds to wait before returning a stale value while\ngenerateFunc is generating a fresh value.</li>\n<li>\n<code>generateTimeout</code> - number of milliseconds to wait before returning a timeout error when the\n<code>generateFunc</code> function takes too long to return a value. When the value is eventually\nreturned, it is stored in the cache for future requests. Required if <code>generateFunc</code> is\npresent. Set to <code>false</code> to disable timeouts which may cause all <code>get()</code> requests to get stuck\nforever.</li>\n<li>\n<code>dropOnError</code> - if <code>true</code>, an error or timeout in the <code>generateFunc</code> causes the stale value\nto be evicted from the cache. Defaults  to <code>true</code>.</li>\n<li>\n<code>generateOnReadError</code> - if <code>false</code>, an upstream cache read error will stop the <code>get()</code> method\nfrom calling the generate function and will instead pass back the cache error. Defaults to\n<code>true</code>.</li>\n<li>\n<code>generateIgnoreWriteError</code> - if <code>false</code>, an upstream cache write error will be passed back\nwith the generated value when calling the <code>get()</code> method. Defaults to <code>true</code>.</li>\n<li>\n<code>pendingGenerateTimeout</code> - number of milliseconds while generateFunc call is in progress for\na given id, before a subsequent generateFunc call is allowed. Defaults to 0, no blocking of\nconcurrent generateFunc calls beyond staleTimeout.</li>\n<li>\n<code>getDecoratedValue</code> - if <code>true</code>, the return value of <code>policy.get()</code> calls is an object with\n<code>{ value, cached, report }</code>. Defaults to <code>false</code> which returns a plain value.</li>\n</ul>\n</li>\n<li>\n<code>cache</code> - a <code>Client</code> instance (which has already been started).</li>\n<li>\n<code>segment</code> - required when <code>cache</code> is provided. The segment name used to isolate cached items\nwithin the cache partition.</li>\n</ul>\n<h4>\n<a id=\"api-1\" class=\"anchor\" href=\"#api-1\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>API</h4>\n<p>The <code>Policy</code> object provides the following methods:</p>\n<ul>\n<li>\n<code>await get(id)</code> - retrieve an item from the cache. If the item is not found and the\n<code>generateFunc</code> method was provided, a new value is generated, stored in the cache, and returned.\nMultiple concurrent requests are queued and processed once. The method arguments are:\n<ul>\n<li>\n<code>id</code> - the unique item identifier (within the policy segment). Can be a string or an object\nwith the required 'id' key.</li>\n<li>return value:\n<ul>\n<li>the requested item if found, otherwise <code>null</code>.</li>\n<li>any errors are thrown.</li>\n<li>if <code>getDecoratedValue</code> is <code>true</code>, returns an object with the following properties:\n<ul>\n<li>\n<code>value</code> - the fetched or generated value.</li>\n<li>\n<code>cached</code> - <code>null</code> if a valid item was not found in the cache, or an object with the\nfollowing keys:\n<ul>\n<li>\n<code>item</code> - the cached <code>value</code>.</li>\n<li>\n<code>stored</code> - the timestamp when the item was stored in the cache.</li>\n<li>\n<code>ttl</code> - the cache ttl value for the record.</li>\n<li>\n<code>isStale</code> - <code>true</code> if the item is stale.</li>\n</ul>\n</li>\n<li>\n<code>report</code> - an object with logging information about the generation operation\ncontaining the following keys (as relevant):\n<ul>\n<li>\n<code>msec</code> - the cache lookup time in milliseconds.</li>\n<li>\n<code>stored</code> - the timestamp when the item was stored in the cache.</li>\n<li>\n<code>isStale</code> - <code>true</code> if the item is stale.</li>\n<li>\n<code>ttl</code> - the cache ttl value for the record.</li>\n<li>\n<code>error</code> - lookup error.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>await set(id, value, ttl)</code> - store an item in the cache where:\n<ul>\n<li>\n<code>id</code> - the unique item identifier (within the policy segment).</li>\n<li>\n<code>value</code> - the string or object value to be stored.</li>\n<li>\n<code>ttl</code> - a time-to-live <strong>override</strong> value in milliseconds after which the item is\nautomatically removed from the cache (or is marked invalid). This should be set to <code>0</code> in\norder to use the caching rules configured when creating the <code>Policy</code> object.</li>\n<li>any errors are thrown.</li>\n</ul>\n</li>\n<li>\n<code>await drop(id)</code> - remove the item from cache where:\n<ul>\n<li>\n<code>id</code> - the unique item identifier (within the policy segment).</li>\n<li>any errors are thrown.</li>\n</ul>\n</li>\n<li>\n<code>ttl(created)</code> - given a <code>created</code> timestamp in milliseconds, returns the time-to-live left based\non the configured rules.</li>\n<li>\n<code>rules(options)</code> - changes the policy rules after construction (note that items already stored\nwill not be affected) where:\n<ul>\n<li>\n<code>options</code> - the same <code>options</code> as the <code>Policy</code> constructor.</li>\n</ul>\n</li>\n<li>\n<code>isReady()</code> - returns <code>true</code> if cache engine determines itself as ready, <code>false</code> if it is not\nready or if there is no cache engine set.</li>\n<li>\n<code>stats</code> - an object with cache statistics where:\n<ul>\n<li>\n<code>sets</code> - number of cache writes.</li>\n<li>\n<code>gets</code> - number of cache <code>get()</code> requests.</li>\n<li>\n<code>hits</code> - number of cache <code>get()</code> requests in which the requested id was found in the cache\n(can be stale).</li>\n<li>\n<code>stales</code> - number of cache reads with stale requests (only counts the first request in a\nqueued <code>get()</code> operation).</li>\n<li>\n<code>generates</code> - number of calls to the generate function.</li>\n<li>\n<code>errors</code> - cache operations errors.</li>\n</ul>\n</li>\n<li>\n<code>events</code> - a <a href=\"https://github.com/hapijs/podium\"><strong>podium</strong></a> event emitter, emitting <code>'error'</code>\nevents under the following channels:\n<ul>\n<li>\n<code>'persist'</code> - emits any cache errors thrown during the generation of new values as a result\nof a <code>get()</code> request.</li>\n<li>\n<code>'generate'</code> - emits any new value generation errors thrown as a result of a <code>get()</code> request.</li>\n</ul>\n</li>\n<li>\n<code>client</code> - a reference to the cache client if set.</li>\n</ul>\n<p>Note that errors generated by <code>set()</code> and <code>drop()</code> are reported directly by the functions calls and\nare not included in the reported events.</p>\n",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Multi-strategy object caching service.",
    "forks": 72,
    "stars": 495,
    "date": "2020-08-10T19:02:54Z",
    "updated": "Mon Aug 10 2020",
    "link": "https://github.com/hapijs/catbox"
  },
  "catbox-memcached": {
    "name": "catbox-memcached",
    "versions": [
      {
        "name": "3.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "3.0.0"
    ],
    "api": true,
    "3.0.0": {
      "menu": "- [Options](#options)",
      "api": "<h3>\n<a id=\"options\" class=\"anchor\" href=\"#options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Options</h3>\n<ul>\n<li>\n<code>host</code> - the Memcache server hostname. Defaults to <code>127.0.0.1</code>. <strong>Cannot be used with <code>location</code>.</strong>\n</li>\n<li>\n<code>port</code> - the Memcache server port. Defaults to <code>11211</code>. <strong>Cannot be used with <code>location</code>.</strong>\n</li>\n<li>\n<code>location</code> - the Memcache server hostname and port. Defaults to <code>127.0.0.1:11211</code>. Can be a String,\nArray, or an Object as per <a href=\"https://github.com/3rd-Eden/node-memcached#server-locations\">node-memcached location specification</a>.</li>\n</ul>\n",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Memcached adaptor for [catbox](https://github.com/hapijs/catbox).",
    "forks": 17,
    "stars": 12,
    "date": "2020-07-30T11:16:05Z",
    "updated": "Thu Jul 30 2020",
    "link": "https://github.com/hapijs/catbox-memcached"
  },
  "catbox-memory": {
    "name": "catbox-memory",
    "versions": [
      {
        "name": "5.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "5.0.0"
    ],
    "api": true,
    "5.0.0": {
      "menu": "- [Options](#options)",
      "api": "<h3>\n<a id=\"options\" class=\"anchor\" href=\"#options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Options</h3>\n<ul>\n<li>\n<code>maxByteSize</code> - sets an upper limit on the number of bytes that can be stored in the\ncache. Once this limit is reached no additional items will be added to the cache\nuntil some expire. The utilized memory calculation is a rough approximation and must\nnot be relied on. Defaults to <code>104857600</code> (100MB).</li>\n<li>\n<code>minCleanupIntervalMsec</code> - the minimum number of milliseconds in between each cache cleanup.\nDefaults to 1 second (<code>1000</code>).</li>\n<li>\n<code>cloneBuffersOnGet</code> - by default, buffers stored in the cache are copied when they are set but\nnot when they are retrieved. This means a change to the buffer returned by a <code>get()</code> will change\nthe value in the cache. To prevent this, set <code>cloneBuffersOnGet</code> to  <code>true</code> to always return a\ncopy of the cached buffer. Defaults to <code>false</code>.</li>\n</ul>\n",
      "intro": "### Introduction\n\nMemory adapter for [catbox](https://github.com/hapijs/catbox).\nThis adapter is not designed to share a common cache between multiple processes (e.g. in a cluster\nmode). It uses a single interval timeout to look for expired records and clean them from memory.\n",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Memory adaptor for [catbox](https://github.com/hapijs/catbox).",
    "forks": 28,
    "stars": 30,
    "date": "2020-08-22T20:31:06Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/catbox-memory"
  },
  "catbox-object": {
    "name": "catbox-object",
    "versions": [
      {
        "name": "2.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "2.0.0"
    ],
    "api": true,
    "2.0.0": {
      "menu": "- [Options](#options)",
      "api": "<h3>\n<a id=\"options\" class=\"anchor\" href=\"#options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Options</h3>\n<ul>\n<li>\n<code>maxSize</code> - sets an upper limit on the number of items that can be stored in the\ncache. Once this limit is reached no additional items will be added to the cache\nuntil some expire. Defaults to <code>1000</code>.</li>\n<li>\n<code>minCleanupIntervalMsec</code> - the minimum number of milliseconds in between each cache cleanup.\nDefaults to 1 second (<code>1000</code>).</li>\n</ul>\n",
      "intro": "### Introduction\n\nMemory object adapter for [catbox](https://github.com/hapijs/catbox).\nThis adapter is not designed to share a common cache between multiple processes (e.g. in a cluster\nmode). It uses a single interval timeout to look for expired records and clean them from memory.\nUnlike the **catbox-memory** cache, it does not clone objects stored (in either direction) or keep\ntrack of memory usage.\n",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Object cache adaptor for [catbox](https://github.com/hapijs/catbox).",
    "forks": 6,
    "stars": 1,
    "date": "2020-08-22T16:33:22Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/catbox-object"
  },
  "catbox-redis": {
    "name": "catbox-redis",
    "versions": [
      {
        "name": "6.0.1",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "6.0.1"
    ],
    "api": true,
    "6.0.1": {
      "menu": "- [Options](#options)\n- [Tests](#tests)",
      "api": "<h2>\n<a id=\"options\" class=\"anchor\" href=\"#options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Options</h2>\n<p>The connection can be specified with one (and only one) of:</p>\n<ul>\n<li>\n<p><code>client</code> - a custom Redis client instance where <code>client</code> must:</p>\n<ul>\n<li>be manually started and stopped,</li>\n<li>be compatible with the <strong>ioredis</strong> module API, and</li>\n<li>expose the <code>status</code> property that must be set to <code>'ready'</code> when connected.</li>\n</ul>\n</li>\n<li>\n<p><code>url</code> - a Redis server URL.</p>\n</li>\n<li>\n<p><code>socket</code> - a unix socket string.</p>\n</li>\n<li>\n<p><code>cluster</code> - an array of <code>{ host, port }</code> pairs.</p>\n</li>\n</ul>\n<p>Or:</p>\n<ul>\n<li>\n<code>host</code> - a Redis server hostname. Defaults to <code>'127.0.0.1'</code> if no other connection method specified from the above.</li>\n<li>\n<code>port</code> - a Redis server port or unix domain socket path. Defaults to <code>6379</code> if no other connection method specified from the above.</li>\n</ul>\n<p><strong>catbox</strong> options:</p>\n<ul>\n<li>\n<code>partition</code> - a string used to prefix all item keys with. Defaults to <code>''</code>.</li>\n</ul>\n<p>Other supported Redis options:</p>\n<ul>\n<li>\n<code>password</code> - the Redis authentication password when required.</li>\n<li>\n<code>db</code> - a Redis database name or number.</li>\n<li>\n<code>sentinels</code> - an array of <code>{ host, port }</code> sentinel address pairs.</li>\n<li>\n<code>sentinelName</code> - the name of the sentinel master (when <code>sentinels</code> is specified).</li>\n<li>\n<code>tls</code> - an object representing TLS config options for <strong>ioredis</strong>.</li>\n</ul>\n<h2>\n<a id=\"tests\" class=\"anchor\" href=\"#tests\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Tests</h2>\n<p>The test suite expects:</p>\n<ul>\n<li>a redis server to be running on port 6379</li>\n<li>a redis server listenning to port 6378 and requiring a password: 'secret'</li>\n<li>a redis cluster contains nodes running on ports 7000 to 7005</li>\n</ul>\n<p>See <a href=\"./docker-compose.yml\">docker-compose.yml</a></p>\n",
      "intro": "",
      "example": "",
      "usage": "## Usage\n\nSample catbox cache initialization:\n\n```js\nconst Catbox = require('@hapi/catbox');\nconst CatboxRedis = require('@hapi/catbox-redis');\n\n\nconst cache = new Catbox.Client(CatboxRedis, {\n    partition : 'my_cached_data',\n    host: 'redis-cluster.domain.com',\n    port: 6379,\n    db: 0,\n    tls: {},\n});\n```\n\nWhen used in a hapi server (hapi version 18 or newer):\n\n```js\nconst Hapi = require('hapi')\nconst CatboxRedis = require('@hapi/catbox-redis');\n\nconst server = new Hapi.Server({\n    cache : [\n        {\n            name: 'my_cache',\n            provider: {\n                constructor: CatboxRedis,\n                options: {\n                    partition : 'my_cached_data',\n                    host: 'redis-cluster.domain.com',\n                    port: 6379,\n                    db: 0,\n                    tls: {},\n                }\n            }\n        }\n    ]\n});\n```\n\n",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Redis adapter for [catbox](https://github.com/hapijs/catbox).",
    "forks": 60,
    "stars": 67,
    "date": "2020-08-24T16:39:29Z",
    "updated": "Mon Aug 24 2020",
    "link": "https://github.com/hapijs/catbox-redis"
  },
  "code": {
    "name": "code",
    "versions": [
      {
        "name": "8.0.2",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "8.0.2"
    ],
    "api": true,
    "8.0.2": {
      "menu": "- [Grammar](#grammar)\n- [Flags](#flags)\n- [`expect()`](#expectvalue-prefix)\n  - [Types](#types)\n    - [`arguments()`](#arguments)\n    - [`array()`](#array)\n    - [`boolean()`](#boolean)\n    - [`buffer()`](#buffer)\n    - [`date()`](#date)\n    - [`error()`](#errortype-message)\n    - [`function()`](#function)\n    - [`number()`](#number)\n    - [`regexp()`](#regexp)\n    - [`string()`](#string)\n    - [`object()`](#object)\n  - [Values](#values)\n    - [`true()`](#true)\n    - [`false()`](#false)\n    - [`null()`](#null)\n    - [`undefined()`](#undefined)\n    - [`NaN()`](#nan)\n  - [`include()`](#includevalues)\n  - [`startWith()`](#startwithvalue)\n  - [`endWith()`](#endwithvalue)\n  - [`exist()`](#exist)\n  - [`empty()`](#empty)\n  - [`length()`](#lengthsize)\n  - [`equal()`](#equalvalue-options)\n  - [`above()`](#abovevalue)\n  - [`least()`](#leastvalue)\n  - [`below()`](#belowvalue)\n  - [`most()`](#mostvalue)\n  - [`within()`](#withinfrom-to)\n  - [`between()`](#betweenfrom-to)\n  - [`about()`](#aboutvalue-delta)\n  - [`instanceof()`](#instanceoftype)\n  - [`match()`](#matchregex)\n  - [`satisfy()`](#satisfyvalidator)\n  - [`throw()`](#throwtype-message)\n  - [`await reject()`](#await-rejecttype-message)\n- [`fail()`](#failmessage)\n- [`count()`](#count)\n- [`incomplete()`](#incomplete)\n- [`thrownAt()`](#thrownaterror)\n- [Settings](#settings)\n  - [`truncateMessages`](#truncatemessages)\n  - [`comparePrototypes`](#compareprototypes)",
      "api": "<h3>\n<a id=\"grammar\" class=\"anchor\" href=\"#grammar\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Grammar</h3>\n<p><strong>code</strong> supports usage of connecting words to make assertions more readable. The inclusion of these\ngrammar elements has no impact over the assertion outcome and are used for human readability only.\nEvery method or property of the assertion object returned by <code>expect()</code> returns <code>this</code> which allows\nchaining addition assertions or grammar words.</p>\n<p>The supported words are:</p>\n<ul>\n<li><code>a</code></li>\n<li><code>an</code></li>\n<li><code>and</code></li>\n<li><code>at</code></li>\n<li><code>be</code></li>\n<li><code>have</code></li>\n<li><code>in</code></li>\n<li><code>to</code></li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">10</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">above</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">5</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'abc'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">string</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">an</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">array</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">20</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">at</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">least</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">20</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'abc'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">have</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">length</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">3</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'abc'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">string</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">and</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">contain</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'b'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">6</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">in</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">range</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">5</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">6</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"flags\" class=\"anchor\" href=\"#flags\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Flags</h3>\n<p>The following words toggle a status flag for the current assertion:</p>\n<ul>\n<li>\n<code>not</code> - inverses the expected result of any assertion.</li>\n<li>\n<code>once</code> - requires that inclusion matches appear only once in the provided value. Used by <code>include()</code>.</li>\n<li>\n<code>only</code> - requires that only the provided elements appear in the provided value. Used by <code>include()</code>.</li>\n<li>\n<code>part</code> - allows a partial match when asserting inclusion. Used by <code>include()</code>. Defaults to <code>false</code>.</li>\n<li>\n<code>shallow</code> - performs a comparison using strict equality (<code>===</code>). Code defaults to deep comparison. Used by <code>equal()</code> and <code>include()</code>.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">10</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">not</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">above</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">20</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">shallow</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">3</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">only</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">once</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">part</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">4</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Note that including the same flag twice toggles the last value set. This is especially important when\nchaining multiple assertions in a single statement (e.g. when using the <code>and</code> grammar word).</p>\n<h3>\n<a id=\"expectvalue-prefix\" class=\"anchor\" href=\"#expectvalue-prefix\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>expect(value, [prefix])</code>\n</h3>\n<p>Generates an assertion object where:</p>\n<ul>\n<li>\n<code>value</code> - the reference value on which to apply the assertion rules.</li>\n<li>\n<code>prefix</code> - an optional string used as an error message prefix.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">10</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'Age'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">above</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">5</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"types\" class=\"anchor\" href=\"#types\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Types</h4>\n<p>Asserts that the reference value is of a certain type.</p>\n<h5>\n<a id=\"arguments\" class=\"anchor\" href=\"#arguments\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>arguments()</code>\n</h5>\n<p>Asserts that the reference value is an <code>arguments</code> object.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">func</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> <span class=\"pl-k\">return</span> <span class=\"pl-smi\">arguments</span><span class=\"pl-kos\">;</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">func</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">arguments</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h5>\n<a id=\"array\" class=\"anchor\" href=\"#array\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>array()</code>\n</h5>\n<p>Asserts that the reference value is an <code>Array</code>.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">an</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">array</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h5>\n<a id=\"boolean\" class=\"anchor\" href=\"#boolean\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>boolean()</code>\n</h5>\n<p>Asserts that the reference value is a boolean.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">boolean</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h5>\n<a id=\"buffer\" class=\"anchor\" href=\"#buffer\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>buffer()</code>\n</h5>\n<p>Asserts that the reference value is a <code>Buffer</code>.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">Buffer</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">buffer</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h5>\n<a id=\"date\" class=\"anchor\" href=\"#date\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>date()</code>\n</h5>\n<p>Asserts that the reference value is a <code>Date</code>.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">Date</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">date</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h5>\n<a id=\"errortype-message\" class=\"anchor\" href=\"#errortype-message\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>error([type], [message])</code>\n</h5>\n<p>Asserts that the reference value is an error. You can provide optional requirements where:</p>\n<ul>\n<li>\n<code>type</code> - the <code>instanceof</code> value of the error.</li>\n<li>\n<code>message</code> a string or regular expression matching the error <code>message</code> property. Note that a string\nmust provide a full match.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">err</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Error</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Oops an error occured.'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">an</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">an</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Error</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">an</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Oops an error occured.'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">an</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Error</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">/occured/</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h5>\n<a id=\"function\" class=\"anchor\" href=\"#function\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>function()</code>\n</h5>\n<p>Asserts that the reference value is a <code>function</code>.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h5>\n<a id=\"number\" class=\"anchor\" href=\"#number\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>number()</code>\n</h5>\n<p>Asserts that the reference value is a <code>number</code>.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">123</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">number</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h5>\n<a id=\"regexp\" class=\"anchor\" href=\"#regexp\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>regexp()</code>\n</h5>\n<p>Asserts that the reference value is an <code>RegExp</code>.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">/abc/</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">regexp</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h5>\n<a id=\"string\" class=\"anchor\" href=\"#string\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>string()</code>\n</h5>\n<p>Asserts that the reference value is a string.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'abc'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">string</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h5>\n<a id=\"object\" class=\"anchor\" href=\"#object\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>object()</code>\n</h5>\n<p>Asserts that the reference value is an object (excluding array, buffer, or other native objects).</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-s\">'1'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">an</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">object</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"values\" class=\"anchor\" href=\"#values\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Values</h4>\n<p>Asserts that the reference value is equal to a predefined value.</p>\n<h5>\n<a id=\"true\" class=\"anchor\" href=\"#true\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>true()</code>\n</h5>\n<p>Asserts that the reference value is true.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">true</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h5>\n<a id=\"false\" class=\"anchor\" href=\"#false\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>false()</code>\n</h5>\n<p>Asserts that the reference value is false.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">false</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">false</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h5>\n<a id=\"null\" class=\"anchor\" href=\"#null\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>null()</code>\n</h5>\n<p>Asserts that the reference value is null.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">null</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">null</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h5>\n<a id=\"undefined\" class=\"anchor\" href=\"#undefined\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>undefined()</code>\n</h5>\n<p>Asserts that the reference value is undefined.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">undefined</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">undefined</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h5>\n<a id=\"nan\" class=\"anchor\" href=\"#nan\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>NaN()</code>\n</h5>\n<p>Asserts that the reference value is <code>NaN</code>.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">NaN</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">NaN</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"includevalues\" class=\"anchor\" href=\"#includevalues\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>include(values)</code>\n</h4>\n<p>Aliases: <code>includes()</code>, <code>contain()</code>, <code>contains()</code></p>\n<p>See also: <a href=\"https://github.com/hapijs/hoek/blob/master/API.md#containref-values-options\"><code>Hoek.contain()</code></a></p>\n<p>Asserts that the reference value (a string, array, or object) includes the provided values where:</p>\n<ul>\n<li>\n<code>values</code> - a single or array of values. If the reference value is a string, the values must be strings.\nIf the reference value is an array, the values can be any array member. If the reference value is an object, the values can be key names, or a single object\nwith key-value pairs to match.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'abc'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'ab'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'abc'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">only</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'abc'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'aaa'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">only</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'abc'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">once</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'b'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'abc'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'c'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'abc'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">part</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'d'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">only</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">once</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">part</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">4</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">b</span>: <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">c</span>: <span class=\"pl-c1\">3</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">b</span>: <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">c</span>: <span class=\"pl-c1\">3</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'c'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">b</span>: <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">c</span>: <span class=\"pl-c1\">3</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">only</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'b'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'c'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">b</span>: <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">c</span>: <span class=\"pl-c1\">3</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">b</span>: <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">c</span>: <span class=\"pl-c1\">3</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">c</span>: <span class=\"pl-c1\">3</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">b</span>: <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">c</span>: <span class=\"pl-c1\">3</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">part</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">d</span>: <span class=\"pl-c1\">4</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">b</span>: <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">c</span>: <span class=\"pl-c1\">3</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">only</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">b</span>: <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">c</span>: <span class=\"pl-c1\">3</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">b</span>: <span class=\"pl-kos\">[</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">c</span>: <span class=\"pl-kos\">[</span><span class=\"pl-c1\">3</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">include</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">c</span>: <span class=\"pl-kos\">[</span><span class=\"pl-c1\">3</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"startwithvalue\" class=\"anchor\" href=\"#startwithvalue\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>startWith(value)</code>\n</h4>\n<p>Aliases: <code>startsWith()</code>,</p>\n<p>Asserts that the reference value (a string) starts with the provided value where:</p>\n<ul>\n<li>\n<code>value</code> - a string.</li>\n</ul>\n<p>Note that this assertion is case sensitive.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'https://example.org/secure'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">startWith</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'https://'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"endwithvalue\" class=\"anchor\" href=\"#endwithvalue\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>endWith(value)</code>\n</h4>\n<p>Aliases: <code>endsWith()</code>,</p>\n<p>Asserts that the reference value (a string) ends with the provided value where:</p>\n<ul>\n<li>\n<code>value</code> - a string.</li>\n</ul>\n<p>Note that this assertion is case sensitive.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'http://example.org/relative'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">endWith</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/relative'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"exist\" class=\"anchor\" href=\"#exist\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>exist()</code>\n</h4>\n<p>Aliases: <code>exists</code></p>\n<p>Asserts that the reference value exists (not <code>null</code> or <code>undefined</code>).</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">4</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">exist</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">null</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">not</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">exist</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"empty\" class=\"anchor\" href=\"#empty\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>empty()</code>\n</h4>\n<p>Asserts that the reference value has a <code>length</code> property equal to zero or an object with no keys.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'abc'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">empty</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"lengthsize\" class=\"anchor\" href=\"#lengthsize\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>length(size)</code>\n</h4>\n<p>Asserts that the reference value has a <code>length</code> property matching the provided size or an object with the\nspecified number of keys where:</p>\n<ul>\n<li>\n<code>size</code> - the required size.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'abcd'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">have</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">length</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">4</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"equalvalue-options\" class=\"anchor\" href=\"#equalvalue-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>equal(value[, options])</code>\n</h4>\n<p>Aliases: <code>equals()</code></p>\n<p>Asserts that the reference value equals the provided value where:</p>\n<ul>\n<li>\n<code>value</code> - the value to compare to.</li>\n<li>\n<code>options</code> - optional object specifying comparison options. This is ignored on <code>shallow</code> comparisons.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">5</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">5</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Deep comparisons (the default) are performed using\n<a href=\"https://github.com/hapijs/hoek/blob/master/API.md#deepequalb-a-options\"><code>Hoek.deepEqual()</code></a>. The\noptional <code>options</code> argument is passed directly to <code>Hoek.deepEqual()</code>. An example\ndeep comparison which ignores object prototypes is shown below.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Object</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">create</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">null</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">prototype</span>: <span class=\"pl-c1\">false</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Strict equality can be checked using the <code>shallow</code> modifier. This yields the same output as a <code>===</code> check.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">5</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">shallow</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">5</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">shallow</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// fails as they are not the same reference</span></pre></div>\n<h4>\n<a id=\"abovevalue\" class=\"anchor\" href=\"#abovevalue\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>above(value)</code>\n</h4>\n<p>Aliases: <code>greaterThan()</code></p>\n<p>Asserts that the reference value is greater than (<code>&gt;</code>) the provided value where:</p>\n<ul>\n<li>\n<code>value</code> - the value to compare to.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">10</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">above</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">5</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"leastvalue\" class=\"anchor\" href=\"#leastvalue\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>least(value)</code>\n</h4>\n<p>Aliases: <code>min()</code></p>\n<p>Asserts that the reference value is at least (<code>&gt;=</code>) the provided value where:</p>\n<ul>\n<li>\n<code>value</code> - the value to compare to.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">10</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">at</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">least</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">10</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"belowvalue\" class=\"anchor\" href=\"#belowvalue\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>below(value)</code>\n</h4>\n<p>Aliases: <code>lessThan()</code></p>\n<p>Asserts that the reference value is less than (<code>&lt;</code>) the provided value where:</p>\n<ul>\n<li>\n<code>value</code> - the value to compare to.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">10</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">below</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">20</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"mostvalue\" class=\"anchor\" href=\"#mostvalue\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>most(value)</code>\n</h4>\n<p>Aliases: <code>max()</code></p>\n<p>Asserts that the reference value is at most (<code>&lt;=</code>) the provided value where:</p>\n<ul>\n<li>\n<code>value</code> - the value to compare to.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">10</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">at</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">most</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">10</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"withinfrom-to\" class=\"anchor\" href=\"#withinfrom-to\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>within(from, to)</code>\n</h4>\n<p>Aliases: <code>range()</code></p>\n<p>Asserts that the reference value is within (<code>from &lt;= value &lt;= to</code>) the provided values where:</p>\n<ul>\n<li>\n<code>from</code> - the start of the range (inclusive).</li>\n<li>\n<code>to</code> - the end of the range (inclusive).</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">10</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">within</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">10</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">20</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">20</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">within</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">10</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">20</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"betweenfrom-to\" class=\"anchor\" href=\"#betweenfrom-to\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>between(from, to)</code>\n</h4>\n<p>Asserts that the reference value is between but not equal (<code>from &lt; value &lt; to</code>) the provided values where:</p>\n<ul>\n<li>\n<code>from</code> - the start of the range (exclusive).</li>\n<li>\n<code>to</code> - the end of the range (exclusive).</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">15</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">between</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">10</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">20</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"aboutvalue-delta\" class=\"anchor\" href=\"#aboutvalue-delta\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>about(value, delta)</code>\n</h4>\n<p>Asserts that the reference value is about the provided value within a delta margin of difference where:</p>\n<ul>\n<li>\n<code>value</code> - the value to compare to.</li>\n<li>\n<code>delta</code> - the allowed margin of difference.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">10</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">about</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">9</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"instanceoftype\" class=\"anchor\" href=\"#instanceoftype\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>instanceof(type)</code>\n</h4>\n<p>Aliases: <code>instanceOf()</code></p>\n<p>Asserts that the reference value has the provided <code>instanceof</code> value where:</p>\n<ul>\n<li>\n<code>type</code> - the type value to match.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">Date</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">an</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">instanceof</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Date</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"matchregex\" class=\"anchor\" href=\"#matchregex\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>match(regex)</code>\n</h4>\n<p>Aliases: <code>matches()</code></p>\n<p>Asserts that the reference value's <code>toString()</code> representation matches the provided regular\nexpression where:</p>\n<ul>\n<li>\n<code>regex</code> - the regular expression to match.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'a5'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">match</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">/<span class=\"pl-cce\">\\w</span><span class=\"pl-cce\">\\d</span>/</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">\"abc\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"def\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">match</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">/<span class=\"pl-cce\">^</span><span class=\"pl-kos\">[</span><span class=\"pl-cce\">\\w</span><span class=\"pl-cce\">\\d</span>,<span class=\"pl-kos\">]</span><span class=\"pl-c1\">*</span><span class=\"pl-cce\">$</span>/</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">match</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">/<span class=\"pl-cce\">^</span><span class=\"pl-cce\">\\d</span><span class=\"pl-cce\">$</span>/</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"satisfyvalidator\" class=\"anchor\" href=\"#satisfyvalidator\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>satisfy(validator)</code>\n</h4>\n<p>Aliases: <code>satisfies()</code></p>\n<p>Asserts that the reference value satisfies the provided validator function where:</p>\n<ul>\n<li>\n<code>validator</code> - a function with the signature <code>function(value)</code> with return value <code>true</code> or <code>false</code>. The\nreference value is passed as the only argument to the <code>validator</code> function and the assertion passes if\nthe return value is <code>true</code>.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'x'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">satisfy</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> <span class=\"pl-k\">return</span> <span class=\"pl-s1\">value</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'x'</span><span class=\"pl-kos\">;</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"throwtype-message\" class=\"anchor\" href=\"#throwtype-message\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>throw([type], [message])</code>\n</h4>\n<p>Aliases: <code>throws</code></p>\n<p>Asserts that the function reference value throws an exception when called. The provided reference function\nis invoked within a <code>try</code>-<code>catch</code> block and any error throws is caught and compared to the provided optional\nrequirements where:</p>\n<ul>\n<li>\n<code>type</code> - the <code>instanceof</code> value of the thrown object.</li>\n<li>\n<code>message</code> a string or regular expression matching the thrown error <code>message</code> property. Note that a string\nmust provide a full match.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">NodeUtil</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'util'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">CustomError</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">message</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-v\">Error</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">call</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">this</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">message</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">NodeUtil</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">inherit</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">CustomError</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Error</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">throws</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">CustomError</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Oh no!'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">throws</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">throw</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">CustomError</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'Oh no!'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"await-rejecttype-message\" class=\"anchor\" href=\"#await-rejecttype-message\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await reject([type], [message])</code>\n</h4>\n<p>Aliases: <code>throws</code></p>\n<p>Asserts that the <code>Promise</code> reference value rejects with an exception when called. The provided reference\npromise is resolved using an <code>await</code> statement within a <code>try</code>-<code>catch</code> block and any error throws is caught\nand compared to the provided optional requirements where:</p>\n<ul>\n<li>\n<code>type</code> - the <code>instanceof</code> value of the rejected object.</li>\n<li>\n<code>message</code> a string or regular expression matching the rejected error <code>message</code> property. Note that a string\nmust provide a full match.</li>\n</ul>\n<p>Returns the rejected error object.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">NodeUtil</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'util'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">CustomError</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">message</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">code</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">message</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">message</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">code</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">NodeUtil</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">inherits</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">CustomError</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Error</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">rejects</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Promise</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">resolve</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">reject</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">reject</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">CustomError</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Oh no!'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">123</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">err</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">rejects</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reject</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">CustomError</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'Oh no!'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">code</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">123</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"failmessage\" class=\"anchor\" href=\"#failmessage\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>fail(message)</code>\n</h3>\n<p>Makes the test fail with <code>message</code>.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">fail</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'This should not occur'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"count\" class=\"anchor\" href=\"#count\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>count()</code>\n</h3>\n<p>Returns the total number of assertions created using the <code>expect()</code> method.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">5</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">not</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">string</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">count</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\t\t<span class=\"pl-c\">// -&gt; 1</span></pre></div>\n<h3>\n<a id=\"incomplete\" class=\"anchor\" href=\"#incomplete\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>incomplete()</code>\n</h3>\n<p>Returns an array of the locations where incomplete assertions were declared or <code>null</code> if no incomplete assertions found.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">5</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">not</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">string</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">incomplete</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\t\t<span class=\"pl-c\">// -&gt; [ 'readme.js:667:1' ]</span></pre></div>\n<h3>\n<a id=\"thrownaterror\" class=\"anchor\" href=\"#thrownaterror\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>thrownAt([error])</code>\n</h3>\n<p>Returns the filename, line number, and column number of where the <code>error</code> was created. If no error is provided, the current location returned.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">error</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Error</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'oops'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">thrownAt</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">error</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"settings\" class=\"anchor\" href=\"#settings\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Settings</h3>\n<p><strong>code</strong> can be configured using the module's <code>settings</code> object. The following\nsettings are supported:</p>\n<h4>\n<a id=\"truncatemessages\" class=\"anchor\" href=\"#truncatemessages\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>truncateMessages</code>\n</h4>\n<p>A Boolean value that, when <code>true</code>, causes long assertion error messages to be\ntruncated for readability. Setting this to <code>false</code> causes the entire message\nto be displayed. Defaults to <code>true</code>.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">foo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">4</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">5</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">6</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">7</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">8</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">9</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">10</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">11</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">12</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">settings</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">truncateMessages</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">foo</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"compareprototypes\" class=\"anchor\" href=\"#compareprototypes\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>comparePrototypes</code>\n</h4>\n<p>A Boolean value that, when <code>false</code>, ignores object prototypes when doing a deep comparison. Defaults to <code>false</code>.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">expect</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">foo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Object</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">create</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">null</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">settings</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">comparePrototypes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">foo</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">Code</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">settings</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">comparePrototypes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">foo</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// fails</span></pre></div>\n",
      "intro": "### Introduction\n\n**code** was created as a direct rewrite of the powerful [**chai**](http://chaijs.com) assertions\nlibrary. This virtual fork was created for a few reasons. First, **chai** mixed usage of methods and\nproperties creates a problematic environment in which it is too easy to forget a method `()` and result\nin an assertion that is never executed (and therefore passes incorrectly). This observation was noted by\nthe [**must**](https://github.com/moll/js-must) author.\n\nThe second reason is that similar to [**lab**](https://github.com/hapijs/lab), our test runner, we wanted\nan assertion library that is small, simple, and intuitive - without plugins, extensions, or the overhead\nof having to support testing in the browser. **code** provides much of the same functionality in about\n300 lines of code that are trivial to read in a few minutes.\n\nAnd last, we wanted to experiment with some new features that allow deeper integration between the test\nrunner and assertions library. The first of which are two methods exported (and used by **lab**) for getting\nthe total assertions count (which is a measure of the tests comprehensiveness), and by verifying that every\nassertion created (e.g. every `expect()` call) is also executed. This will alert when a statement like\n`expect(5).to.be.a.string` is not allowed to remain unnoticed (and fail to throw due to the missing `()`).\n\nLike **lab**, the goal is to keep this module small and simple. If you need extensibility or other\nfunctionality, we recommend looking at the many other excellent assertions libraries available.\n",
      "example": "### Example\n\n```js\nconst Code = require('@hapi/code');\nconst expect = Code.expect;\n\nexpect(true).to.be.a.boolean().and.to.not.equal(false);\nexpect('this string').to.only.include(['this', 'string']);\n```\n",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "BDD assertion library.",
    "forks": 78,
    "stars": 232,
    "date": "2020-07-29T13:49:00Z",
    "updated": "Wed Jul 29 2020",
    "link": "https://github.com/hapijs/code"
  },
  "content": {
    "name": "content",
    "versions": [
      {
        "name": "5.0.2",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "5.0.2"
    ],
    "api": true,
    "5.0.2": {
      "menu": "- [`type()`](#typeheader)\n- [`disposition()`](#dispositionheader)",
      "api": "<h3>\n<a id=\"typeheader\" class=\"anchor\" href=\"#typeheader\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>type(header)</code>\n</h3>\n<p>Generates an object containing the associated mime-type and the boundary (if specified).</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Content</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">type</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'application/json; some=property; and=\"another\"'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// { mime: 'application/json' }</span>\n\n<span class=\"pl-v\">Content</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">type</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'application/json; boundary=asdf'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// { mime: 'application/json', boundary: 'asdf' }</span></pre></div>\n<p>If the header is invalid (malformed) or missing required data, such as a <code>multipart/form-data</code> header missing its <code>boundary</code>, it returns an HTTP <code>Bad Request</code> error.</p>\n<h3>\n<a id=\"dispositionheader\" class=\"anchor\" href=\"#dispositionheader\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>disposition(header)</code>\n</h3>\n<p>Generates an object containing the details related to the <code>Content-Disposition</code> header for the <code>form-data</code> content type with support for <code>utf8</code> encoding.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Content</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">disposition</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'form-data; name=\"file\"; filename=file.jpg'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// { name: 'file', filename: 'file.jpg' }</span>\n\n<span class=\"pl-v\">Content</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">disposition</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'form-data; name=\"file\"; filename*=utf-8\\'en\\'with%20space'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// { name: 'file', filename: 'with space' }</span></pre></div>\n<p>If the header is invalid (malformed, invalid or missing properties) or is empty/missing, it returns an explanatory error.</p>\n",
      "intro": "",
      "example": "",
      "usage": "## Usage\n\n**content** allows to parse HTTP `Content-*` headers, currently based on the rules established in both [RFC 7231 Section 3.1.1.1](https://tools.ietf.org/html/rfc7231#section-3.1.1.1) and [RFC 6266 Section 4.1](http://tools.ietf.org/html/rfc6266#section-4.1).\n",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "HTTP Content-* headers parsing.",
    "forks": 9,
    "stars": 7,
    "date": "2020-08-22T17:12:23Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/content"
  },
  "cookie": {
    "name": "cookie",
    "versions": [
      {
        "name": "11.0.1",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "11.0.1"
    ],
    "api": true,
    "11.0.1": {
      "menu": "- [Usage](#usage)",
      "api": "<h2>\n<a id=\"usage\" class=\"anchor\" href=\"#usage\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Usage</h2>\n<p>Cookie authentication provides simple cookie-based session management. The user has to be\nauthenticated via other means, typically a web form, and upon successful authentication\nthe browser receives a reply with a session cookie. The cookie uses <a href=\"https://github.com/hapijs/iron\">Iron</a> to encrypt and sign the session content.</p>\n<p>Subsequent requests containing the session cookie are authenticated and validated via the provided <code>validateFunc</code> in case the cookie's encrypted content requires validation on each request.</p>\n<p>It is important to remember a couple of things:</p>\n<ol>\n<li>Each cookie operates as a bearer token and anyone in possession of the cookie content can use it to impersonate its true owner.</li>\n<li>Cookies have a practical maximum length. All of the data you store in a cookie is sent to the browser. If your cookie is too long, browsers may not set it. Read more <a href=\"http://webdesign.about.com/od/cookies/f/web-cookies-size-limit.htm\" rel=\"nofollow\">here</a> and <a href=\"http://www.ietf.org/rfc/rfc2965.txt\" rel=\"nofollow\">here</a>. If you need to store more data, store a small amount of identifying data in the cookie and use that as a key to a server-side cache system.</li>\n</ol>\n<p>The <code>'cookie</code>' scheme takes the following options:</p>\n<ul>\n<li>\n<p><code>cookie</code> - an object with the following:</p>\n<ul>\n<li>\n<code>name</code> - the cookie name. Defaults to <code>'sid'</code>.</li>\n<li>\n<code>password</code> - used for Iron cookie encoding. Should be at least 32 characters long.</li>\n<li>\n<code>ttl</code> - sets the cookie expires time in milliseconds. Defaults to single browser session (ends\nwhen browser closes). Required when <code>keepAlive</code> is <code>true</code>.</li>\n<li>\n<code>domain</code> - sets the cookie Domain value. Defaults to none.</li>\n<li>\n<code>path</code> - sets the cookie path value. Defaults to none.</li>\n<li>\n<code>clearInvalid</code> - if <code>true</code>, any authentication cookie that fails validation will be marked as\nexpired in the response and cleared. Defaults to <code>false</code>.</li>\n<li>\n<code>isSameSite</code> - if <code>false</code> omitted. Other options <code>Strict</code> or <code>Lax</code>. Defaults to <code>Strict</code>.</li>\n<li>\n<code>isSecure</code> - if <code>false</code>, the cookie is allowed to be transmitted over insecure connections which\nexposes it to attacks. Defaults to <code>true</code>.</li>\n<li>\n<code>isHttpOnly</code> - if <code>false</code>, the cookie will not include the 'HttpOnly' flag. Defaults to <code>true</code>.</li>\n</ul>\n</li>\n<li>\n<p><code>keepAlive</code> - if <code>true</code>, automatically sets the session cookie after validation to extend the\ncurrent session for a new <code>ttl</code> duration. Defaults to <code>false</code>.</p>\n</li>\n<li>\n<p><code>redirectTo</code> - optional login URI or function <code>function(request)</code> that returns a URI to redirect unauthenticated requests to. Note that it will only\ntrigger when the authentication mode is <code>'required'</code>. To enable or disable redirections for a specific route,\nset the route <code>plugins</code> config (<code>{ options: { plugins: { 'hapi-auth-cookie': { redirectTo: false } } } }</code>).\nDefaults to no redirection.</p>\n</li>\n<li>\n<p><code>appendNext</code> - if <code>redirectTo</code> is <code>true</code>, can be a boolean, string, or object. Defaults to <code>false</code>.</p>\n<ul>\n<li>if set to <code>true</code>, a string, or an object, appends the current request path to the query component\nof the <code>redirectTo</code> URI</li>\n<li>set to a string value or set the <code>name</code> property in an object to define the parameter name.\ndefaults to <code>'next'</code>\n</li>\n<li>set the <code>raw</code> property of the object to <code>true</code> to determine the current request path based on\nthe raw node.js request object received from the HTTP server callback instead of the processed\nhapi request object</li>\n</ul>\n</li>\n<li>\n<p><code>async validateFunc</code> - an optional session validation function used to validate the content of the\nsession cookie on each request. Used to verify that the internal session state is still valid\n(e.g. user account still exists). The function has the signature <code>function(request, session)</code>\nwhere:</p>\n<ul>\n<li>\n<code>request</code> - is the Hapi request object of the request which is being authenticated.</li>\n<li>\n<code>session</code> - is the session object set via <code>request.cookieAuth.set()</code>.</li>\n</ul>\n<p>Must return an object that contains:</p>\n<ul>\n<li>\n<code>valid</code> - <code>true</code> if the content of the session is valid, otherwise <code>false</code>.</li>\n<li>\n<code>credentials</code> - a credentials object passed back to the application in\n<code>request.auth.credentials</code>. If value is <code>null</code> or <code>undefined</code>, defaults to <code>session</code>. If\nset, will override the current cookie as if <code>request.cookieAuth.set()</code> was called.</li>\n</ul>\n</li>\n<li>\n<p><code>requestDecoratorName</code> - <em>USE WITH CAUTION</em> an optional name to use with decorating the <code>request</code> object.  Defaults to <code>'cookieAuth'</code>.  Using multiple decorator names for separate authentication strategies could allow a developer to call the methods for the wrong strategy.  Potentially resulting in unintended authorized access.</p>\n</li>\n</ul>\n<p>When the cookie scheme is enabled on a route, the <code>request.cookieAuth</code> objects is decorated with\nthe following methods:</p>\n<ul>\n<li>\n<code>set(session)</code> - sets the current session. Must be called after a successful login to begin the\nsession. <code>session</code> must be a non-null object, which is set on successful subsequent\nauthentications in <code>request.auth.credentials</code> where:\n<ul>\n<li>\n<code>session</code> - the session object.</li>\n</ul>\n</li>\n<li>\n<code>set(key, value)</code> - sets a specific object key on the current session (which must already exist)\nwhere:\n<ul>\n<li>\n<code>key</code> - session key string.</li>\n<li>\n<code>value</code> - value to assign key.</li>\n</ul>\n</li>\n<li>\n<code>clear([key])</code> - clears the current session or session key where:\n<ul>\n<li>\n<code>key</code> - optional key string to remove a specific property of the session. If none provided,\ndefaults to removing the entire session which is used to log the user out.</li>\n</ul>\n</li>\n<li>\n<code>ttl(msecs)</code> - sets the ttl of the current active session where:\n<ul>\n<li>\n<code>msecs</code> - the new ttl in milliseconds.</li>\n</ul>\n</li>\n</ul>\n<p>Because this scheme decorates the <code>request</code> object with session-specific methods, it cannot be\nregistered more than once.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s\">'use strict'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">internals</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n\n<span class=\"pl-c\">// Simulate database for demo</span>\n\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">users</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">id</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'john'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">password</span>: <span class=\"pl-s\">'password'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n\n\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">renderHtml</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">login</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">message</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-k\">return</span> <span class=\"pl-s\">`</span>\n<span class=\"pl-s\">    &lt;html&gt;&lt;head&gt;&lt;title&gt;Login page&lt;/title&gt;&lt;/head&gt;&lt;body&gt;</span>\n<span class=\"pl-s\">    <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">message</span> ? <span class=\"pl-s\">'&lt;h3&gt;'</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">message</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s\">'&lt;/h3&gt;&lt;br&gt;&lt;/a&gt;'</span> : <span class=\"pl-s\">''</span><span class=\"pl-kos\">}</span></span></span>\n<span class=\"pl-s\">    &lt;form method=\"post\" action=\"/login\"&gt;</span>\n<span class=\"pl-s\">      Username: &lt;input type=\"text\" name=\"username\"&gt;&lt;br&gt;</span>\n<span class=\"pl-s\">      Password: &lt;input type=\"password\" name=\"password\"&gt;&lt;br&gt;&lt;/a&gt;</span>\n<span class=\"pl-s\">    &lt;input type=\"submit\" value=\"Login\"&gt;&lt;/form&gt;</span>\n<span class=\"pl-s\">    &lt;/body&gt;&lt;/html&gt;</span>\n<span class=\"pl-s\">      `</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">home</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">name</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-k\">return</span> <span class=\"pl-s\">`</span>\n<span class=\"pl-s\">    &lt;html&gt;&lt;head&gt;&lt;title&gt;Login page&lt;/title&gt;&lt;/head&gt;&lt;body&gt;</span>\n<span class=\"pl-s\">    &lt;h3&gt;Welcome <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">name</span><span class=\"pl-kos\">}</span></span>! You are logged in!&lt;/h3&gt;</span>\n<span class=\"pl-s\">    &lt;form method=\"get\" action=\"/logout\"&gt;</span>\n<span class=\"pl-s\">      &lt;input type=\"submit\" value=\"Logout\"&gt;</span>\n<span class=\"pl-s\">    &lt;/form&gt;</span>\n<span class=\"pl-s\">    &lt;/body&gt;&lt;/html&gt;</span>\n<span class=\"pl-s\">      `</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">8000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/cookie'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">strategy</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'session'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'cookie'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-c1\">cookie</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'sid-example'</span><span class=\"pl-kos\">,</span>\n\n            <span class=\"pl-c\">// Don't forget to change it to your own secret password!</span>\n            <span class=\"pl-c1\">password</span>: <span class=\"pl-s\">'password-should-be-32-characters'</span><span class=\"pl-kos\">,</span>\n\n            <span class=\"pl-c\">// For working via HTTP in localhost</span>\n            <span class=\"pl-c1\">isSecure</span>: <span class=\"pl-c1\">false</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n\n        <span class=\"pl-c1\">redirectTo</span>: <span class=\"pl-s\">'/login'</span><span class=\"pl-kos\">,</span>\n\n        <span class=\"pl-en\">validateFunc</span>: <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">session</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n            <span class=\"pl-k\">const</span> <span class=\"pl-s1\">account</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">users</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">session</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n            <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span>!<span class=\"pl-s1\">account</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c\">// Must return { valid: false } for invalid cookies</span>\n                <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">valid</span>: <span class=\"pl-c1\">false</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-kos\">}</span>\n\n            <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">valid</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">credentials</span>: <span class=\"pl-s1\">account</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">default</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'session'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-en\">handler</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n                    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">renderHtml</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">home</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">credentials</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/login'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">auth</span>: <span class=\"pl-kos\">{</span>\n                    <span class=\"pl-c1\">mode</span>: <span class=\"pl-s\">'try'</span>\n                <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">plugins</span>: <span class=\"pl-kos\">{</span>\n                    <span class=\"pl-s\">'hapi-auth-cookie'</span>: <span class=\"pl-kos\">{</span>\n                        <span class=\"pl-c1\">redirectTo</span>: <span class=\"pl-c1\">false</span>\n                    <span class=\"pl-kos\">}</span>\n                <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-en\">handler</span>: <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n                    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">isAuthenticated</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n                        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">redirect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                    <span class=\"pl-kos\">}</span>\n\n                    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">renderHtml</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">login</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'POST'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/login'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">auth</span>: <span class=\"pl-kos\">{</span>\n                    <span class=\"pl-c1\">mode</span>: <span class=\"pl-s\">'try'</span>\n                <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-en\">handler</span>: <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n                    <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> username<span class=\"pl-kos\">,</span> password <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">payload</span><span class=\"pl-kos\">;</span>\n                    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span>!<span class=\"pl-s1\">username</span> <span class=\"pl-c1\">||</span> !<span class=\"pl-s1\">password</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n                        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">renderHtml</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">login</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Missing username or password'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                    <span class=\"pl-kos\">}</span>\n\n                    <span class=\"pl-c\">// Try to find user with given credentials</span>\n\n                    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">account</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">users</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">find</span><span class=\"pl-kos\">(</span>\n                        <span class=\"pl-kos\">(</span><span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">username</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">password</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">password</span>\n                    <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n                    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span>!<span class=\"pl-s1\">account</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n                        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">renderHtml</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">login</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Invalid username or password'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                    <span class=\"pl-kos\">}</span>\n\n                    <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">cookieAuth</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">set</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">account</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">redirect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/logout'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-en\">handler</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n                    <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">cookieAuth</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">clear</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">redirect</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Server started at: <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">info</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">uri</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">await</span> <span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n    <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">stack</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">exit</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Cookie authentication plugin.",
    "forks": 99,
    "stars": 232,
    "date": "2020-08-22T20:43:47Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/cookie"
  },
  "crumb": {
    "name": "crumb",
    "versions": [
      {
        "name": "8.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "8.0.0"
    ],
    "api": true,
    "8.0.0": {
      "menu": "  - [About](#about)\n  - [CORS](#cors)\n- [Options](#options)\n  - [Registration options](#registration-options)\n  - [Routes configuration](#routes-configuration)",
      "api": "<h3>\n<a id=\"about\" class=\"anchor\" href=\"#about\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>About</h3>\n<p>Crumb is used to diminish CSRF attacks using a random unique token that is validated on the server side.</p>\n<p>Crumb may be used whenever you want to prevent malicious code to execute system commands, that are performed by HTTP requests. For example, if users are able to publish code on your website, malicious code added by a user could force every other user who opens the page, to load and execute code from a third party website e.g. via an HTML image tag. With Crumb implemented into your hapi.js application, you are able to verify requests with unique tokens and prevent the execution of malicious requests.</p>\n<h3>\n<a id=\"cors\" class=\"anchor\" href=\"#cors\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>CORS</h3>\n<p>Crumb has been refactored to securely work with CORS, as <a href=\"https://www.owasp.org/index.php/HTML5_Security_Cheat_Sheet#Cross_Origin_Resource_Sharing\" rel=\"nofollow\">OWASP</a> recommends using CSRF protection with CORS.</p>\n<p><strong>It is highly discouraged to have a production servers <code>cors.origin</code> setting set to \"[*]\" or \"true\" with Crumb as it will leak the crumb token to potentially malicious sites</strong></p>\n<h2>\n<a id=\"options\" class=\"anchor\" href=\"#options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Options</h2>\n<p>The following options are available when registering the plugin.</p>\n<h3>\n<a id=\"registration-options\" class=\"anchor\" href=\"#registration-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Registration options</h3>\n<ul>\n<li>\n<code>key</code> - the name of the cookie to store the csrf crumb into. Defaults to <code>crumb</code>.</li>\n<li>\n<code>size</code> - the length of the crumb to generate. Defaults to <code>43</code>, which is 256 bits, see <a href=\"https://github.com/hapijs/cryptiles\">cryptile</a> for more information.</li>\n<li>\n<code>autoGenerate</code> - whether to automatically generate a new crumb for requests. Defaults to <code>true</code>.</li>\n<li>\n<code>addToViewContext</code> - whether to automatically add the crumb to view contexts as the given key. Defaults to <code>true</code>.</li>\n<li>\n<code>cookieOptions</code> - storage options for the cookie containing the crumb, see the <a href=\"http://hapijs.com/api#serverstatename-options\" rel=\"nofollow\">server.state</a> documentation of hapi for more information. Default to <code>cookieOptions.path=/</code> . <strong>Note that the cookie is not set as secure by default.  It should be set as 'secure:true' for production use.</strong>\n</li>\n<li>\n<code>headerName</code> - specify the name of the custom CSRF header. Defaults to <code>X-CSRF-Token</code>.</li>\n<li>\n<code>restful</code> - RESTful mode that validates crumb tokens from <em>\"X-CSRF-Token\"</em> request header for <strong>POST</strong>, <strong>PUT</strong>, <strong>PATCH</strong> and <strong>DELETE</strong> server routes. Disables payload/query crumb validation. Defaults to <code>false</code>.</li>\n<li>\n<code>skip</code> - a function with the signature of <code>function (request, h) {}</code>, which when provided, is called for every request. If the provided function returns true, validation and generation of crumb is skipped. Defaults to <code>false</code>.</li>\n<li>\n<code>enforce</code> - defaults to true, using enforce with false will set the CSRF header cookie but won't execute the validation</li>\n<li>\n<code>logUnauthorized</code> - whether to add to the request log with tag 'crumb' and data 'validation failed' (defaults to false)</li>\n</ul>\n<h3>\n<a id=\"routes-configuration\" class=\"anchor\" href=\"#routes-configuration\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Routes configuration</h3>\n<p>Additionally, some configuration can be passed on a per-route basis. Disable Crumb for a particular route by passing <code>false</code> instead of a configuration object.</p>\n<ul>\n<li>\n<code>key</code> - the key used in the view contexts and payloads for the crumb. Defaults to <code>plugin.key</code>.</li>\n<li>\n<code>source</code> - can be either <code>payload</code> or <code>query</code> specifying how the crumb will be sent in requests. Defaults to <code>payload</code>.</li>\n<li>\n<code>restful</code> - an override for the server's 'restful' setting. Defaults to <code>plugin.restful</code>.</li>\n</ul>\n",
      "intro": "",
      "example": "",
      "usage": "## Usage\n\n```js\n  const Hapi = require('@hapi/hapi');\n  const Crumb = require('@hapi/crumb');\n\n  const server = new Hapi.Server({ port: 8000 });\n\n  (async () => {\n    await server.register({\n      plugin: Crumb,\n\n      // plugin options\n      options: {}\n    });\n\n    server.route({\n      path: '/login',\n      method: 'GET',\n      options: {\n        plugins: {\n          // route specific options\n          crumb: {}\n        },\n        handler(request, h) {\n          // this requires to have a view engine configured\n          return h.view('some-view');\n        }\n      }\n    });\n  })();\n```\n\nFor a complete example see [the examples folder](https://github.com/hapijs/crumb/tree/master/example).\n",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "CSRF crumb generation and validation for hapi.",
    "forks": 48,
    "stars": 172,
    "date": "2020-09-03T16:34:52Z",
    "updated": "Thu Sep 03 2020",
    "link": "https://github.com/hapijs/crumb"
  },
  "cryptiles": {
    "name": "cryptiles",
    "versions": [
      {
        "name": "5.1.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "5.1.0"
    ],
    "api": true,
    "5.1.0": {
      "menu": "- [Methods](#methods)\n  - [`randomString()`](#randomstring-size)\n  - [`randomAlphanumString()`](#randomalphanumstring-size)\n  - [`randomDigits()`](#randomdigits-size)",
      "api": "<h2>\n<a id=\"methods\" class=\"anchor\" href=\"#methods\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Methods</h2>\n<h3>\n<a id=\"randomstringnumber-size\" class=\"anchor\" href=\"#randomstringnumber-size\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>randomString(&lt;Number&gt; size)</code>\n</h3>\n<p>Returns a cryptographically strong pseudo-random data string. Takes a size argument for the length of the string.</p>\n<h3>\n<a id=\"randomalphanumstringnumber-size\" class=\"anchor\" href=\"#randomalphanumstringnumber-size\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>randomAlphanumString(&lt;Number&gt; size)</code>\n</h3>\n<p>Returns a cryptographically strong pseudo-random alphanumeric data string. Takes a size argument for the length of the string.</p>\n<h3>\n<a id=\"randomdigitsnumber-size\" class=\"anchor\" href=\"#randomdigitsnumber-size\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>randomDigits(&lt;Number&gt; size)</code>\n</h3>\n<p>Returns a cryptographically strong pseudo-random data string consisting of only numerical digits (0-9). Takes a size argument for the length of the string.</p>\n",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "General purpose crypto utilities.",
    "forks": 24,
    "stars": 182,
    "date": "2020-08-22T17:13:08Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/cryptiles"
  },
  "eslint-plugin-hapi": {
    "name": "eslint-plugin-hapi",
    "versions": [
      {
        "name": "4.3.5",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "4.3.5"
    ],
    "api": true,
    "4.3.5": {
      "menu": "- [Rules](#rules)\n  - [capitalize-modules](#capitalize-modules)\n    - [`global-scope-only`](#global-scope-only)\n  - [for-loop](#for-loop)\n    - [Rule options](#rule-options)\n      - [`maxDepth`](#maxdepth)\n      - [`startIterator`](#startiterator)\n  - [no-var](#no-var)\n  - [scope-start](#scope-start)\n    - [`allow-one-liners`](#allow-one-liners)\n    - [`max-in-one-liner`](#max-in-one-liner)\n  - [no-arrowception](#no-arrowception)\n- [Config](#config)",
      "api": "<p>ESLint plugin containing hapi style guide rules and config. To use in your project, add\n<a href=\"https://github.com/hapijs/eslint-plugin-hapi\"><code>@hapi/eslint-plugin-hapi</code></a> to your <code>package.json</code>, then in your ESLint configuration add:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>extends<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>plugin:@hapi/hapi/recommended<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<h2>\n<a id=\"rules\" class=\"anchor\" href=\"#rules\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Rules</h2>\n<p>This plugin includes the following ESLint rules:</p>\n<h3>\n<a id=\"capitalize-modules\" class=\"anchor\" href=\"#capitalize-modules\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>capitalize-modules</h3>\n<p>Enforces capitalization of imported module variables.</p>\n<h4>\n<a id=\"global-scope-only\" class=\"anchor\" href=\"#global-scope-only\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>global-scope-only</code>\n</h4>\n<p>If the string <code>'global-scope-only'</code> is passed as the first option to this rule,\nthen it will only be enforced on assignments in the module's top level scope.</p>\n<h3>\n<a id=\"for-loop\" class=\"anchor\" href=\"#for-loop\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>for-loop</h3>\n<p>Enforces <code>for</code> loop iterator variable rules and restricts loop nesting depth.</p>\n<p>This rule enforces the following:</p>\n<ul>\n<li>Restrict iterator variable names. <code>for</code> loop iterator variables should be named <code>i</code>. Nested loops should use the variables <code>j</code>, <code>k</code>, and so on.</li>\n<li>Restrict loop nesting.  You can restrict the maximum nesting of <code>for</code> loops. By default, this limit is three.</li>\n<li>Prevent postfix increment and decrement operators. The hapi style guide does not allow postfix increment and decrement operators in <code>for</code> loop updates. The prefix version of these operators should be used instead.</li>\n<li>Single variable declaration in initialization section. A single <code>var i = 0;</code> is allowed in the initialization section. This only applies to variable declarations, not assignments to existing variables. This means that <code>for (i = 0, j = 0)</code> is allowed if <code>i</code> and <code>j</code> are existing variables. Variable declarations involving destructuring are not allowed.</li>\n</ul>\n<h4>\n<a id=\"rule-options\" class=\"anchor\" href=\"#rule-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Rule options</h4>\n<p>This rule can be configured by providing a single options object. The object supports the following keys.</p>\n<h5>\n<a id=\"maxdepth\" class=\"anchor\" href=\"#maxdepth\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>maxDepth</code>\n</h5>\n<p>A number representing the maximum allowed nesting of <code>for</code> loops. Defaults to three.</p>\n<h5>\n<a id=\"startiterator\" class=\"anchor\" href=\"#startiterator\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>startIterator</code>\n</h5>\n<p>The first variable iterator name to use. This defaults to <code>'i'</code>.</p>\n<h3>\n<a id=\"no-var\" class=\"anchor\" href=\"#no-var\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>no-var</h3>\n<p>Enforces the usage of var declarations only in try-catch scope.</p>\n<h3>\n<a id=\"scope-start\" class=\"anchor\" href=\"#scope-start\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>scope-start</h3>\n<p>Enforces a new line at the beginning of function scope.</p>\n<h4>\n<a id=\"allow-one-liners\" class=\"anchor\" href=\"#allow-one-liners\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>allow-one-liners</code>\n</h4>\n<p>If the string <code>'allow-one-liners'</code> is passed as the first option to this rule,\nthen functions whose bodies contain zero or one statements are allowed to be\nwritten on a single line. This defaults to <code>true</code> for arrow functions, and\n<code>false</code> otherwise.</p>\n<h4>\n<a id=\"max-in-one-liner\" class=\"anchor\" href=\"#max-in-one-liner\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>max-in-one-liner</code>\n</h4>\n<p>The second option to this rule dictates the maximum number of statements allowed\nin the bodies of one line function. This must be used in conjunction with\n<code>allow-one-liners</code>. Defaults to one.</p>\n<h3>\n<a id=\"no-arrowception\" class=\"anchor\" href=\"#no-arrowception\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>no-arrowception</h3>\n<p>Prevents arrow functions that implicitly create additional arrow functions.</p>\n<p>This rule prevents the pattern () =&gt; () =&gt; () =&gt; ...;.</p>\n<p>Functions can still be returned by arrow functions whose bodies use curly braces and an explicit return.</p>\n<p>This rule does not accept any configuration options.</p>\n<h2>\n<a id=\"config\" class=\"anchor\" href=\"#config\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Config</h2>\n<table>\n<thead>\n<tr>\n<th>Rule</th>\n<th>Option</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>'@hapi/hapi/capitalize-modules'</strong></td>\n<td>['warn', 'global-scope-only']</td>\n</tr>\n<tr>\n<td><strong>'@hapi/hapi/for-loop'</strong></td>\n<td>['warn', { maxDepth: 3, startIterator: 'i' }]</td>\n</tr>\n<tr>\n<td><strong>'@hapi/hapi/no-var'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'@hapi/hapi/scope-start'</strong></td>\n<td>'warn'</td>\n</tr>\n<tr>\n<td><strong>'@hapi/hapi/no-arrowception'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'camelcase'</strong></td>\n<td>'off'</td>\n</tr>\n<tr>\n<td><strong>'consistent-return'</strong></td>\n<td>'off'</td>\n</tr>\n<tr>\n<td><strong>'vars-on-top'</strong></td>\n<td>'off'</td>\n</tr>\n<tr>\n<td><strong>'new-cap'</strong></td>\n<td>'off</td>\n</tr>\n<tr>\n<td><strong>'no-console'</strong></td>\n<td>'off'</td>\n</tr>\n<tr>\n<td><strong>'no-constant-condition'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-empty'</strong></td>\n<td>'off'</td>\n</tr>\n<tr>\n<td><strong>'no-native-reassign'</strong></td>\n<td>'off'</td>\n</tr>\n<tr>\n<td><strong>'no-underscore-dangle'</strong></td>\n<td>'off'</td>\n</tr>\n<tr>\n<td><strong>'no-undef'</strong></td>\n<td>['error', { typeof: false }]</td>\n</tr>\n<tr>\n<td><strong>'no-process-exit'</strong></td>\n<td>'off'</td>\n</tr>\n<tr>\n<td><strong>'no-unused-expressions'</strong></td>\n<td>'off'</td>\n</tr>\n<tr>\n<td><strong>'no-regex-spaces'</strong></td>\n<td>'off'</td>\n</tr>\n<tr>\n<td><strong>'no-catch-shadow'</strong></td>\n<td>'off'</td>\n</tr>\n<tr>\n<td><strong>'no-lonely-if'</strong></td>\n<td>'off'</td>\n</tr>\n<tr>\n<td><strong>'brace-style'</strong></td>\n<td>['warn', 'stroustrup']</td>\n</tr>\n<tr>\n<td><strong>'no-shadow'</strong></td>\n<td>['warn', { allow: ['err', 'done'] }]</td>\n</tr>\n<tr>\n<td><strong>'no-unused-vars'</strong></td>\n<td>['warn', { vars: 'all', varsIgnorePattern: '^internals$', args: 'none' }]</td>\n</tr>\n<tr>\n<td><strong>'one-var'</strong></td>\n<td>['error', 'never']</td>\n</tr>\n<tr>\n<td><strong>'handle-callback-err'</strong></td>\n<td>['error', '^(e|err|error)$']</td>\n</tr>\n<tr>\n<td><strong>'array-bracket-spacing'</strong></td>\n<td>'warn'</td>\n</tr>\n<tr>\n<td><strong>'dot-notation'</strong></td>\n<td>'warn'</td>\n</tr>\n<tr>\n<td><strong>'eol-last'</strong></td>\n<td>'warn'</td>\n</tr>\n<tr>\n<td><strong>'no-trailing-spaces'</strong></td>\n<td>'warn'</td>\n</tr>\n<tr>\n<td><strong>'no-eq-null'</strong></td>\n<td>'warn'</td>\n</tr>\n<tr>\n<td><strong>'no-extend-native'</strong></td>\n<td>'warn'</td>\n</tr>\n<tr>\n<td><strong>'no-redeclare'</strong></td>\n<td>'warn'</td>\n</tr>\n<tr>\n<td><strong>'no-loop-func'</strong></td>\n<td>'warn'</td>\n</tr>\n<tr>\n<td><strong>'yoda'</strong></td>\n<td>['warn', 'never']</td>\n</tr>\n<tr>\n<td><strong>'sort-vars'</strong></td>\n<td>'warn'</td>\n</tr>\n<tr>\n<td><strong>'arrow-parens'</strong></td>\n<td>['error', 'always']</td>\n</tr>\n<tr>\n<td><strong>'arrow-spacing'</strong></td>\n<td>['error', { before: true, after: true }]</td>\n</tr>\n<tr>\n<td><strong>'quotes'</strong></td>\n<td>['error', 'single', { allowTemplateLiterals: true }]</td>\n</tr>\n<tr>\n<td><strong>'consistent-this'</strong></td>\n<td>['error', 'self']</td>\n</tr>\n<tr>\n<td><strong>'new-parens'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-array-constructor'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-confusing-arrow'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-new-object'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-spaced-func'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-mixed-spaces-and-tabs'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'key-spacing'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'keyword-spacing'</strong></td>\n<td>['error', { before: true, after: true }]</td>\n</tr>\n<tr>\n<td><strong>'semi'</strong></td>\n<td>['error', 'always']</td>\n</tr>\n<tr>\n<td><strong>'semi-spacing'</strong></td>\n<td>['error', { before: false, after: true }]</td>\n</tr>\n<tr>\n<td><strong>'space-before-blocks'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'space-infix-ops'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'space-unary-ops'</strong></td>\n<td>['warn', { words: true, nonwords: false }]</td>\n</tr>\n<tr>\n<td><strong>'strict'</strong></td>\n<td>['error', 'global']</td>\n</tr>\n<tr>\n<td><strong>'eqeqeq'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'curly'</strong></td>\n<td>['error', 'all']</td>\n</tr>\n<tr>\n<td><strong>'no-eval'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-else-return'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-return-assign'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-new-wrappers'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'comma-dangle'</strong></td>\n<td>['error', 'never']</td>\n</tr>\n<tr>\n<td><strong>'no-sparse-arrays'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-ex-assign'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'prefer-arrow-callback'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'prefer-const'</strong></td>\n<td>['error', { destructuring: 'all' }]</td>\n</tr>\n<tr>\n<td><strong>'indent'</strong></td>\n<td>['error', 4, { SwitchCase: 1 }]</td>\n</tr>\n<tr>\n<td><strong>'space-before-function-paren'</strong></td>\n<td>['error', { anonymous: 'always', named: 'never' }]</td>\n</tr>\n<tr>\n<td><strong>'func-style'</strong></td>\n<td>['error', 'expression']</td>\n</tr>\n<tr>\n<td><strong>'object-curly-spacing'</strong></td>\n<td>['error', 'always']</td>\n</tr>\n<tr>\n<td><strong>'object-shorthand'</strong></td>\n<td>['error', 'properties']</td>\n</tr>\n<tr>\n<td><strong>'no-unsafe-finally'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-useless-computed-key'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'require-await'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'constructor-super'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-buffer-constructor'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-mixed-requires'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-new-require'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-caller'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-const-assign'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-dupe-class-members'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-class-assign'</strong></td>\n<td>'warn'</td>\n</tr>\n<tr>\n<td><strong>'no-new-symbol'</strong></td>\n<td>'error</td>\n</tr>\n<tr>\n<td><strong>'no-this-before-super'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'prefer-rest-params'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'prefer-spread'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-useless-call'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'rest-spread-spacing'</strong></td>\n<td>['error', 'never']</td>\n</tr>\n<tr>\n<td><strong>'no-extra-semi'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'no-dupe-keys'</strong></td>\n<td>'error'</td>\n</tr>\n<tr>\n<td><strong>'padding-line-between-statements'</strong></td>\n<td>[<br>'error', <br>{ blankLine: 'always', prev: 'directive', next: '*' }, <br>{ blankLine: 'any', prev: 'directive', next: 'directive' }, <br>{ blankLine: 'always', prev: 'cjs-import', next: '*' }, <br>{ blankLine: 'any', prev: 'cjs-import', next: 'cjs-import' }, <br>{ blankLine: 'always', prev: 'cjs-export', next: '*' }, <br>{ blankLine: 'always', prev: 'multiline-block-like', next: '*' }, <br>{ blankLine: 'always', prev: 'class', next: '*' }<br>]</td>\n</tr>\n</tbody>\n</table>\n",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "ESLint plugin containing hapi style guide rules and config.",
    "forks": 9,
    "stars": 20,
    "date": "2020-09-02T15:12:57Z",
    "updated": "Wed Sep 02 2020",
    "link": "https://github.com/hapijs/eslint-plugin-hapi"
  },
  "file": {
    "name": "file",
    "versions": [
      {
        "name": "2.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "2.0.0"
    ],
    "api": true,
    "2.0.0": {
      "menu": "- [Methods](#methods)\n  - [`uniqueFilename()`](#uniquefilenamepath-extension)",
      "api": "<h2>\n<a id=\"methods\" class=\"anchor\" href=\"#methods\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Methods</h2>\n<h3>\n<a id=\"uniquefilenamepath-extension\" class=\"anchor\" href=\"#uniquefilenamepath-extension\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>uniqueFilename(path, extension)</code>\n</h3>\n<p>Generate a random file name within a given path and optional extension.</p>\n<ul>\n<li>\n<code>path</code> - The file path within to generate a temporary file.</li>\n<li>\n<code>extension</code> - File extension.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">File</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/file'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">fileName</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">File</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">uniqueFilename</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/root'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'.txt'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>  <span class=\"pl-c\">//results in 'C:\\root\\1580115599192-8540-61d96458412e09d9.txt'</span></pre></div>\n",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "General purpose file utilities.",
    "forks": 6,
    "stars": 2,
    "date": "2020-08-22T18:15:27Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/file"
  },
  "glue": {
    "name": "glue",
    "versions": [
      {
        "name": "8.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "8.0.0"
    ],
    "api": true,
    "8.0.0": {
      "menu": "  - [A server composer for hapi.js.](#a-server-composer-for-hapijs)\n  - [hapi version dependency](#hapi-version-dependency)\n- [Interface](#interface)\n  - [`await compose()`](#await-composemanifest-options)\n  - [Notes](#notes)\n- [Usage](#usage)",
      "api": "<h3>\n<a id=\"a-server-composer-for-hapijs\" class=\"anchor\" href=\"#a-server-composer-for-hapijs\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>A server composer for hapi.js.</h3>\n<p>Glue provides configuration based composition of hapi's Server object. Specifically it wraps</p>\n<ul>\n<li><code>server = Hapi.server(Options)</code></li>\n<li><code>server.register(Plugins, Options)</code></li>\n</ul>\n<p>calling each based on the configuration generated from the glue manifest.</p>\n<h3>\n<a id=\"hapi-version-dependency\" class=\"anchor\" href=\"#hapi-version-dependency\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>hapi version dependency</h3>\n<p>Version 8 supports hapi <strong>v20</strong>\nVersion 7 supports hapi <strong>v19</strong>\nVersion 6 supports hapi <strong>v18</strong>\nVersion 5 supports hapi <strong>v17</strong></p>\n<p>By default npm will resolve glue's dependency on hapi using the most recent supported version of hapi. To force a specific supported hapi version for your project, include hapi in your package dependencies along side of glue.</p>\n<h2>\n<a id=\"interface\" class=\"anchor\" href=\"#interface\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Interface</h2>\n<p>Glue exports a single function <code>compose</code> accepting a JSON <code>manifest</code> specifying the hapi server options and plugin registrations and returns a <a href=\"https://hapi.dev/api\" rel=\"nofollow\">hapi</a> server object.\nTo start the server use the returned object to call <code>await server.start()</code>.</p>\n<h3>\n<a id=\"await-composemanifest-options\" class=\"anchor\" href=\"#await-composemanifest-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await compose(manifest, [options])</code>\n</h3>\n<p>Composes a hapi server object where:</p>\n<ul>\n<li>\n<code>manifest</code> - an object having:\n<ul>\n<li>\n<code>server</code> - an object containing the options passed to <a href=\"https://hapijs.com/api\" rel=\"nofollow\">hapi's</a> <code>new Hapi.Server([options])</code>\n<ul>\n<li>If <code>server.cache</code> is specified, glue will parse the entry and replace any prototype function field (eg. <code>provider</code>) specified as string by calling <code>require()</code> with that string.</li>\n</ul>\n</li>\n<li>\n<code>register</code> - an object containing two properties: the <code>plugins</code> to be registered and <code>options</code> to pass to <code>server.register</code>\n<ul>\n<li>\n<code>plugins</code> - an array of entries to register with <a href=\"https://hapijs.com/api\" rel=\"nofollow\">hapi's</a> <code>await server.register(plugins, [options])</code>\n<ul>\n<li>each entry may be one of three alternatives:\n<ol>\n<li>A string to be <code>require()</code>d during composition.</li>\n</ol>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">register</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">plugins</span>: <span class=\"pl-kos\">[</span> <span class=\"pl-s\">'myplugin'</span> <span class=\"pl-kos\">]</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<ol start=\"2\">\n<li>An object containing the <code>plugin</code> property which is a string to be <code>require</code>d during composition</li>\n</ol>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">register</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">plugins</span>: <span class=\"pl-kos\">[</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">plugin</span>: <span class=\"pl-s\">'myplugin'</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">]</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<ol start=\"3\">\n<li>An object containing the <code>plugin</code> property which is the plugin object to be passed directly to <code>await server.register</code>*[]:</li>\n</ol>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">register</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">plugins</span>: <span class=\"pl-kos\">[</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">plugin</span>: <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'myplugin'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">]</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n</li>\n<li>object entries may also contain the <code>options</code> property, which contains the plugin-level options passed to the plugin at registration time.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">register</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">plugins</span>: <span class=\"pl-kos\">[</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">plugin</span>: <span class=\"pl-s\">'myplugin'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">host</span>: <span class=\"pl-s\">'my-host.com'</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">]</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<ul>\n<li>object entries may also contain override registration-options such as <code>routes</code>.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">register</span>: <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">plugins</span>: <span class=\"pl-kos\">[</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">plugin</span>: <span class=\"pl-s\">'myplugin'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">routes</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">prefix</span>: <span class=\"pl-s\">'/test/'</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">]</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n</li>\n<li>\n<code>options</code> - optional registration-options object passed to <code>server.register()</code>.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>options</code> - an object containing the following <code>compose</code> options:\n<ul>\n<li>\n<code>relativeTo</code> - a file-system path string that is used to resolve loading modules with <code>require</code>.  Used in <code>server.cache</code> and <code>register.plugins[]</code>\n</li>\n<li>\n<code>preRegister</code> - an async function that is called prior to registering plugins with the server. The function signature is <code>async function (server)</code> where:\n<ul>\n<li>\n<code>server</code> - is the hapi server object.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><code>compose</code> returns the hapi server object. Call <code>await server.start()</code> to actually start the server.</p>\n<h3>\n<a id=\"notes\" class=\"anchor\" href=\"#notes\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Notes</h3>\n<p>If you are developing a plugin, ensure your plugin dependencies are properly managed to guarantee that all dependencies are loaded before your plugin registration completes.  See <a href=\"https://hapi.dev/api\" rel=\"nofollow\">hapi's</a> <code>server.dependency(dependencies, [after])</code> for more information.</p>\n<h2>\n<a id=\"usage\" class=\"anchor\" href=\"#usage\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Usage</h2>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s\">'use strict'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Glue</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/glue'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">manifest</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">server</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">cache</span>: <span class=\"pl-s\">'redis'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">8000</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">register</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">plugins</span>: <span class=\"pl-kos\">[</span>\n            <span class=\"pl-s\">'./awesome-plugin.js'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">plugin</span>: <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'myplugin'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">{</span>\n                    <span class=\"pl-c1\">uglify</span>: <span class=\"pl-c1\">true</span>\n                <span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">plugin</span>: <span class=\"pl-s\">'./ui-user'</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">plugin</span>: <span class=\"pl-s\">'./ui-admin'</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">{</span>\n                    <span class=\"pl-c1\">sessiontime</span>: <span class=\"pl-c1\">500</span>\n                <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">routes</span>: <span class=\"pl-kos\">{</span>\n                    <span class=\"pl-c1\">prefix</span>: <span class=\"pl-s\">'/admin'</span>\n                <span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">once</span>: <span class=\"pl-c1\">false</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">options</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">relativeTo</span>: <span class=\"pl-s1\">__dirname</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">startServer</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-v\">Glue</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">compose</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">manifest</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">options</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'hapi days!'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n    <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">exit</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">startServer</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>The above is translated into the following equivalent hapi API calls.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s\">'use strict'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">startServer</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">cache</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">provider</span>: <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'redis'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">8000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">plugins</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">registerOptions</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">once</span>: <span class=\"pl-c1\">false</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">let</span> <span class=\"pl-s1\">pluginPath</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-s1\">pluginPath</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">join</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./awesome-plugin.js'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-s1\">plugins</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">plugin</span>: <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">pluginPath</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-s1\">plugins</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">plugin</span>: <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'myplugin'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">options</span>:<span class=\"pl-kos\">{</span> <span class=\"pl-c1\">uglify</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-s1\">pluginPath</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">join</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./ui-user'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-s1\">plugins</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">plugin</span>: <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">pluginPath</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-s1\">pluginPath</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">join</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'./ui-admin'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-s1\">plugins</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">plugin</span>: <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">pluginPath</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">sessiontime</span>: <span class=\"pl-c1\">500</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">routes</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">prefix</span>: <span class=\"pl-s\">'/admin'</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">plugins</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">registerOptions</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'hapi days!'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n    <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-s1\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-s1\">exit</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">startServer</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n",
      "intro": "## Introduction\n",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Server composer for hapi.js.",
    "forks": 60,
    "stars": 246,
    "date": "2020-08-22T18:08:26Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/glue"
  },
  "good": {
    "name": "good",
    "versions": [
      {
        "name": "9.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "9.0.0"
    ],
    "api": true,
    "9.0.0": {
      "menu": "  - [Log to Console](#log-to-console)\n  - [Log to file](#log-to-file)\n  - [Add custom transform stream](#add-custom-transform-stream)\n- [Usage](#usage)\n  - [Options](#options)\n  - [Reporter Interface](#reporter-interface)\n    - [Stream Transforms Using Plugin Configs](#stream-transforms-using-plugin-configs)\n    - [Reporter Lifecycle](#reporter-lifecycle)\n  - [Event Types](#event-types)\n  - [Event Payloads](#event-payloads)\n    - [`ServerLog`](#serverlog)\n    - [`RequestError`](#requesterror)\n    - [`RequestSent`](#requestsent)\n    - [`Ops`](#ops)\n    - [`RequestLog`](#requestlog)\n    - [Extension Payloads](#extension-payloads)\n- [Existing streams](#existing-streams)",
      "api": "<h3>\n<a id=\"log-to-console\" class=\"anchor\" href=\"#log-to-console\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Log to Console</h3>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-en\">handler</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'b'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'c'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'some message'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-s\">'ok'</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span> handler <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">plugin</span>: <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/good'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">ops</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">interval</span>: <span class=\"pl-c1\">1000</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">reporters</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">myConsoleReporter</span>: <span class=\"pl-kos\">[</span>\n                    <span class=\"pl-kos\">{</span>\n                        <span class=\"pl-c1\">module</span>: <span class=\"pl-s\">'@hapi/good-squeeze'</span><span class=\"pl-kos\">,</span>\n                        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'Squeeze'</span><span class=\"pl-kos\">,</span>\n                        <span class=\"pl-c1\">args</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">log</span>: <span class=\"pl-s\">'*'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">response</span>: <span class=\"pl-s\">'*'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">ops</span>: <span class=\"pl-s\">'*'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span>\n                    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n                    <span class=\"pl-kos\">{</span>\n                        <span class=\"pl-c1\">module</span>: <span class=\"pl-s\">'@hapi/good-console'</span>\n                    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n                    <span class=\"pl-s\">'stdout'</span>\n                <span class=\"pl-kos\">]</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">info</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Server started at <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">info</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">uri</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">inject</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>This reporter spec logs ops statistics, request responses, and server log events to the console. It should log to the console something like:</p>\n<pre><code>Server started at http://localhost:41759\n190921/234014.495, [log,a,b,c] data: some message\n190921/234014.494, (1569109214494:localhost:3616:k0u742ki:10000) [response] http://localhost:41759: get / {} 200 (6ms)\n190921/234015.494, [ops] memory: 52Mb, uptime (seconds): 1.148846148, load: [0.02734375,0.0302734375,0]\n190921/234016.493, [ops] memory: 52Mb, uptime (seconds): 2.149207332, load: [0.02734375,0.0302734375,0]\n190921/234017.494, [ops] memory: 52Mb, uptime (seconds): 3.149818512, load: [0.02734375,0.0302734375,0]\n</code></pre>\n<p>It uses <code>@hapi/good-squeeze</code> to select only log and response events.</p>\n<p>Events that pass the filter stream to <code>@hapi/good-console</code> for formatting. See the <code>good console</code> <a href=\"https://github.com/hapijs/good-console#new-goodconsoleconfig\">constructor docs</a> for details on <code>args</code> values.</p>\n<p>Formatted events stream to <code>process.stdout</code> for display.</p>\n<h3>\n<a id=\"log-to-file\" class=\"anchor\" href=\"#log-to-file\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Log to file</h3>\n<p>Create a basic write stream class and use with good:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Fs</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'fs-extra'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">GoodFile</span> <span class=\"pl-k\">extends</span> <span class=\"pl-v\">Fs</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">WriteStream</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-en\">constructor</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">path</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">options</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">defaults</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">encoding</span>: <span class=\"pl-s\">'utf8'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">flags</span>: <span class=\"pl-s\">'a'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">mode</span>: <span class=\"pl-c1\">0o666</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">settings</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Object</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">assign</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">defaults</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">options</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-s1\">settings</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">fd</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">-</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">;</span>       <span class=\"pl-c\">// Prevent open from being called in `super`</span>\n\n        <span class=\"pl-smi\">super</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">path</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">settings</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">open</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-en\">open</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">fd</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">null</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-v\">Fs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">ensureFile</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">path</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n            <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">destroy</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">emit</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'error'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-k\">return</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-kos\">}</span>\n\n            <span class=\"pl-smi\">super</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">open</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-en\">handler</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'b'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'c'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'some message'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-s\">'ok'</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span> handler <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">plugin</span>: <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/good'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">ops</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">interval</span>: <span class=\"pl-c1\">1000</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">reporters</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">myReporter</span>: <span class=\"pl-kos\">[</span>\n                    <span class=\"pl-kos\">{</span>\n                        <span class=\"pl-c1\">module</span>: <span class=\"pl-s\">'@hapi/good-squeeze'</span><span class=\"pl-kos\">,</span>   <span class=\"pl-c\">// Transform payload into a safe string</span>\n                        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'SafeJson'</span>\n                    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n                    <span class=\"pl-kos\">{</span>\n                        <span class=\"pl-c1\">module</span>: <span class=\"pl-v\">GoodFile</span><span class=\"pl-kos\">,</span>\n                        <span class=\"pl-c1\">args</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'./log.json'</span><span class=\"pl-kos\">]</span>\n                    <span class=\"pl-kos\">}</span>\n                <span class=\"pl-kos\">]</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'log'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'Server Started'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">inject</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>This will create or append a file <code>./log.json</code> with the following:</p>\n<div class=\"highlight highlight-source-json\"><pre>{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>event<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>log<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>timestamp<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">1569109412144</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tags<span class=\"pl-pds\">\"</span></span>:[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>log<span class=\"pl-pds\">\"</span></span>],<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>data<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Server Started<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>pid<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">3630</span>}\n{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>event<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>log<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>timestamp<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">1569109412148</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tags<span class=\"pl-pds\">\"</span></span>:[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>c<span class=\"pl-pds\">\"</span></span>],<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>data<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>some message<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>pid<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">3630</span>}\n{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>event<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>response<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>timestamp<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">1569109412146</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>id<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1569109412146:localhost:3630:k0u78b2x:10000<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>instance<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://localhost:44883<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>method<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>get<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>path<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>query<span class=\"pl-pds\">\"</span></span>:{},<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>responseTime<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">5</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCode<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">200</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>pid<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">3630</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>httpVersion<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.1<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>route<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>log<span class=\"pl-pds\">\"</span></span>:[],<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>source<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>remoteAddress<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>127.0.0.1<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>userAgent<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>shot<span class=\"pl-pds\">\"</span></span>},<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>config<span class=\"pl-pds\">\"</span></span>:{}}\n{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>event<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ops<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>timestamp<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">1569109413146</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>host<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>localhost<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>pid<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">3630</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>os<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>load<span class=\"pl-pds\">\"</span></span>:[<span class=\"pl-c1\">0.0029296875</span>,<span class=\"pl-c1\">0.02001953125</span>,<span class=\"pl-c1\">0</span>],<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>mem<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>total<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">16682434560</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>free<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">6650597376</span>},<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>uptime<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">851831</span>},<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>proc<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>uptime<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">1.160361771</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>mem<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>rss<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">54652928</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>heapTotal<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">18948096</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>heapUsed<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">8310912</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>external<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">1271839</span>},<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>delay<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">0.9361389875411987</span>},<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>load<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>requests<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>44883<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>total<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>disconnects<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">0</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCodes<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>200<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">1</span>}}},<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>responseTimes<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>44883<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>avg<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">5</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>max<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">5</span>}},<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sockets<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>total<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">0</span>},<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>total<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">0</span>}}}}\n{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>event<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ops<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>timestamp<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">1569109414145</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>host<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>localhost<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>pid<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">3630</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>os<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>load<span class=\"pl-pds\">\"</span></span>:[<span class=\"pl-c1\">0.0029296875</span>,<span class=\"pl-c1\">0.02001953125</span>,<span class=\"pl-c1\">0</span>],<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>mem<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>total<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">16682434560</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>free<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">6650597376</span>},<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>uptime<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">851832</span>},<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>proc<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>uptime<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">2.160405932</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>mem<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>rss<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">54652928</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>heapTotal<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">18948096</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>heapUsed<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">8358032</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>external<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">1271887</span>},<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>delay<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">0.29865598678588867</span>},<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>load<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>requests<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>44883<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>total<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">0</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>disconnects<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">0</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>statusCodes<span class=\"pl-pds\">\"</span></span>:{}}},<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>responseTimes<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>44883<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>avg<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">null</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>max<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">0</span>}},<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sockets<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>total<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">0</span>},<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https<span class=\"pl-pds\">\"</span></span>:{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>total<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-c1\">0</span>}}}}</pre></div>\n<h3>\n<a id=\"add-custom-transform-stream\" class=\"anchor\" href=\"#add-custom-transform-stream\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Add custom transform stream</h3>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Stream</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'stream'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">LogDateTransform</span> <span class=\"pl-k\">extends</span> <span class=\"pl-v\">Stream</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Transform</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-en\">constructor</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-smi\">super</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">objectMode</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-en\">_transform</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">enc</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">next</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">date</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Date</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Date</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">now</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toLocaleString</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'en-US'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-k\">return</span> <span class=\"pl-s1\">next</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">`<span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">event</span><span class=\"pl-kos\">}</span></span>: <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">date</span><span class=\"pl-kos\">}</span></span>: <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">data</span><span class=\"pl-kos\">}</span></span>\\n`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n\n        <span class=\"pl-s1\">next</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">null</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-en\">handler</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'b'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'c'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'some message'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-s\">'ok'</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span> handler <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">plugin</span>: <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/good'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">options</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">ops</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">interval</span>: <span class=\"pl-c1\">1000</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">reporters</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">myReporter</span>: <span class=\"pl-kos\">[</span>\n                    <span class=\"pl-k\">new</span> <span class=\"pl-v\">LogDateTransform</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n                    <span class=\"pl-s\">'stdout'</span>\n                <span class=\"pl-kos\">]</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'info'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'Server is running...'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">inject</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>This reporter logs data with a date time, writing to the console something like:</p>\n<pre><code>log: 9 / 21 / 2019, 4: 47: 25 PM: Server is running...\nlog: 9 / 21 / 2019, 4: 47: 25 PM: some message\n</code></pre>\n<h2>\n<a id=\"usage\" class=\"anchor\" href=\"#usage\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Usage</h2>\n<h3>\n<a id=\"options\" class=\"anchor\" href=\"#options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Options</h3>\n<ul>\n<li>\n<code>[includes]</code> - optional configuration object\n<ul>\n<li>\n<code>[request]</code> - array of extra hapi request object fields to supply to reporters on \"request\", \"response\", and \"error\" events. Valid values ['headers', 'payload']. Defaults to <code>[]</code>.</li>\n<li>\n<code>[response]</code> - array of extra hapi response object fields to supply to reporters on \"response\" events. Valid values ['headers', 'payload']. Defaults to <code>[]</code>.</li>\n</ul>\n</li>\n<li>\n<code>[ops]</code> - options for controlling the ops reporting from good. Set to <code>false</code> to disable ops monitoring completely.\n<ul>\n<li>\n<code>config</code> - options passed directly into the <a href=\"https://github.com/hapijs/oppsy\"><code>Oppsy</code></a> constructor as the <code>config</code> value. Defaults to <code>{}</code>\n</li>\n<li>\n<code>interval</code> - interval used when calling <code>Oppsy.start()</code>. Defaults to <code>15000</code>.</li>\n</ul>\n</li>\n<li>\n<code>[extensions]</code> - an array of <a href=\"https://github.com/hapijs/hapi/blob/master/API.md#server.events\">hapi event names</a> to listen for and report via the good reporting mechanism. Can not be any of ['log', 'ops', 'request', 'response', 'tail']. <strong>Disclaimer</strong> This option should be used with caution. This option will allow users to listen to internal events that are not meant for public consumption. The list of available events can change with any changes to the hapi event system. Also, <em>none</em> of the official hapijs reporters have been tested against these custom events. The schema for these events can not be guaranteed because they vary from version to version of hapi.</li>\n<li>\n<code>[reporters]</code> - Defaults to <code>{}</code>. <code>reporters</code> is an object of <code>key</code>, <code>value</code> pairs where the <code>key</code> is a reporter name and the <code>value</code> is an array of mixed value types. Valid values for the array items are:\n<ul>\n<li>streams specifications object with the following keys\n<ul>\n<li>\n<code>module</code> - can be :\n<ul>\n<li>a string that will be used to import a module from node_modules or a local file. Should export a single constructor function that can be invoked with <code>new</code>.</li>\n<li>a function that is the constructor of your stream. It's a safer alternative to the string version when you risk having module conflicts.</li>\n</ul>\n</li>\n<li>\n<code>[name]</code> - if the imported module exports more than one constructor function, use <code>name</code> to specify which one to use.</li>\n<li>\n<code>[args]</code> - an array of arguments to pass to the constructor when this stream object is created via <code>new</code>.</li>\n</ul>\n</li>\n<li>instantiated stream objects</li>\n<li>string name of a built in <code>process</code> stream. Valid values are <code>'stdout'</code> and <code>'stderr'</code>.</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"reporter-interface\" class=\"anchor\" href=\"#reporter-interface\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Reporter Interface</h3>\n<p>The reporter interface uses the standard stream-and-pipe interface found commonly in the node ecosystem. Each item in the array of streams will be piped together in the array order. Any stream described using a stream specification object will be constructed with <code>new</code> to prevent any cross contamination from one reporter to another. For example, when passing the following specification for an \"ops-console\" reporter:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-kos\">{</span>\n    <span class=\"pl-s\">'ops-console'</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">module</span>: <span class=\"pl-s\">'@hapi/good-squeeze'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'Squeeze'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">args</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">ops</span>: <span class=\"pl-s\">'*'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">module</span>: <span class=\"pl-s\">'@hapi/good-squeeze'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'SafeJson'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'stdout'</span><span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p>Internally, this would create an array (<code>streams</code>), import <code>good-squeeze</code> from node_modules, and then create a new \"Squeeze\" transform stream via <code>new Squeeze({ ops: '*' })</code> and push that result into <code>streams</code>. Then it would create a \"SafeJson\" transform stream via <code>new SafeJson()</code> and push that into <code>streams</code>. Finally, since 'stdout' is an existing process stream, it gets pushed directly into <code>streams</code>. Once all of the streams have been created and collected, the algorithm does essentially the following:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">streams</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">pipe</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">streams</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">pipe</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">streams</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p><em>Any</em> time one of the \"good events\" occurs, a unique copy of the event is pushed into each reporter stream pipeline. It is up to the developer to filter events they don't care about on a per pipeline basis. The \"Squeeze\" transform stream provides the basic event type and tag filtering used in previous versions of good which should meet many filtering needs.</p>\n<p>It is also up to the developer to manage <code>objectMode</code> in each pipeline from one stream to the next. The first stream will <em>always</em> receive an object. After that, it's up to the developer to manage the message type throughout the pipeline. In the above example, because we want to write to <code>stdout</code>, we needed to add a transform stream to convert the payload coming out of \"Squeeze\" to a string using \"SafeJson\" before sending it to <code>process.stdout</code>. Objects can not be written directly to <code>process.stdout</code>, so \"SafeJson\" was used to safely stringify the message coming from the \"Squeeze\" stream.</p>\n<p>Finally, the developer must make sure the reporting pipeline makes sense. In the above example, we pipe through two transform streams, convert the object to a string, and then write send it to <code>process.stdout</code> which is a write stream. If the developer mixes up the order, this pipeline would crash the process.</p>\n<p>Each reporter pipeline receives it's own copy of the message from good. That means the payload can be freely modified without worrying about impacting other reporters. Just add more and more transform streams into the pipeline to fine-tune any reporting needs. Need a different filtering mechanism? Write a new transform stream to filter based on IP, request route, payload type... Want to add extra data about events? Just add a transform stream into the mix to add the current date, something specific to your company, filter out sensitive information before logging it... the sky is the limit.</p>\n<p>These changes address the two most common requests; \"how do I filter on <code>X</code>?\" and \"how do I add <code>Y</code> to the message payload?\". Now developers are empowered to customize the reporting pipeline to suit their needs. While there is far less hand-holding with this interface, developers have much more control of reporting coming out of good.</p>\n<p><strong>This change also allows user to leverage <em>any</em> existing transform or write stream in the node ecosystem to be used with good.</strong></p>\n<h4>\n<a id=\"stream-transforms-using-plugin-configs\" class=\"anchor\" href=\"#stream-transforms-using-plugin-configs\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Stream Transforms Using Plugin Configs</h4>\n<p>To drive route or request level behavior in your stream transform one option is to use the plugin config feature of hapi. Here is an example where a plugin config is used to drive a stream transform that will suppress \"response\" events when <code>suppressResponseEvent === true</code>.</p>\n<p>Setting plugin config at the route level:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">var</span> <span class=\"pl-s1\">routeConfig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">plugins</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">good</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">suppressResponseEvent</span>: <span class=\"pl-c1\">true</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/user'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">config</span>: <span class=\"pl-s1\">routeConfig</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Setting plugin config at the request level:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-en\">handler</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">reply</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">plugins</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">good</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">suppressResponseEvent</span>: <span class=\"pl-c1\">true</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">reply</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">continue</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p>Consuming the plugin config in the stream transform:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-en\">_transform</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">enc</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">next</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\"></span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">event</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'response'</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">config</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">suppressResponseEvent</span> <span class=\"pl-c1\">===</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-en\">next</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-en\">next</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<h4>\n<a id=\"reporter-lifecycle\" class=\"anchor\" href=\"#reporter-lifecycle\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Reporter Lifecycle</h4>\n<p><strong>Startup</strong></p>\n<ol>\n<li>When \"onPreStart\" is emitted from the hapi server, the monitoring operation starts.</li>\n<li>All of the streams are created via <code>new</code> (if needed) and collected into a temporary internal array.</li>\n<li>All of the streams in the temporary array are piped together. This will cause any standard <a href=\"https://nodejs.org/api/stream.html\" rel=\"nofollow\">Node stream</a> events to occur that instances can listen for.</li>\n</ol>\n<p>At this point, data will start flowing to each of the reporters through the pipe interface. Data can be accessed in individual instances though any of the standard stream methods and events.</p>\n<p><strong>Shutdown</strong></p>\n<ol>\n<li>When \"onPostStop\" is emitted from the hapi server, the shutdown sequence starts.</li>\n<li>\n<code>null</code> is pushed through each reporter pipeline. Any synchronous teardown can happen on stream instances in \"end\" or \"finish\" events. See <a href=\"https://nodejs.org/api/stream.html\" rel=\"nofollow\">Node stream</a> for more information about end-of-stream events. The callback signaling to hapi that our logic is done executing will happen on the next tick.</li>\n</ol>\n<h3>\n<a id=\"event-types\" class=\"anchor\" href=\"#event-types\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Event Types</h3>\n<ul>\n<li>\n<code>ops</code> - System and process performance - CPU, memory, disk, and other metrics.</li>\n<li>\n<code>response</code> - Information about incoming requests and the response. This maps to either the \"response\" or \"tail\" event emitted from hapi servers.</li>\n<li>\n<code>log</code> - logging information not bound to a specific request such as system errors, background processing, configuration errors, etc. Maps to the \"log\" event emitted from hapi servers.</li>\n<li>\n<code>error</code> - request responses that have a status code of 500. This maps to the \"request\" hapi event on the \"error\" channel.</li>\n<li>\n<code>request</code> - Request logging information. This maps to the hapi 'request' event that is emitted via <code>request.log()</code>.</li>\n</ul>\n<h3>\n<a id=\"event-payloads\" class=\"anchor\" href=\"#event-payloads\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Event Payloads</h3>\n<p>Each event emitted from Good has a unique object representing the payload. This is useful for three reasons:</p>\n<ol>\n<li>It provides a predictable interface.</li>\n<li>It makes tracking down issues with MDB much easier because the payloads aren't just generic objects.</li>\n<li>It is more likely to be optimized because the V8 runtime has a better idea of what the structure of each object is going to be much sooner.</li>\n</ol>\n<h4>\n<a id=\"serverlog\" class=\"anchor\" href=\"#serverlog\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>ServerLog</code>\n</h4>\n<p>Event object associated with 'log' events.</p>\n<ul>\n<li>\n<code>event</code> - 'log'</li>\n<li>\n<code>timestamp</code> - JavaScript timestamp indicating when the 'log' event occurred.</li>\n<li>\n<code>tags</code> - array of strings representing any tags associated with the 'log' event.</li>\n<li>\n<code>data</code> - string or object passed via <code>server.log()</code> calls.</li>\n<li>\n<code>error</code> - error object, replacing <code>data</code> if only an error object is passed to <code>server.log()</code>\n</li>\n<li>\n<code>pid</code> - the current process id.</li>\n</ul>\n<h4>\n<a id=\"requesterror\" class=\"anchor\" href=\"#requesterror\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>RequestError</code>\n</h4>\n<p>Event object associated with 'error' events.</p>\n<ul>\n<li>\n<code>event</code> - 'error'</li>\n<li>\n<code>timestamp</code> - JavaScript timestamp indicating when the 'log' event occurred.</li>\n<li>\n<code>id</code> - request id. Maps to <code>request.id</code>.</li>\n<li>\n<code>url</code> - url of the request that originated the error. Maps to <code>request.url</code>.</li>\n<li>\n<code>method</code> - method of the request that originated the error. Maps to <code>request.method</code>.</li>\n<li>\n<code>pid</code> - the current process id.</li>\n<li>\n<code>error</code> - the raw error object.</li>\n<li>\n<code>config</code> - plugin-specific config object combining <code>request.route.settings.plugins.good</code> and <code>request.plugins.good</code>. Request-level overrides route-level. Reporters could use <code>config</code> for additional filtering logic.</li>\n<li>\n<code>headers</code> - the request headers if <code>includes.request</code> includes \"headers\"</li>\n</ul>\n<p>The <code>toJSON</code> method of <code>GreatError</code> has been overwritten because <code>Error</code> objects can not be stringified directly. A stringified <code>GreatError</code> will have <code>error.message</code> and <code>error.stack</code> in place of the raw <code>Error</code> object.</p>\n<h4>\n<a id=\"requestsent\" class=\"anchor\" href=\"#requestsent\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>RequestSent</code>\n</h4>\n<p>Event object associated with the response event option into Good.</p>\n<ul>\n<li>\n<code>event</code> - 'response'</li>\n<li>\n<code>timestamp</code> - JavaScript timestamp that maps to <code>request.info.received</code>.</li>\n<li>\n<code>id</code> - id of the request, maps to <code>request.id</code>.</li>\n<li>\n<code>instance</code> - maps to <code>server.info.uri</code>.</li>\n<li>\n<code>labels</code> - maps to <code>server.settings.labels</code>\n</li>\n<li>\n<code>method</code> - method used by the request. Maps to <code>request.method</code>.</li>\n<li>\n<code>path</code> - incoming path requested. Maps to <code>request.path</code>.</li>\n<li>\n<code>query</code> - query object used by request. Maps to <code>request.query</code>.</li>\n<li>\n<code>responseTime</code> - calculated value of <code>request.info.responded - request.info.received</code>.</li>\n<li>\n<code>statusCode</code> - the status code of the response.</li>\n<li>\n<code>pid</code> - the current process id.</li>\n<li>\n<code>httpVersion</code> - the http protocol information from the request.</li>\n<li>\n<code>source</code> - object with the following values:\n<ul>\n<li>\n<code>remoteAddress</code> - information about the remote address. maps to <code>request.info.remoteAddress</code>\n</li>\n<li>\n<code>userAgent</code> - the user agent of the incoming request.</li>\n<li>\n<code>referer</code> - the referer headed of the incoming request.</li>\n</ul>\n</li>\n<li>\n<code>route</code> - route path used by request. Maps to <code>request.route.path</code>.</li>\n<li>\n<code>log</code> - maps to <code>request.logs</code> of the hapi request object.</li>\n<li>\n<code>tags</code> - array of strings representing any tags from route config. Maps to <code>request.route.settings.tags</code>.</li>\n<li>\n<code>config</code> - plugin-specific config object combining <code>request.route.settings.plugins.good</code> and <code>request.plugins.good</code>. Request-level overrides route-level. Reporters could use <code>config</code> for additional filtering logic.</li>\n<li>\n<code>headers</code> - the request headers if <code>includes.request</code> includes \"headers\"</li>\n<li>\n<code>requestPayload</code> - the request payload if <code>includes.request</code> includes \"payload\"</li>\n<li>\n<code>responsePayload</code> - the response payload if <code>includes.response</code> includes \"payload\"</li>\n</ul>\n<h4>\n<a id=\"ops\" class=\"anchor\" href=\"#ops\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Ops</code>\n</h4>\n<p>Event object associated with the 'ops' event emitted from Oppsy.</p>\n<ul>\n<li>\n<code>event</code> - 'ops'</li>\n<li>\n<code>timestamp</code> - current time when the object is created.</li>\n<li>\n<code>host</code> - the host name of the current machine.</li>\n<li>\n<code>pid</code> - the current process id.</li>\n<li>\n<code>os</code> - object with the following values:\n<ul>\n<li>\n<code>load</code> - array containing the 1, 5, and 15 minute load averages.</li>\n<li>\n<code>mem</code> - object with the following values:\n<ul>\n<li>\n<code>total</code> - total system memory in bytes.</li>\n<li>\n<code>free</code> - total free system memory in bytes.</li>\n</ul>\n</li>\n<li>\n<code>uptime</code> - system uptime in seconds.</li>\n</ul>\n</li>\n<li>\n<code>proc</code> - object with the following values:\n<ul>\n<li>\n<code>uptime</code> - uptime of the running process in seconds</li>\n<li>\n<code>mem</code> - returns result of <code>process.memoryUsage()</code>\n<ul>\n<li>\n<code>rss</code> - 'resident set size' which is the amount of the process held in memory.</li>\n<li>\n<code>heapTotal</code> - V8 heap total</li>\n<li>\n<code>heapUsed</code> - V8 heap used</li>\n</ul>\n</li>\n<li>\n<code>delay</code> - the calculated Node event loop delay in milliseconds.</li>\n</ul>\n</li>\n<li>\n<code>load</code> - object with the following values:\n<ul>\n<li>\n<code>requests</code> - object containing information about all the requests passing through the server.</li>\n<li>\n<code>concurrents</code> - object containing information about the number of concurrent connections associated with each <code>listener</code> object associated with the hapi server.</li>\n<li>\n<code>responseTimes</code> - object with calculated average and max response times for requests.</li>\n<li>\n<code>sockets</code> - object with the following values:\n<ul>\n<li>\n<code>http</code> - socket information http connections. Each value contains the name of the socket used and the number of open connections on the socket. It also includes a <code>total</code> for total number of open http sockets.</li>\n<li>\n<code>https</code> - socket information https connections. Each value contains the name of the socket used and the number of open connections on the socket. It also includes a <code>total</code> for total number of open https sockets.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4>\n<a id=\"requestlog\" class=\"anchor\" href=\"#requestlog\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>RequestLog</code>\n</h4>\n<p>Event object associated with the \"request\" event. This is the hapi event emitter via <code>request.log()</code>.</p>\n<ul>\n<li>\n<code>event</code> - 'request'</li>\n<li>\n<code>timestamp</code> - timestamp of the incoming <code>event</code> object.</li>\n<li>\n<code>tags</code> - array of strings representing any tags associated with the 'log' event.</li>\n<li>\n<code>data</code> - the string or object mapped to <code>event.data</code>.</li>\n<li>\n<code>error</code> - the error instance mapped to <code>event.error</code>.</li>\n<li>\n<code>pid</code> - the current process id.</li>\n<li>\n<code>id</code> - id of the request, maps to <code>request.id</code>.</li>\n<li>\n<code>method</code> - method used by the request. Maps to <code>request.method</code>.</li>\n<li>\n<code>path</code> - incoming path requested. Maps to <code>request.path</code>.</li>\n<li>\n<code>config</code> - plugin-specific config object combining <code>request.route.settings.plugins.good</code> and <code>request.plugins.good</code>. Request-level overrides route-level. Reporters could use <code>config</code> for additional filtering logic.</li>\n<li>\n<code>headers</code> - the request headers if <code>includes.request</code> includes \"headers\"</li>\n</ul>\n<h4>\n<a id=\"extension-payloads\" class=\"anchor\" href=\"#extension-payloads\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Extension Payloads</h4>\n<p>Because the extension payloads from hapi can vary from one version to another and one event to another, the payload is only loosely defined.</p>\n<ul>\n<li>\n<code>event</code> - the event name.</li>\n<li>\n<code>timestamp</code> - the time the event occurred.</li>\n<li>\n<code>payload</code> - array of arguments hapi passed to our event handler function</li>\n</ul>\n<h2>\n<a id=\"existing-streams\" class=\"anchor\" href=\"#existing-streams\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Existing streams</h2>\n<p>The following streams are maintained by the hapi community and are known to work with good. Any transform or write stream can work with good, these are just a few inside the hapijs organization.</p>\n<ul>\n<li><a href=\"https://github.com/hapijs/good-squeeze\">good-squeeze</a></li>\n<li><a href=\"https://github.com/hapijs/good-console\">good-console</a></li>\n</ul>\n",
      "intro": "## Introduction\n\n**good** is a hapi plugin process monitor that listens for one or more of the below 'event types'. All of these events, _except_ 'ops' map to a hapi event documented [here](https://github.com/hapijs/hapi/blob/master/API.md#server-events).\n\nApplications with multiple server instances, each with its own monitor should only include one _log_ subscription per destination\nas general events are a process-wide facility and will result in duplicated log events.\n\nNote: this module is being deprecated on December 1st, 2019 due to lack to available support resources. Please consider using [another logging plugin](https://hapi.dev/plugins/#logging).\n",
      "example": "",
      "usage": "## Example Usage\n",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "hapi process monitoring.",
    "forks": 163,
    "stars": 529,
    "date": "2020-08-23T00:35:45Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/good"
  },
  "good-console": {
    "name": "good-console",
    "versions": [
      {
        "name": "9.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "9.0.0"
    ],
    "api": true,
    "9.0.0": {
      "menu": "- [`new GoodConsole()`](#new-goodconsoleconfig)\n- [Output Formats](#output-formats)",
      "api": "<h2>\n<a id=\"new-goodconsoleconfig\" class=\"anchor\" href=\"#new-goodconsoleconfig\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>new GoodConsole([config])</code>\n</h2>\n<p>Creates a new GoodConsole object with the following arguments:</p>\n<ul>\n<li>\n<code>[config]</code> - optional configuration object with the following keys\n<ul>\n<li>\n<code>format</code> - <a href=\"http://momentjs.com/docs/#/displaying/format/\" rel=\"nofollow\">MomentJS</a> format string. Defaults to 'YYMMDD/HHmmss.SSS'.</li>\n<li>\n<code>utc</code> - boolean controlling Moment using <a href=\"http://momentjs.com/docs/#/parsing/utc/\" rel=\"nofollow\">utc mode</a> or not. Defaults to <code>true</code>.</li>\n<li>\n<code>color</code> - a boolean specifying whether to output in color. Defaults to <code>true</code>.</li>\n</ul>\n</li>\n</ul>\n<h2>\n<a id=\"output-formats\" class=\"anchor\" href=\"#output-formats\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Output Formats</h2>\n<p>Below are example outputs for the designated event type:</p>\n<ul>\n<li>\"ops\" - 160318/013330.957, [ops] memory: 29Mb, uptime (seconds): 6, load: [1.650390625,1.6162109375,1.65234375]</li>\n<li>\"error\" - 160318/013330.957, [error,<code>event.tags</code>] message: Just a simple error, stack: <code>event.error.stack</code>\n</li>\n<li>\"request\" - 160318/013330.957, [request,<code>event.tags</code>] data: you made a request</li>\n<li>\"log\" - 160318/013330.957, [log,<code>event.tags</code>] data: you made a default</li>\n<li>\"response\" - 160318/013330.957, [response, <code>event.tags</code>] <a href=\"http://localhost:61253\" rel=\"nofollow\">http://localhost:61253</a>: post /data {\"name\":\"adam\"} 200 (150ms)</li>\n</ul>\n",
      "intro": "",
      "example": "",
      "usage": "## Usage\n",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Console reporting for good console monitor.",
    "forks": 60,
    "stars": 74,
    "date": "2020-08-22T21:24:44Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/good-console"
  },
  "good-squeeze": {
    "name": "good-squeeze",
    "versions": [
      {
        "name": "6.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "6.0.0"
    ],
    "api": true,
    "6.0.0": {
      "menu": "- [Methods](#methods)\n  - [`Squeeze()`](#squeezeevents-options)\n  - [`Squeeze.subscription()`](#squeezesubscriptionevents)\n  - [`Squeeze.filter()`](#squeezefiltersubscription-data)\n  - [`SafeJson()`](#safejsonoptions-stringify)",
      "api": "<h2>\n<a id=\"methods\" class=\"anchor\" href=\"#methods\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Methods</h2>\n<h3>\n<a id=\"squeezeevents-options\" class=\"anchor\" href=\"#squeezeevents-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Squeeze(events, [options])</code>\n</h3>\n<p>Creates a new Squeeze transform stream where:</p>\n<ul>\n<li>\n<code>events</code> an object where each key is a valid good event and the value is one of the following:\n<ul>\n<li>\n<code>string</code> - a tag to include when filtering. '*' indicates no filtering.</li>\n<li>\n<code>array</code> - array of tags to filter. <code>[]</code> indicates no filtering.</li>\n<li>\n<code>object</code> - an object with the following values\n<ul>\n<li>\n<code>include</code> - string or array representing tag(s) to <em>include</em> when filtering</li>\n<li>\n<code>exclude</code> - string or array representing tag(s) to <em>exclude</em> when filtering. <code>exclude</code> takes precedence over any <code>include</code> tags.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>[options]</code> configuration object that gets passed to the Node <a href=\"http://nodejs.org/api/stream.html#stream_class_stream_transform\" rel=\"nofollow\"><code>Stream.Transform</code></a> constructor. <strong>Note</strong> <code>objectMode</code> is always <code>true</code> for all <code>Squeeze</code> objects.</li>\n</ul>\n<p>The transform stream only passes on events that satisfy the event filtering based on event name and tags. If the upstream event doesn't satisfy the filter, it is not continued down the pipe line.</p>\n<h3>\n<a id=\"squeezesubscriptionevents\" class=\"anchor\" href=\"#squeezesubscriptionevents\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Squeeze.subscription(events)</code>\n</h3>\n<p>A static method on <code>Squeeze</code> that creates a new event subscription map where:</p>\n<ul>\n<li>\n<code>events</code> the same arguments used in the <code>Squeeze</code> constructor.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Squeeze</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'good-squeeze'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">Squeeze</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">subscription</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">log</span>: <span class=\"pl-s\">'user'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">ops</span>: <span class=\"pl-s\">'*'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">request</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'hapi'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'foo'</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// Results in</span>\n<span class=\"pl-c\">// {</span>\n<span class=\"pl-c\">//  log: { include: [ 'user' ], exclude: [] },</span>\n<span class=\"pl-c\">//  ops: { include: [], exclude: [] },</span>\n<span class=\"pl-c\">//  request: { include: [ 'hapi', 'foo' ], exclude: [] } </span>\n<span class=\"pl-c\">// }</span>\n\n<span class=\"pl-v\">Squeeze</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">subscription</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">log</span>: <span class=\"pl-s\">'user'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">ops</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">exclude</span>: <span class=\"pl-s\">'debug'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">request</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">include</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'hapi'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'foo'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">exclude</span>: <span class=\"pl-s\">'sensitive'</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// Results in</span>\n<span class=\"pl-c\">// {</span>\n<span class=\"pl-c\">//  log: { include: [ 'user' ], exclude: [] },</span>\n<span class=\"pl-c\">//  ops: { include: [], exclude: [ 'debug' ] },</span>\n<span class=\"pl-c\">//  request: { include: [ 'hapi', 'foo' ], exclude: [ 'sensitive' ] }</span>\n<span class=\"pl-c\">// }</span></pre></div>\n<p>Useful for creating an event subscription to be used with <code>Squeeze.filter</code> if you do not plan on creating a pipeline coming from good and instead want to manage event filtering manually.</p>\n<h3>\n<a id=\"squeezefiltersubscription-data\" class=\"anchor\" href=\"#squeezefiltersubscription-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Squeeze.filter(subscription, data)</code>\n</h3>\n<p>Returns <code>true</code> if the supplied <code>data.event</code> + <code>data.tags</code> should be reported based on <code>subscription</code> where:</p>\n<ul>\n<li>\n<code>subscription</code> - a subscription map created by <code>Squeeze.subscription()</code>.</li>\n<li>\n<code>data</code> - event object emitted from good/hapi which should contain the following keys:\n<ul>\n<li>\n<code>event</code> - a string representing the event name of <code>data</code>\n</li>\n<li>\n<code>tags</code> - an array of strings representing tags associated with this event.</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"safejsonoptions-stringify\" class=\"anchor\" href=\"#safejsonoptions-stringify\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>SafeJson([options], [stringify])</code>\n</h3>\n<p>Creates a new SafeJson transform stream where:</p>\n<ul>\n<li>\n<code>[options]</code> configuration object that gets passed to the Node <a href=\"http://nodejs.org/api/stream.html#stream_class_stream_transform\" rel=\"nofollow\"><code>Stream.Transform</code></a> constructor. <strong>Note</strong> <code>objectMode</code> is always <code>true</code> for all <code>Squeeze</code> objects.</li>\n<li>\n<code>[stringify]</code> configuration object for controlling how stringify is handled.\n<ul>\n<li>\n<code>separator</code> - string to append to each message. Defaults to \"\\n\".</li>\n<li>\n<code>space</code> - number of spaces in pretty printed JSON. Doesn't pretty print when set to 0. Defaults to 0.</li>\n</ul>\n</li>\n</ul>\n<p>The transform stream stringifys the incoming data and pipes it forward. It will not crash in the cases of circular references and will instead include a \"~Circular\" string in the result.</p>\n",
      "intro": "",
      "example": "",
      "usage": "## Usage\n\ngood-squeeze is a collection of small transform streams. The `Squeeze` stream is useful for filtering events based on the good event options. The `SafeJson` stream is useful for stringifying objects to prevent circular object errors.\n",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Simple transform stream for event filtering with good.",
    "forks": 25,
    "stars": 49,
    "date": "2020-08-22T21:00:50Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/good-squeeze"
  },
  "h2o2": {
    "name": "h2o2",
    "versions": [
      {
        "name": "9.0.1",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "9.0.1"
    ],
    "api": true,
    "9.0.1": {
      "menu": "- [Manual loading](#manual-loading)\n- [Options](#options)\n  - [`h.proxy()`](#hproxyoptions)\n  - [Using the `host`, `port`, `protocol` options](#using-the-host-port-protocol-options)\n  - [Using the `uri` option](#using-the-uri-option)\n  - [Custom `uri` template values](#custom-uri-template-values)\n  - [Using the `mapUri` and `onResponse` options](#using-the-mapuri-and-onresponse-options)\n  - [Using a custom http client](#using-a-custom-http-client)",
      "api": "<h2>\n<a id=\"manual-loading\" class=\"anchor\" href=\"#manual-loading\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Manual loading</h2>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">H2o2</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/h2o2'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">H2o2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`Server started at:  <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">info</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">uri</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n  <span class=\"pl-k\">catch</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Failed to load h2o2'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h2>\n<a id=\"options\" class=\"anchor\" href=\"#options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Options</h2>\n<p>The plugin can be registered with an optional object specifying defaults to be applied to the proxy handler object.</p>\n<p>The proxy handler object has the following properties:</p>\n<ul>\n<li>\n<code>host</code> - upstream service host to proxy requests to. It will have the same path as the client request.</li>\n<li>\n<code>port</code> - upstream service port.</li>\n<li>\n<code>protocol</code> - protocol to use when making the request to the proxied host:\n<ul>\n<li>'http'</li>\n<li>'https'</li>\n</ul>\n</li>\n<li>\n<code>uri</code> - absolute URI used instead of host, port, protocol, path, and query. Cannot be used with <code>host</code>, <code>port</code>, <code>protocol</code>, or <code>mapUri</code>.</li>\n<li>\n<code>httpClient</code> - an http client that abides by the Wreck interface. Defaults to <a href=\"https://github.com/hapijs/wreck\"><code>wreck</code></a>.</li>\n<li>\n<code>passThrough</code> - if set to <code>true</code>, it forwards the headers from the client to the upstream service, headers sent from the upstream service will also be forwarded to the client. Defaults to <code>false</code>.</li>\n<li>\n<code>localStatePassThrough</code> - if set to<code>false</code>, any locally defined state is removed from incoming requests before being sent to the upstream service. This value can be overridden on a per state basis via the <code>server.state()</code> <code>passThrough</code> option. Defaults to <code>false</code>\n</li>\n<li>\n<code>acceptEncoding</code> - if set to <code>false</code>, does not pass-through the 'Accept-Encoding' HTTP header which is useful for the <code>onResponse</code> post-processing to avoid receiving an encoded response. Can only be used together with <code>passThrough</code>. Defaults to <code>true</code> (passing header).</li>\n<li>\n<code>rejectUnauthorized</code> - sets the <code>rejectUnauthorized</code> property on the https <a href=\"http://nodejs.org/api/https.html#https_https_request_options_callback\" rel=\"nofollow\">agent</a> making the request. This value is only used when the proxied server uses TLS/SSL. If set it will override the node.js <code>rejectUnauthorized</code> property. If <code>false</code> then ssl errors will be ignored. When <code>true</code> the server certificate is verified and an 500 response will be sent when verification fails. This shouldn't be used alongside the <code>agent</code> setting as the <code>agent</code> will be used instead. Defaults to the https agent default value of <code>true</code>.</li>\n<li>\n<code>xforward</code> - if set to <code>true</code>, sets the 'X-Forwarded-For', 'X-Forwarded-Port', 'X-Forwarded-Proto', 'X-Forwarded-Host' headers when making a request to the proxied upstream endpoint. Defaults to <code>false</code>.</li>\n<li>\n<code>redirects</code> - the maximum number of HTTP redirections allowed to be followed automatically by the handler. Set to <code>false</code> or <code>0</code> to disable all redirections (the response will contain the redirection received from the upstream service). If redirections are enabled, no redirections (301, 302, 307, 308) will be passed along to the client, and reaching the maximum allowed redirections will return an error response. Defaults to <code>false</code>.</li>\n<li>\n<code>timeout</code> - number of milliseconds before aborting the upstream request. Defaults to <code>180000</code> (3 minutes).</li>\n<li>\n<code>mapUri</code> - a function used to map the request URI to the proxied URI. Cannot be used together with <code>host</code>, <code>port</code>, <code>protocol</code>, or <code>uri</code>. The function signature is <code>function (request)</code> where:\n<ul>\n<li>\n<code>request</code> - is the incoming <a href=\"http://hapijs.com/api#request-object\" rel=\"nofollow\">request object</a>. The response from this function should be an       object with the following properties:\n<ul>\n<li>\n<code>uri</code> - the absolute proxy URI.</li>\n<li>\n<code>headers</code> - optional object where each key is an HTTP request header and the value is the header content.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>onRequest</code> - a custom function which is passed the upstream request.  Function signature is <code>function (req)</code> where:\n<ul>\n<li>\n<code>req</code> - the [wreck] (<a href=\"https://github.com/hapijs/wreck\">https://github.com/hapijs/wreck</a>) request to the upstream server.</li>\n</ul>\n</li>\n<li>\n<code>onResponse</code> - a custom function for processing the response from the upstream service before sending to the client. Useful for custom error handling of responses from the proxied endpoint or other payload manipulation. Function signature is <code>function (err, res, request, h, settings, ttl)</code> where:\n<ul>\n<li>\n<code>err</code> - internal or upstream error returned from attempting to contact the upstream proxy.</li>\n<li>\n<code>res</code> - the node response object received from the upstream service. <code>res</code> is a readable stream (use the <a href=\"https://github.com/hapijs/wreck\">wreck</a> module <code>read</code> method to easily convert it to a Buffer or string). Note that it is your responsibility to close the <code>res</code> stream.</li>\n<li>\n<code>request</code> - is the incoming <a href=\"http://hapijs.com/api#request-object\" rel=\"nofollow\">request object</a>.</li>\n<li>\n<code>h</code> - the <a href=\"https://hapijs.com/api#response-toolkit\" rel=\"nofollow\">response toolkit</a>.</li>\n<li>\n<code>settings</code> - the proxy handler configuration.</li>\n<li>\n<code>ttl</code> - the upstream TTL in milliseconds if <code>proxy.ttl</code> it set to <code>'upstream'</code> and the upstream response included a valid 'Cache-Control' header with 'max-age'.</li>\n</ul>\n</li>\n<li>\n<code>ttl</code> - if set to <code>'upstream'</code>, applies the upstream response caching policy to the response using the <code>response.ttl()</code> method (or passed as an argument to the <code>onResponse</code> method if provided).</li>\n<li>\n<code>agent</code> - a node <a href=\"http://nodejs.org/api/http.html#http_class_http_agent\" rel=\"nofollow\">http(s) agent</a> to be used for connections to upstream server.</li>\n<li>\n<code>maxSockets</code> - sets the maximum number of sockets available per outgoing proxy host connection. <code>false</code> means use the <strong>wreck</strong> module default value (<code>Infinity</code>). Does not affect non-proxy outgoing client connections. Defaults to <code>Infinity</code>.</li>\n<li>\n<code>secureProtocol</code> - <a href=\"http://nodejs.org/api/tls.html\" rel=\"nofollow\">TLS</a> flag indicating the SSL method to use, e.g. <code>SSLv3_method</code>\nto force SSL version 3. The possible values depend on your installation of OpenSSL. Read the official OpenSSL docs for possible <a href=\"https://www.openssl.org/docs/man1.0.2/ssl/ssl.html\" rel=\"nofollow\">SSL_METHODS</a>.</li>\n<li>\n<code>ciphers</code> - <a href=\"https://nodejs.org/api/tls.html#tls_modifying_the_default_tls_cipher_suite\" rel=\"nofollow\">TLS</a> list of TLS ciphers to override node's default.\nThe possible values depend on your installation of OpenSSL. Read the official OpenSSL docs for possible <a href=\"https://www.openssl.org/docs/man1.0.2/apps/ciphers.html#CIPHER-LIST-FORMAT\" rel=\"nofollow\">TLS_CIPHERS</a>.</li>\n<li>\n<code>downstreamResponseTime</code> - logs the time spent processing the downstream request using <a href=\"https://nodejs.org/api/process.html#process_process_hrtime_time\" rel=\"nofollow\">process.hrtime</a>. Defaults to <code>false</code>.</li>\n</ul>\n<h3>\n<a id=\"hproxyoptions\" class=\"anchor\" href=\"#hproxyoptions\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>h.proxy(options)</code>\n</h3>\n<p>Proxies the request to an upstream endpoint where:</p>\n<ul>\n<li>\n<code>options</code> - an object including the same keys and restrictions defined by the\n<a href=\"#options\">route <code>proxy</code> handler options</a>.</li>\n</ul>\n<p>No return value.</p>\n<p>The <a href=\"http://hapijs.com/api#flow-control\" rel=\"nofollow\">response flow control rules</a> <strong>do not</strong> apply.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-en\">handler</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">proxy</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">host</span>: <span class=\"pl-s\">'example.com'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">80</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">protocol</span>: <span class=\"pl-s\">'http'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"using-the-host-port-protocol-options\" class=\"anchor\" href=\"#using-the-host-port-protocol-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Using the <code>host</code>, <code>port</code>, <code>protocol</code> options</h3>\n<p>Setting these options will send the request to certain route to a specific upstream service with the same path as the original request. Cannot be used with <code>uri</code>, <code>mapUri</code>.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">handler</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">proxy</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">host</span>: <span class=\"pl-s\">'10.33.33.1'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">port</span>: <span class=\"pl-s\">'443'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">protocol</span>: <span class=\"pl-s\">'https'</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"using-the-uri-option\" class=\"anchor\" href=\"#using-the-uri-option\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Using the <code>uri</code> option</h3>\n<p>Setting this option will send the request to an absolute URI instead of the incoming host, port, protocol, path and query. Cannot be used with <code>host</code>, <code>port</code>, <code>protocol</code>, <code>mapUri</code>.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">handler</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">proxy</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">uri</span>: <span class=\"pl-s\">'https://some.upstream.service.com/that/has?what=you&amp;want=todo'</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"custom-uri-template-values\" class=\"anchor\" href=\"#custom-uri-template-values\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Custom <code>uri</code> template values</h3>\n<p>When using the <code>uri</code> option, there are optional <strong>default</strong> template values that can be injected from the incoming <code>request</code>:</p>\n<ul>\n<li><code>{protocol}</code></li>\n<li><code>{host}</code></li>\n<li><code>{port}</code></li>\n<li><code>{path}</code></li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/foo'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">handler</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">proxy</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">uri</span>: <span class=\"pl-s\">'{protocol}://{host}:{port}/go/to/{path}'</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Requests to <code>http://127.0.0.1:8080/foo/</code> would be proxied to an upstream destination of <code>http://127.0.0.1:8080/go/to/foo</code></p>\n<p>Additionally, you can capture request.params values and inject them into the upstream uri value using a similar replacment strategy:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/foo/{bar}'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">handler</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">proxy</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">uri</span>: <span class=\"pl-s\">'https://some.upstream.service.com/some/path/to/{bar}'</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p><strong>Note</strong> The default variables of <code>{protocol}</code>, <code>{host}</code>, <code>{port}</code>, <code>{path}</code> take precedence - it's best to treat those as reserved when naming your own <code>request.params</code>.</p>\n<h3>\n<a id=\"using-the-mapuri-and-onresponse-options\" class=\"anchor\" href=\"#using-the-mapuri-and-onresponse-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Using the <code>mapUri</code> and <code>onResponse</code> options</h3>\n<p>Setting both options with custom functions will allow you to map the original request to an upstream service and to processing the response from the upstream service, before sending it to the client. Cannot be used together with <code>host</code>, <code>port</code>, <code>protocol</code>, or <code>uri</code>.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">handler</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">proxy</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-en\">mapUri</span>: <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n                <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'doing some additional stuff before redirecting'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n                    <span class=\"pl-c1\">uri</span>: <span class=\"pl-s\">'https://some.upstream.service.com/'</span>\n                <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-en\">onResponse</span>: <span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">settings</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">ttl</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n                <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'receiving the response from the upstream.'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-k\">const</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-v\">Wreck</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">read</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">res</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">json</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n                <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'some payload manipulation if you want to.'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-k\">const</span> <span class=\"pl-s1\">response</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">response</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-s1\">response</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">headers</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">headers</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-k\">return</span> <span class=\"pl-s1\">response</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"using-a-custom-http-client\" class=\"anchor\" href=\"#using-a-custom-http-client\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Using a custom http client</h3>\n<p>By default, <code>h2o2</code> uses Wreck to perform requests. A custom http client can be provided by passing a client to <code>httpClient</code>, as long as it abides by the <a href=\"https://github.com/hapijs/wreck\"><code>wreck</code></a> interface. The two functions that <code>h2o2</code> utilizes are <code>request()</code> and <code>parseCacheControl()</code>.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">handler</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">proxy</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">httpClient</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-en\">request</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">method</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">uri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">options</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n                    <span class=\"pl-k\">return</span> <span class=\"pl-en\">axios</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n                        method<span class=\"pl-kos\">,</span>\n                        <span class=\"pl-c1\">url</span>: <span class=\"pl-s\">'https://some.upstream.service.com/'</span>\n                    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n                <span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n",
      "intro": "## Introduction\n\n**h2o2** adds proxying functionality to a hapi server.\n",
      "example": "",
      "usage": "## Usage\n\nAs one of the handlers for hapi, it is used through the route configuration object.\n",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Proxy handler for hapi.js.",
    "forks": 63,
    "stars": 158,
    "date": "2020-08-22T18:01:42Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/h2o2"
  },
  "heavy": {
    "name": "heavy",
    "versions": [
      {
        "name": "7.0.1",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "7.0.1"
    ],
    "api": false,
    "7.0.1": {
      "menu": "",
      "api": "",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Measure process load.",
    "forks": 16,
    "stars": 69,
    "date": "2020-08-10T18:45:00Z",
    "updated": "Mon Aug 10 2020",
    "link": "https://github.com/hapijs/heavy"
  },
  "hoek": {
    "name": "hoek",
    "versions": [
      {
        "name": "9.1.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "9.1.0"
    ],
    "api": true,
    "9.1.0": {
      "menu": "- [Object](#object)\n  - [clone()](#cloneobj-options)\n  - [merge()](#mergetarget-source-options)\n  - [applyToDefaults()](#applytodefaultsdefaults-source-options)\n  - [deepEqual()](#deepequala-b-options)\n  - [intersect()](#intersectarray1-array2-options)\n  - [contain()](#containref-values-options)\n  - [flatten()](#flattenarray-target)\n  - [reach()](#reachobj-chain-options)\n  - [reachTemplate()](#reachtemplateobj-template-options)\n  - [stringify()](#stringifyargs)\n- [Bench](#bench)\n- [Escaping Characters](#escaping-characters)\n  - [escapeHtml()](#escapehtmlstring)\n  - [escapeHeaderAttribute()](#escapeheaderattributeattribute)\n  - [escapeJson()](#escapejsonstring)\n  - [escapeRegex()](#escaperegexstring)\n- [Errors](#errors)\n  - [assert()](#assertcondition-message)\n- [Function](#function)\n  - [once()](#oncefn)\n  - [ignore](#ignore)\n- [Promises](#promises)\n  - [wait()](#waittimeout-returnvalue)\n  - [block()](#block)\n  - [isPromise()](#ispromisepromise)",
      "api": "<h3>\n<a id=\"object\" class=\"anchor\" href=\"#object\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Object</h3>\n<p><strong>hoek</strong> provides several helpful methods for objects and arrays.</p>\n<h4>\n<a id=\"cloneobj-options\" class=\"anchor\" href=\"#cloneobj-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>clone(obj, [options])</h4>\n<p>Clones an object or an array. A <em>deep copy</em> is made (duplicates everything, including values that are\nobjects, as well as non-enumerable properties) where:</p>\n<ul>\n<li>\n<code>obj</code> - the object to be cloned.</li>\n<li>\n<code>options</code> - optional settings:\n<ul>\n<li>\n<code>symbols</code> - clone symbol properties. Defaults to <code>true</code>.</li>\n<li>\n<code>shallow</code> - one of:\n<ul>\n<li>an array of object key strings (dot-separated or array-based key paths) to shallow copy from <code>obj</code> instead of deep.</li>\n<li>\n<code>true</code> to shallow copy all object properties. Used to shallow copy an object with non-enumerable properties and prototype;</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">nestedObj</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">w</span>: <span class=\"pl-pds\">/<span class=\"pl-cce\">^</span>something<span class=\"pl-cce\">$</span>/ig</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">x</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">a</span>: <span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">b</span>: <span class=\"pl-c1\">123456</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">c</span>: <span class=\"pl-k\">new</span> <span class=\"pl-v\">Date</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">y</span>: <span class=\"pl-s\">'y'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">z</span>: <span class=\"pl-k\">new</span> <span class=\"pl-v\">Date</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">copy</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">clone</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">nestedObj</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">copy</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">b</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">100</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">copy</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">y</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>        <span class=\"pl-c\">// results in 'y'</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">nestedObj</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">b</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// results in 123456</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">copy</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">b</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>      <span class=\"pl-c\">// results in 100</span></pre></div>\n<p>Clones an object or array excluding some keys which are shallow copied:</p>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">nestedObj</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">w</span>: <span class=\"pl-pds\">/<span class=\"pl-cce\">^</span>something<span class=\"pl-cce\">$</span>/ig</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">x</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">a</span>: <span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">b</span>: <span class=\"pl-c1\">123456</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">c</span>: <span class=\"pl-k\">new</span> <span class=\"pl-v\">Date</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">y</span>: <span class=\"pl-s\">'y'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">z</span>: <span class=\"pl-k\">new</span> <span class=\"pl-v\">Date</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">copy</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">clone</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">nestedObj</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">shallow</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'x'</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">copy</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">b</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">100</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">copy</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">y</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>        <span class=\"pl-c\">// results in 'y'</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">nestedObj</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">b</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// results in 100</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">copy</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">b</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>      <span class=\"pl-c\">// results in 100</span></pre></div>\n<h4>\n<a id=\"mergetarget-source-options\" class=\"anchor\" href=\"#mergetarget-source-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>merge(target, source, [options])</h4>\n<p>Merge all the properties of source into target where:</p>\n<ul>\n<li>\n<code>target</code> - the object onto which the properties of <code>source</code> are copied to.</li>\n<li>\n<code>source</code> - the object copied onto <code>target</code>.</li>\n<li>\n<code>options</code> - optional settings:\n<ul>\n<li>\n<code>nullOverride</code> - if <code>true</code>, a <code>null</code> value in the source overrides any existing value in the <code>defaults</code>.\nIf <code>false</code>, <code>null</code> values in the <code>source</code> are ignored. Defaults to <code>true</code>.</li>\n<li>\n<code>mergeArrays</code> - if <code>true</code>, array values from <code>source</code> are appended to existing array values in <code>target</code>.\nDefaults to <code>true</code>.</li>\n<li>\n<code>symbols</code> - clone symbol properties. Defaults to <code>true</code>.</li>\n</ul>\n</li>\n</ul>\n<p>Note that source wins in conflict, and by default null and undefined from source are applied.\nMerge is destructive where the target is modified. For non destructive merge, use <code>applyToDefaults</code>.</p>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">target</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">b</span> : <span class=\"pl-c1\">2</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">source</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">c</span>: <span class=\"pl-c1\">5</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">source2</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">c</span>: <span class=\"pl-c1\">5</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">merge</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">target</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">source</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>         <span class=\"pl-c\">// results in {a: 0, b: 2, c: 5}</span>\n<span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">merge</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">target</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">source2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>        <span class=\"pl-c\">// results in {a: null, b: 2, c: 5}</span>\n<span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">merge</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">target</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">source2</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">nullOverride</span>: <span class=\"pl-c1\">false</span><span class=\"pl-kos\">}</span> <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// results in {a: 1, b: 2, c: 5}</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">targetArray</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">sourceArray</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">4</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">5</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">merge</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">targetArray</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">sourceArray</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>              <span class=\"pl-c\">// results in [1, 2, 3, 4, 5]</span>\n<span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">merge</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">targetArray</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">sourceArray</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">mergeArrays</span>: <span class=\"pl-c1\">false</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// results in [4, 5]</span></pre></div>\n<h4>\n<a id=\"applytodefaultsdefaults-source-options\" class=\"anchor\" href=\"#applytodefaultsdefaults-source-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>applyToDefaults(defaults, source, [options])</h4>\n<p>Apply source to a copy of the defaults where:</p>\n<ul>\n<li>\n<code>defaults</code> - the default object to clone and then apply <code>source</code> onto.</li>\n<li>\n<code>source</code> - the object applied to the <code>defaults</code>.</li>\n<li>\n<code>options</code> - optional settings:\n<ul>\n<li>\n<code>nullOverride</code> - if <code>true</code>, a <code>null</code> value in the source overrides any existing value in the <code>defaults</code>.\nIf <code>false</code>, <code>null</code> values in the <code>source</code> are ignored. Defaults to <code>false</code>.</li>\n<li>\n<code>shallow</code> - an array of dot-separated or array-based key paths to shallow copy values in <code>source</code>.</li>\n</ul>\n</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">defaults</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">host</span>: <span class=\"pl-s\">\"localhost\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">8000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">source</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">8080</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">config</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">applyToDefaults</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaults</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">source</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// results in { host: \"localhost\", port: 8080 }</span></pre></div>\n<p>Apply source with a null value to a copy of the defaults</p>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">defaults</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">host</span>: <span class=\"pl-s\">\"localhost\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">8000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">source</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">host</span>: <span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">8080</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">config</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">applyToDefaults</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaults</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">source</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">nullOverride</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// results in { host: null, port: 8080 }</span></pre></div>\n<p>Apply source to a copy of the defaults where the shallow keys specified in the last parameter are shallow copied from source instead of merged</p>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">defaults</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">db</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">server</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">host</span>: <span class=\"pl-s\">\"localhost\"</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">8000</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'example'</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">source</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">server</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">8080</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">config</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">applyToDefaults</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaults</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">source</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">shallow</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'db.server'</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>        <span class=\"pl-c\">// results in { db: { server: { port: 8080 }, name: 'example' } }</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">config</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">applyToDefaults</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaults</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">source</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">shallow</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'db'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'server'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>   <span class=\"pl-c\">// results in { db: { server: { port: 8080 }, name: 'example' } }</span></pre></div>\n<h4>\n<a id=\"deepequala-b-options\" class=\"anchor\" href=\"#deepequala-b-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>deepEqual(a, b, [options])</h4>\n<p>Performs a deep comparison of the two values including support for circular dependencies,\nprototype, and enumerable properties, where:</p>\n<ul>\n<li>\n<code>a</code> - the first value.</li>\n<li>\n<code>b</code> - the second value.</li>\n<li>\n<code>options</code> - optional settings:\n<ul>\n<li>\n<code>deepFunction</code> - when <code>true</code>, function values are deep compared using their source code and\nobject properties. Defaults to <code>false</code>.</li>\n<li>\n<code>part</code> - when <code>true</code>, allows a partial match where some of <code>b</code> is present in <code>a</code>. Defaults to\n<code>false</code>.</li>\n<li>\n<code>prototype</code> - when <code>false, prototype comparisons are skipped. Defaults to </code>true`.</li>\n<li>\n<code>skip</code> - an array of key name strings to skip comparing. The keys can be found in any level\nof the object. Note that both values must contain the key - only the value comparison is\nskipped. Only applies to plain objects and deep functions (not to map, sets, etc.). Defaults\nto no skipping.</li>\n<li>\n<code>symbols</code> - when <code>false</code>, symbol properties are ignored. Defaults to <code>true</code>.</li>\n</ul>\n</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">deepEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">b</span>: <span class=\"pl-s\">'string'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">c</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">d</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">b</span>: <span class=\"pl-s\">'string'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">c</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">d</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">//results in true</span>\n<span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">deepEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Object</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">create</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">null</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">prototype</span>: <span class=\"pl-c1\">false</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">//results in true</span>\n<span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">deepEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Object</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">create</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">null</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">//results in false</span></pre></div>\n<h4>\n<a id=\"intersectarray1-array2-options\" class=\"anchor\" href=\"#intersectarray1-array2-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>intersect(array1, array2, [options])</h4>\n<p>Find the common unique items betwee two arrays where:</p>\n<ul>\n<li>\n<code>array1</code> - the first array.</li>\n<li>\n<code>array2</code> - the second array.</li>\n<li>\n<code>options</code> - optional settings:\n<ul>\n<li>\n<code>first</code> - if <code>true</code>, return only the first intersecting item. Defaults to <code>false</code>.</li>\n</ul>\n</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">array1</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">array2</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">4</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">5</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">newArray</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">intersect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">array1</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">array2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// results in [1]</span></pre></div>\n<h4>\n<a id=\"containref-values-options\" class=\"anchor\" href=\"#containref-values-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>contain(ref, values, [options])</h4>\n<p>Tests if the reference value contains the provided values where:</p>\n<ul>\n<li>\n<code>ref</code> - the reference string, array, or object.</li>\n<li>\n<code>values</code> - a single or array of values to find within the <code>ref</code> value. If <code>ref</code> is an object, <code>values</code> can be a key name,\nan array of key names, or an object with key-value pairs to compare.</li>\n<li>\n<code>options</code> - an optional object with the following optional settings:\n<ul>\n<li>\n<code>deep</code> - if <code>true</code>, performed a deep comparison of the values.</li>\n<li>\n<code>once</code> - if <code>true</code>, allows only one occurrence of each value.</li>\n<li>\n<code>only</code> - if <code>true</code>, does not allow values not explicitly listed.</li>\n<li>\n<code>part</code> - if <code>true</code>, allows partial match of the values (at least one must always match).</li>\n<li>\n<code>symbols</code> - clone symbol properties. Defaults to <code>true</code>.</li>\n</ul>\n</li>\n</ul>\n<p>Note: comparing a string to overlapping values will result in failed comparison (e.g. <code>contain('abc', ['ab', 'bc'])</code>).\nAlso, if an object key's value does not match the provided value, <code>false</code> is returned even when <code>part</code> is specified.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">contain</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'aaa'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">only</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\t\t\t\t\t\t\t<span class=\"pl-c\">// true</span>\n<span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">contain</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">deep</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\t\t\t\t<span class=\"pl-c\">// true</span>\n<span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">contain</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">once</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\t\t\t\t\t<span class=\"pl-c\">// false</span>\n<span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">contain</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">b</span>: <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">c</span>: <span class=\"pl-c1\">3</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">a</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">d</span>: <span class=\"pl-c1\">4</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">part</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// true</span></pre></div>\n<h4>\n<a id=\"flattenarray-target\" class=\"anchor\" href=\"#flattenarray-target\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>flatten(array, [target])</h4>\n<p>Flatten an array</p>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">array</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">flattenedArray</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">flatten</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">array</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// results in [1, 2, 3]</span>\n\n<span class=\"pl-s1\">array</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">target</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">4</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">5</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">flattenedArray</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">flatten</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">array</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">target</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// results in [4, [5], 1, 2, 3]</span></pre></div>\n<h4>\n<a id=\"reachobj-chain-options\" class=\"anchor\" href=\"#reachobj-chain-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>reach(obj, chain, [options])</h4>\n<p>Converts an object key chain string or array to reference</p>\n<ul>\n<li>\n<code>options</code> - optional settings\n<ul>\n<li>\n<code>separator</code> - string to split chain path on, defaults to '.'</li>\n<li>\n<code>default</code> - value to return if the path or value is not present, default is <code>undefined</code>\n</li>\n<li>\n<code>strict</code> - if <code>true</code>, will throw an error on missing member, default is <code>false</code>\n</li>\n<li>\n<code>functions</code> - if <code>true</code>, allow traversing functions for properties. <code>false</code> will throw an\nerror if a function is part of the chain. Defaults to `true.</li>\n<li>\n<code>iterables</code> - if <code>true</code>, allows traversing Set and Map objects. <code>false</code> will result in\n<code>undefined</code> return value is the chain contains any Set or Map objects. Note that enabling\n<code>iterables</code> can impact performance by up to 10% for all calls regardless of the presence of\nSet or Map objects. Defaults to <code>false</code>.</li>\n</ul>\n</li>\n</ul>\n<p>A chain can be a string that will be split into key names using <code>separator</code>,\nor an array containing each individual key name.</p>\n<p>A chain including negative numbers will work like negative indices on an array.</p>\n<p>If chain is <code>null</code>, <code>undefined</code> or <code>false</code>, the object itself will be returned.</p>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">chain</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'a.b.c'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">obj</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">a</span> : <span class=\"pl-kos\">{</span><span class=\"pl-c1\">b</span> : <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">c</span> : <span class=\"pl-c1\">1</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reach</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">obj</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">chain</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// returns 1</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">chain</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'b'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">-</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">obj</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">a</span> : <span class=\"pl-kos\">{</span><span class=\"pl-c1\">b</span> : <span class=\"pl-kos\">[</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span><span class=\"pl-c1\">3</span><span class=\"pl-kos\">,</span><span class=\"pl-c1\">6</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reach</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">obj</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">chain</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// returns 6</span></pre></div>\n<h4>\n<a id=\"reachtemplateobj-template-options\" class=\"anchor\" href=\"#reachtemplateobj-template-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>reachTemplate(obj, template, [options])</h4>\n<p>Replaces string parameters (<code>{name}</code>) with their corresponding object key values by applying the\n<a href=\"#reachobj-chain-options\"><code>reach()</code></a> method where:</p>\n<ul>\n<li>\n<code>obj</code> - the context object used for key lookup.</li>\n<li>\n<code>template</code> - a string containing <code>{}</code> parameters.</li>\n<li>\n<code>options</code> - optional <a href=\"#reachobj-chain-options\"><code>reach()</code></a> options.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">chain</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'a.b.c'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">obj</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">a</span> : <span class=\"pl-kos\">{</span><span class=\"pl-c1\">b</span> : <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">c</span> : <span class=\"pl-c1\">1</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reachTemplate</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">obj</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'1+{a.b.c}=2'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// returns '1+1=2'</span></pre></div>\n<h4>\n<a id=\"stringifyargs\" class=\"anchor\" href=\"#stringifyargs\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>stringify(...args)</h4>\n<p>Converts an object to string using the built-in <code>JSON.stringify()</code> method with the difference that any errors are caught\nand reported back in the form of the returned string. Used as a shortcut for displaying information to the console (e.g. in\nerror message) without the need to worry about invalid conversion.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">a</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">b</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">a</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">a</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\t\t<span class=\"pl-c\">// Returns '[Cannot display object: Converting circular structure to JSON]'</span></pre></div>\n<h3>\n<a id=\"bench\" class=\"anchor\" href=\"#bench\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Bench</h3>\n<p>Same as Timer with the exception that <code>ts</code> stores the internal node clock which is not related to <code>Date.now()</code> and cannot be used to display\nhuman-readable timestamps. More accurate for benchmarking or internal timers.</p>\n<h3>\n<a id=\"escaping-characters\" class=\"anchor\" href=\"#escaping-characters\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Escaping Characters</h3>\n<p><strong>hoek</strong> provides convenient methods for escaping html characters. The escaped characters are as followed:</p>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">htmlEscaped</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s\">'&amp;'</span>: <span class=\"pl-s\">'&amp;amp;'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s\">'&lt;'</span>: <span class=\"pl-s\">'&amp;lt;'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s\">'&gt;'</span>: <span class=\"pl-s\">'&amp;gt;'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s\">'\"'</span>: <span class=\"pl-s\">'&amp;quot;'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s\">\"'\"</span>: <span class=\"pl-s\">'&amp;#x27;'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s\">'`'</span>: <span class=\"pl-s\">'&amp;#x60;'</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"escapehtmlstring\" class=\"anchor\" href=\"#escapehtmlstring\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>escapeHtml(string)</h4>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">string</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'&lt;html&gt; hey &lt;/html&gt;'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">escapedString</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">escapeHtml</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">string</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// returns &amp;lt;html&amp;gt; hey &amp;lt;/html&amp;gt;</span></pre></div>\n<h4>\n<a id=\"escapeheaderattributeattribute\" class=\"anchor\" href=\"#escapeheaderattributeattribute\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>escapeHeaderAttribute(attribute)</h4>\n<p>Escape attribute value for use in HTTP header</p>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">a</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">escapeHeaderAttribute</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'I said \"go w\\\\o me\"'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>  <span class=\"pl-c\">//returns I said \\\"go w\\\\o me\\\"</span></pre></div>\n<h4>\n<a id=\"escapejsonstring\" class=\"anchor\" href=\"#escapejsonstring\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>escapeJson(string)</h4>\n<p>Unicode escapes the characters <code>&lt;</code>, <code>&gt;</code>, and <code>&amp;</code> to prevent mime-sniffing older browsers mistaking JSON as HTML, and escapes line and paragraph separators for JSONP and script contexts.</p>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">lineSeparator</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">String</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">fromCharCode</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">0x2028</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">a</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">escapeJson</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'I said &lt;script&gt;confirm(&amp;).'</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">lineSeparator</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>  <span class=\"pl-c\">//returns I said \\\\u003cscript\\\\u003econfirm(\\\\u0026).\\\\u2028</span></pre></div>\n<h4>\n<a id=\"escaperegexstring\" class=\"anchor\" href=\"#escaperegexstring\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>escapeRegex(string)</h4>\n<p>Escape string for Regex construction</p>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">a</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">escapeRegex</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'4^f$s.4*5+-_?%=#!:@|~\\\\/`\"(&gt;)[&lt;]d{}s,'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>  <span class=\"pl-c\">// returns 4\\^f\\$s\\.4\\*5\\+\\-_\\?%\\=#\\!\\:@\\|~\\\\\\/`\"\\(&gt;\\)\\[&lt;\\]d\\{\\}s\\,</span></pre></div>\n<h3>\n<a id=\"errors\" class=\"anchor\" href=\"#errors\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Errors</h3>\n<h4>\n<a id=\"assertcondition-message\" class=\"anchor\" href=\"#assertcondition-message\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>assert(condition, message)</h4>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">a</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">b</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">assert</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">a</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">b</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'a should equal b'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>  <span class=\"pl-c\">// Throws 'a should equal b'</span></pre></div>\n<p>Note that you may also pass an already created Error object as the second parameter, and <code>assert</code> will throw that object.</p>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">a</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">b</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">assert</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">a</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">b</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Error</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'a should equal b'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// Throws the given error object</span></pre></div>\n<h3>\n<a id=\"function\" class=\"anchor\" href=\"#function\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Function</h3>\n<h4>\n<a id=\"oncefn\" class=\"anchor\" href=\"#oncefn\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>once(fn)</h4>\n<p>Returns a new function that can be run multiple times, but makes sure <code>fn</code> is only run once.</p>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">myFn</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Ran myFn'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">onceFn</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">once</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">myFn</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">onceFn</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// results in \"Ran myFn\"</span>\n<span class=\"pl-s1\">onceFn</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// results in undefined</span></pre></div>\n<h4>\n<a id=\"ignore\" class=\"anchor\" href=\"#ignore\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>ignore</h4>\n<p>A simple no-op function. It does nothing at all.</p>\n<h3>\n<a id=\"promises\" class=\"anchor\" href=\"#promises\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Promises</h3>\n<h4>\n<a id=\"waittimeout-returnvalue\" class=\"anchor\" href=\"#waittimeout-returnvalue\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>wait(timeout, [returnValue])</h4>\n<p>Resolve the promise after <code>timeout</code> milliseconds with the provided <code>returnValue</code>.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">await</span> <span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">wait</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2000</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// waits for 2 seconds</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">timeout</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hoek</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">wait</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1000</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'timeout'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// resolves after 1s with 'timeout'</span></pre></div>\n<h4>\n<a id=\"block\" class=\"anchor\" href=\"#block\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>block()</h4>\n<p>A no-op Promise. Does nothing.</p>\n<h4>\n<a id=\"ispromisepromise\" class=\"anchor\" href=\"#ispromisepromise\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>isPromise(promise)</h4>\n<p>Determines if an item is a promise where:</p>\n<ul>\n<li>\n<code>promise</code> - the item being tested.</li>\n</ul>\n<p>Returns <code>true</code> is the item is a promise, otherwise <code>false</code>.</p>\n",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Utility methods for the hapi ecosystem.",
    "forks": 160,
    "stars": 464,
    "date": "2020-09-02T01:35:24Z",
    "updated": "Tue Sep 01 2020",
    "link": "https://github.com/hapijs/hoek"
  },
  "inert": {
    "name": "inert",
    "versions": [
      {
        "name": "6.0.2",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "6.0.2"
    ],
    "api": true,
    "6.0.2": {
      "menu": "- [Features](#features)\n- [Examples](#examples)\n  - [Static file server](#static-file-server)\n  - [Serving a single file](#serving-a-single-file)\n  - [Customized file response](#customized-file-response)\n  - [Server options](#server-options)\n  - [`h.file()`](#hfilepath-options)\n  - [The `file` handler](#the-file-handler)\n  - [The `directory` handler](#the-directory-handler)\n  - [Errors](#errors)",
      "api": "<p><strong>inert</strong> provides new <a href=\"https://github.com/hapijs/hapi/blob/master/API.md#serverhandlername-method\">handler</a>\nmethods for serving static files and directories, as well as adding a <code>h.file()</code> method to the\n<a href=\"https://github.com/hapijs/hapi/blob/master/API.md#response-toolkit\">toolkit</a>, which can respond with\nfile based resources.</p>\n<h2>\n<a id=\"features\" class=\"anchor\" href=\"#features\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Features</h2>\n<ul>\n<li>Files are served with cache friendly <code>last-modified</code> and <code>etag</code> headers.</li>\n<li>Generated file listings and custom indexes.</li>\n<li>Pre-compressed file support for <code>content-encoding: gzip</code> responses.</li>\n<li>File attachment support using <code>content-disposition</code>  header.</li>\n</ul>\n<h2>\n<a id=\"examples\" class=\"anchor\" href=\"#examples\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Examples</h2>\n<p><strong>inert</strong> enables a number of common use cases for serving static assets.</p>\n<h3>\n<a id=\"static-file-server\" class=\"anchor\" href=\"#static-file-server\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Static file server</h3>\n<p>The following creates a basic static file server that can be used to serve html content from the\n<code>public</code> directory on port 3000:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Path</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'path'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Inert</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/inert'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">3000</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">routes</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">files</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">relativeTo</span>: <span class=\"pl-v\">Path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">join</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'public'</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">provision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Inert</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/{param*}'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">handler</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">directory</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'.'</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">redirectToSlash</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">index</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Server running at:'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">info</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">uri</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">provision</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"serving-a-single-file\" class=\"anchor\" href=\"#serving-a-single-file\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Serving a single file</h3>\n<p>You can serve specific files using the <code>file</code> handler:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/{path*}'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">handler</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">file</span>: <span class=\"pl-s\">'page.html'</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"customized-file-response\" class=\"anchor\" href=\"#customized-file-response\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Customized file response</h3>\n<p>If you need more control, the <code>h.file()</code> method is available to use inside handlers:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/file'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-en\">handler</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-k\">let</span> <span class=\"pl-s1\">path</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'plain.txt'</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">headers</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'x-magic'</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'sekret'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-s1\">path</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'awesome.png'</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">file</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">path</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">vary</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'x-magic'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">ext</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'onPreResponse'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">response</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">response</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">response</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">isBoom</span> <span class=\"pl-c1\">&amp;&amp;</span>\n        <span class=\"pl-s1\">response</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">output</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">statusCode</span> <span class=\"pl-c1\">===</span> <span class=\"pl-c1\">404</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">file</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'404.html'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">code</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">404</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">continue</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"server-options\" class=\"anchor\" href=\"#server-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Server options</h3>\n<p><strong>inert</strong> handles the following server plugin options on <code>plugins.inert</code>:</p>\n<ul>\n<li>\n<code>etagsCacheMaxSize</code> - sets the maximum number of file etag hash values stored in the\netags cache. Defaults to <code>1000</code>.</li>\n</ul>\n<h3>\n<a id=\"hfilepath-options\" class=\"anchor\" href=\"#hfilepath-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>h.file(path, [options])</code>\n</h3>\n<p>Transmits a file from the file system. The 'Content-Type' header defaults to the matching mime\ntype based on filename extension.:</p>\n<ul>\n<li>\n<code>path</code> - the file path.</li>\n<li>\n<code>options</code> - optional settings:\n<ul>\n<li>\n<code>confine</code> - serve file relative to this directory and returns <code>403 Forbidden</code> if the\n<code>path</code> resolves outside the <code>confine</code> directory.\nDefaults to <code>true</code> which uses the <code>relativeTo</code> route option as the <code>confine</code>.\nSet to <code>false</code> to disable this security feature.</li>\n<li>\n<code>filename</code> - an optional filename to specify if sending a 'Content-Disposition' header,\ndefaults to the basename of <code>path</code>\n</li>\n<li>\n<code>mode</code> - specifies whether to include the 'Content-Disposition' header with the response.\nAvailable values:\n<ul>\n<li>\n<code>false</code> - header is not included. This is the default value.</li>\n<li><code>'attachment'</code></li>\n<li><code>'inline'</code></li>\n</ul>\n</li>\n<li>\n<code>lookupCompressed</code> - if <code>true</code>, looks for for a pre-compressed version of the file with\nthe same filename with an extension, depending on the accepted encoding.\nDefaults to <code>false</code>.</li>\n<li>\n<code>lookupMap</code> - an <code>object</code> which maps content encoding to expected file name extension.\nDefaults to <code>{ gzip: '.gz' }</code>.</li>\n<li>\n<code>etagMethod</code> - specifies the method used to calculate the <code>ETag</code> header response.\nAvailable values:\n<ul>\n<li>\n<code>'hash'</code> - SHA1 sum of the file contents, suitable for distributed deployments.\nDefault value.</li>\n<li>\n<code>'simple'</code> - Hex encoded size and modification date, suitable when files are stored\non a single server.</li>\n<li>\n<code>false</code> - Disable ETag computation.</li>\n</ul>\n</li>\n<li>\n<code>start</code> - offset in file to reading from, defaults to 0.</li>\n<li>\n<code>end</code> - offset in file to stop reading from. If not set, will read to end of file.</li>\n</ul>\n</li>\n</ul>\n<p>Returns a standard <a href=\"https://github.com/hapijs/hapi/blob/master/API.md#response-object\">response</a> object.</p>\n<p>The <a href=\"https://github.com/hapijs/hapi/blob/master/API.md#flow-control\">response flow control rules</a> <strong>do not</strong> apply.</p>\n<h3>\n<a id=\"the-file-handler\" class=\"anchor\" href=\"#the-file-handler\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>The <code>file</code> handler</h3>\n<p>Generates a static file endpoint for serving a single file. <code>file</code> can be set to:</p>\n<ul>\n<li>a relative or absolute file path string (relative paths are resolved based on the\nroute <a href=\"https://github.com/hapijs/hapi/blob/master/API.md#route.config.files\"><code>files</code></a>\nconfiguration).</li>\n<li>a function with the signature <code>function(request)</code> which returns the relative or absolute\nfile path.</li>\n<li>an object with one or more of the following options:\n<ul>\n<li>\n<code>path</code> - a path string or function as described above (required).</li>\n<li>\n<code>confine</code> - serve file relative to this directory and returns <code>403 Forbidden</code> if the\n<code>path</code> resolves outside the <code>confine</code> directory.\nDefaults to <code>true</code> which uses the <code>relativeTo</code> route option as the <code>confine</code>.\nSet to <code>false</code> to disable this security feature.</li>\n<li>\n<code>filename</code> - an optional filename to specify if sending a 'Content-Disposition'\nheader, defaults to the basename of <code>path</code>\n</li>\n<li>\n<code>mode</code> - specifies whether to include the 'Content-Disposition' header with the\nresponse. Available values:\n<ul>\n<li>\n<code>false</code> - header is not included. This is the default value.</li>\n<li><code>'attachment'</code></li>\n<li><code>'inline'</code></li>\n</ul>\n</li>\n<li>\n<code>lookupCompressed</code> - if <code>true</code>, looks for for a pre-compressed version of the file with\nthe same filename with an extension, depending on the accepted encoding.\nDefaults to <code>false</code>.</li>\n<li>\n<code>lookupMap</code> - an <code>object</code> which maps content encoding to expected file name extension.\nDefaults to <code>{ gzip: '.gz' }</code>.</li>\n<li>\n<code>etagMethod</code> - specifies the method used to calculate the <code>ETag</code> header response.\nAvailable values:\n<ul>\n<li>\n<code>'hash'</code> - SHA1 sum of the file contents, suitable for distributed deployments.\nDefault value.</li>\n<li>\n<code>'simple'</code> - Hex encoded size and modification date, suitable when files are stored\non a single server.</li>\n<li>\n<code>false</code> - Disable ETag computation.</li>\n</ul>\n</li>\n<li>\n<code>start</code> - offset in file to reading from, defaults to 0.</li>\n<li>\n<code>end</code> - offset in file to stop reading from. If not set, will read to end of file.</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"the-directory-handler\" class=\"anchor\" href=\"#the-directory-handler\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>The <code>directory</code> handler</h3>\n<p>Generates a directory endpoint for serving static content from a directory.\nRoutes using the directory handler must include a path parameter at the end of the path\nstring (e.g. <code>/path/to/somewhere/{param}</code> where the parameter name does not matter). The\npath parameter can use any of the parameter options (e.g. <code>{param}</code> for one level files\nonly, <code>{param?}</code> for one level files or the directory root, <code>{param*}</code> for any level, or\n<code>{param*3}</code> for a specific level). If additional path parameters are present, they are\nignored for the purpose of selecting the file system resource. The directory handler is an\nobject with the following options:</p>\n<ul>\n<li>\n<code>path</code> - (required) the directory root path (relative paths are resolved based on the\nroute <a href=\"https://github.com/hapijs/hapi/blob/master/API.md#route.config.files\"><code>files</code></a>\nconfiguration). Value can be:\n<ul>\n<li>a single path string used as the prefix for any resources requested by appending the\nrequest path parameter to the provided string.</li>\n<li>an array of path strings. Each path will be attempted in order until a match is\nfound (by following the same process as the single path string).</li>\n<li>a function with the signature <code>function(request)</code> which returns the path string or\nan array of path strings. If the function returns an error, the error is passed back\nto the client in the response.</li>\n</ul>\n</li>\n<li>\n<code>index</code> - optional boolean|string|string[], determines if an index file will be served\nif found in the folder when requesting a directory. The given string or strings specify\nthe name(s) of the index file to look for. If <code>true</code>, looks for 'index.html'. Any falsy\nvalue disables index file lookup. Defaults to <code>true</code>.</li>\n<li>\n<code>listing</code> - optional boolean, determines if directory listing is generated when a\ndirectory is requested without an index document.\nDefaults to <code>false</code>.</li>\n<li>\n<code>showHidden</code> - optional boolean, determines if hidden files will be shown and served.\nDefaults to <code>false</code>.</li>\n<li>\n<code>redirectToSlash</code> - optional boolean, determines if requests for a directory without a\ntrailing slash are redirected to the same path with the missing slash. Useful for\nensuring relative links inside the response are resolved correctly. Disabled when the\nserver config <code>router.stripTrailingSlash</code> is <code>true. </code>Defaults to <code>false</code>.</li>\n<li>\n<code>lookupCompressed</code> - optional boolean, instructs the file processor to look for the same\nfilename with an extension, depending on the accepted encoding, for a pre-compressed\nversion of the file to serve. Defaults to <code>false</code>.</li>\n<li>\n<code>lookupMap</code> - an <code>object</code> which maps content encoding to expected file name extension.\nDefaults to <code>{ gzip: '.gz' }</code>.</li>\n<li>\n<code>etagMethod</code> - specifies the method used to calculate the <code>ETag</code> header response.\nAvailable values:\n<ul>\n<li>\n<code>'hash'</code> - SHA1 sum of the file contents, suitable for distributed deployments.\nDefault value.</li>\n<li>\n<code>'simple'</code> - Hex encoded size and modification date, suitable when files are stored\non a single server.</li>\n<li>\n<code>false</code> - Disable ETag computation.</li>\n</ul>\n</li>\n<li>\n<code>defaultExtension</code> - optional string, appended to file requests if the requested file is\nnot found. Defaults to no extension.</li>\n</ul>\n<h3>\n<a id=\"errors\" class=\"anchor\" href=\"#errors\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Errors</h3>\n<p>Any file access errors are signalled using appropriate <a href=\"https://github.com/hapijs/boom\">Boom</a>\nerrors. These are <code>Boom.notFound()</code> for missing or hidden files, and <code>Boom.forbidden()</code> for\nfiles that exist, but can't otherwise be accessed.</p>\n<p>The error can contain an <code>err.data.path</code> property, which is the path that the error failed for.\nThis property <em>does not always exist</em> if the response was generated without a file system lookup,\nand for the directory handler it will be the last tested non-index path.</p>\n<p>If an unexpected configuration or processing errors occurs, <code>Boom.internal()</code> and <code>'system'</code>\nerrors can also be thrown.</p>\n",
      "intro": "",
      "example": "",
      "usage": "## Usage\n\nAfter registration, this plugin adds a new method to the `toolkit` object and exposes the `'file'`\nand `'directory'` route handlers.\n\nNote that **inert** uses the custom `'file'` `variety` to signal that the response is a static\nfile generated by this plugin.\n",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Static file and directory handlers for hapi.js.",
    "forks": 45,
    "stars": 236,
    "date": "2020-08-22T20:09:45Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/inert"
  },
  "iron": {
    "name": "iron",
    "versions": [
      {
        "name": "6.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "6.0.0"
    ],
    "api": true,
    "6.0.0": {
      "menu": "- [Security Considerations](#security-considerations)\n  - [Plaintext Storage of Credentials](#plaintext-storage-of-credentials)\n- [Frequently Asked Questions](#frequently-asked-questions)\n  - [Where is the protocol specification?](#where-is-the-protocol-specification)\n  - [Is it done?](#is-it-done)\n  - [How come the defaults must be manually passed and not automatically applied?](#how-come-the-defaults-must-be-manually-passed-and-not-automatically-applied)\n- [Acknowledgements](#acknowledgements)\n- [Methods](#methods)\n  - [`await seal()`](#await-sealobject-password-options)\n  - [`await unseal()`](#await-unsealsealed-password-options)\n  - [`await generateKey()`](#await-generatekeypassword-options)\n  - [`await encrypt()`](#await-encryptpassword-options-data)\n  - [`await decrypt()`](#await-decryptpassword-options-data)\n  - [`await hmacWithPassword()`](#await-hmacwithpasswordpassword-options-data)\n- [Options](#options)\n  - [Defaults](#defaults)",
      "api": "<h2>\n<a id=\"security-considerations\" class=\"anchor\" href=\"#security-considerations\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Security Considerations</h2>\n<p>The greatest sources of security risks are usually found not in <strong>iron</strong> but in the policies and\nprocedures surrounding its use. Implementers are strongly encouraged to assess how this module\naddresses their security requirements. This section includes an incomplete list of security\nconsiderations that must be reviewed and understood before using <strong>iron</strong>.</p>\n<h3>\n<a id=\"plaintext-storage-of-credentials\" class=\"anchor\" href=\"#plaintext-storage-of-credentials\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Plaintext Storage of Credentials</h3>\n<p>The <strong>iron</strong> password is only used to derive keys and is never sent or shared. However, in order to\ngenerate (and regenerate) the keys used to encrypt the object and compute the request MAC, the\nserver must have access to the password in plaintext form. This is in contrast, for example, to\nmodern operating systems, which store only a one-way hash of user credentials.</p>\n<p>If an attacker were to gain access to the password - or worse, to the server's database of all such\npassword - he or she would be able to encrypt and decrypt any sealed object. Accordingly, it is\ncritical that servers protect these passwords from unauthorized access.</p>\n<h2>\n<a id=\"frequently-asked-questions\" class=\"anchor\" href=\"#frequently-asked-questions\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Frequently Asked Questions</h2>\n<h3>\n<a id=\"where-is-the-protocol-specification\" class=\"anchor\" href=\"#where-is-the-protocol-specification\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Where is the protocol specification?</h3>\n<p>If you are looking for some prose explaining how all this works, there isn't any. <strong>iron</strong> is being\ndeveloped as an open source project instead of a standard. In other words, the <a href=\"https://github.com/hapijs/iron/tree/master/lib\">code</a> is the\nspecification. Not sure about something? Open an issue!</p>\n<h3>\n<a id=\"is-it-done\" class=\"anchor\" href=\"#is-it-done\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Is it done?</h3>\n<p>Yep.</p>\n<h3>\n<a id=\"how-come-the-defaults-must-be-manually-passed-and-not-automatically-applied\" class=\"anchor\" href=\"#how-come-the-defaults-must-be-manually-passed-and-not-automatically-applied\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>How come the defaults must be manually passed and not automatically applied?</h3>\n<p>Because you should know what you are doing and explicitly set it. The options matter a lot to the\nsecurity properties of the implementation. While reasonable defaults are provided, you still need\nto explicitly state you want to use them.</p>\n<h2>\n<a id=\"acknowledgements\" class=\"anchor\" href=\"#acknowledgements\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Acknowledgements</h2>\n<p>Special thanks to Adam Barth for his infinite patience, and always insightful feedback and advice.</p>\n<h2>\n<a id=\"methods\" class=\"anchor\" href=\"#methods\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Methods</h2>\n<h3>\n<a id=\"await-sealobject-password-options\" class=\"anchor\" href=\"#await-sealobject-password-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await seal(object, password, options)</code>\n</h3>\n<p>Seriealizes, encrypts, and signs objects into an <strong>iron</strong> protocol string where:</p>\n<ul>\n<li>\n<p><code>object</code> - the data being sealed. Can be any JavaScript value that is serializable via\n<code>JSON.stringify()</code>. <strong>Note</strong>: <code>JSON.stringify</code> will not keep object properties which values are <code>undefined</code>. So if you pass an object like <code>{id: undefined}</code> then it will be serialized as <code>{}</code>.</p>\n</li>\n<li>\n<p><code>password</code> - one of:</p>\n<ul>\n<li>\n<p>a password string used to generate a key using the pbkdf2 algorithm.</p>\n</li>\n<li>\n<p>a key buffer used as-is (after validating sufficient length based on the algorithm used).</p>\n</li>\n<li>\n<p>an object with:</p>\n<ul>\n<li>\n<code>id</code> - a password identifier (must consist of only letters, numbers, and <code>_</code>).</li>\n<li>\n<code>secret</code> - a password string or key buffer used for both encryption and integrity.</li>\n</ul>\n</li>\n<li>\n<p>an object with:</p>\n<ul>\n<li>\n<code>id</code> - a password identifier (must consist of only letters, numbers, and <code>_</code>).</li>\n<li>\n<code>encryption</code> - a password string or key buffer used for encryption.</li>\n<li>\n<code>integrity</code> - a password string or key buffer used for integrity.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><code>options</code> - see <a href=\"#options\">Options</a>.</p>\n</li>\n</ul>\n<p>Return value: <strong>iron</strong> sealed string.</p>\n<p>Note: assigning the password used an <code>id</code> allows for password rotation to improve the security of\nyour deployment. Passwords should be rotated over time to reduce the risk of compromised security.\nWhen providing a password id, the id is included with the <strong>iron</strong> protocol string and it must\nmatch the id used to unseal.</p>\n<p>It is recommended to combine password id with the <code>ttl</code> option to generate <strong>iron</strong> protocol\nstrings of limited time validity which also allow for rotating passwords without the need to keep\nall previous passwords around (only the number of passwords used within the ttl window).</p>\n<h3>\n<a id=\"await-unsealsealed-password-options\" class=\"anchor\" href=\"#await-unsealsealed-password-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await unseal(sealed, password, options)</code>\n</h3>\n<p>Verifies, decrypts, and reconstruct an <strong>iron</strong> protocol string into an object where:</p>\n<ul>\n<li>\n<p><code>sealed</code> - the <strong>iron</strong> protocol string generated with <a href=\"#await-sealobject-password-options\"><code>seal()</code></a>.</p>\n</li>\n<li>\n<p><code>password</code> - must match the <code>password</code> value passed to <a href=\"#await-sealobject-password-options\"><code>seal()</code></a>\nand be one of:</p>\n<ul>\n<li>\n<p>a password string used to generate a key using the pbkdf2 algorithm.</p>\n</li>\n<li>\n<p>a key buffer used as-is (after validating sufficient length based on the algorithm used).</p>\n</li>\n<li>\n<p>an object with <code>id</code> as the key and value is one of:</p>\n<ul>\n<li>a password string or key buffer used for both encryption and integrity.</li>\n<li>an object with:\n<ul>\n<li>\n<code>encryption</code> - a password string or key buffer used for encryption.</li>\n<li>\n<code>integrity</code> - a password string or key buffer used for integrity.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><code>options</code> - see <a href=\"#options\">Options</a>. Must match the <code>options</code> value passed to\n<a href=\"#await-sealobject-password-options\"><code>seal()</code></a></p>\n</li>\n</ul>\n<p>Return value: the verified, decripted object.</p>\n<p>Note: In order to enable password rotation, the <code>password</code> argument can accept an object with more\nthan one password, each keyed by its id. Together with the <code>ttl</code> option, the <code>password</code> object only\nneeds to include the passwords used within the ttl window.</p>\n<h3>\n<a id=\"await-generatekeypassword-options\" class=\"anchor\" href=\"#await-generatekeypassword-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await generateKey(password, options)</code>\n</h3>\n<p>Generates an key from the password where:</p>\n<ul>\n<li>\n<code>password</code> - a password string or buffer key.</li>\n<li>\n<code>options</code> - see <a href=\"#options\">Options</a>.</li>\n</ul>\n<p>Return value: an object with the following keys:</p>\n<ul>\n<li><code>key</code></li>\n<li><code>salt</code></li>\n<li><code>iv</code></li>\n</ul>\n<h3>\n<a id=\"await-encryptpassword-options-data\" class=\"anchor\" href=\"#await-encryptpassword-options-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await encrypt(password, options, data)</code>\n</h3>\n<p>Encrypts data where:</p>\n<ul>\n<li>\n<code>password</code> - a password string or buffer key.</li>\n<li>\n<code>options</code> - see <a href=\"#options\">Options</a>.</li>\n<li>'data' - the string to encrypt.</li>\n</ul>\n<p>Return value: an object with the following keys:</p>\n<ul>\n<li><code>encrypted</code></li>\n<li>\n<code>key</code>:\n<ul>\n<li><code>key</code></li>\n<li><code>salt</code></li>\n<li><code>iv</code></li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"await-decryptpassword-options-data\" class=\"anchor\" href=\"#await-decryptpassword-options-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await decrypt(password, options, data)</code>\n</h3>\n<p>Decrypts data where:</p>\n<ul>\n<li>\n<code>password</code> - a password string or buffer key.</li>\n<li>\n<code>options</code> - see <a href=\"#options\">Options</a>.</li>\n<li>'data' - the string to decrypt.</li>\n</ul>\n<p>Return value: the decrypted string.</p>\n<h3>\n<a id=\"await-hmacwithpasswordpassword-options-data\" class=\"anchor\" href=\"#await-hmacwithpasswordpassword-options-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await hmacWithPassword(password, options, data)</code>\n</h3>\n<p>Calculates an HMAC digest where:</p>\n<ul>\n<li>\n<code>password</code> - a password string or buffer key.</li>\n<li>\n<code>options</code> - see <a href=\"#options\">Options</a>.</li>\n<li>'data' - the string to calculate the HMAC over.</li>\n</ul>\n<p>Return value: an object with the following keys:</p>\n<ul>\n<li><code>digest</code></li>\n<li><code>salt</code></li>\n</ul>\n<h2>\n<a id=\"options\" class=\"anchor\" href=\"#options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Options</h2>\n<p><strong>iron</strong> provides options for customizing the key deriviation algorithm used to generate encryption\nand integrity verification keys, as well as the algorithms and salt sizes used.<strong>iron</strong> methods\ntake an options object with the following keys:</p>\n<ul>\n<li>\n<code>encryption</code> - (required) defines the options used by the encryption process.</li>\n<li>\n<code>integrity</code> - (required) defines the options used by the HMAC integrity verification process.</li>\n</ul>\n<p>Each of these option objects support the following keys:</p>\n<ul>\n<li>\n<code>algorithm</code> - (required) the algorithm name ('aes-256-cbc' and 'aes-128-ctr' for encryption and\n'sha256' for integrity are the only two supported at this time).</li>\n<li>\n<code>iv</code> - (optional) an <a href=\"http://en.wikipedia.org/wiki/Initialization_vector\" rel=\"nofollow\">initialization vector</a>\nbuffer. If no <code>iv</code> is provided, one is generated based on the algorithm <code>ivBits</code> configuration.</li>\n</ul>\n<p>When the <code>password</code> argument passed is a string (used for key generation), the following options\nare used:</p>\n<ul>\n<li>\n<code>salt</code> - (optional) a pre-generated salt string (a random buffer used to ensure that two\nidentical objects will generate a different encrypted result).</li>\n<li>\n<code>saltBits</code> - (required if <code>salt</code> is not provided, otherwise ignored) the size of the salt.</li>\n<li>\n<code>iterations</code> - (required) the number of iterations used to derive a key from the password.\nDefaults to <code>1</code> iteration. The number of ideal iterations to use is dependent on your\napplication's performance requirements. More iterations means it takes longer to generate the\nkey.</li>\n<li>\n<code>minPasswordlength</code> - (required) the minimum password string length required for key generation.\nDefaults to <code>32</code> characters.</li>\n</ul>\n<p>The <em>'seal()'</em> and <em>'unseal()'</em> methods also support the following options:</p>\n<ul>\n<li>\n<code>ttl</code> - sealed object lifetime in milliseconds where 0 means forever. Defaults to <code>0</code>.</li>\n<li>\n<code>timestampSkewSec</code> - number of seconds of permitted clock skew for incoming expirations.\nDefaults to <code>60</code> seconds.</li>\n<li>\n<code>localtimeOffsetMsec</code> - local clock time offset, expressed in number of milliseconds (positive or\nnegative). Defaults to <code>0</code>.</li>\n</ul>\n<h3>\n<a id=\"defaults\" class=\"anchor\" href=\"#defaults\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Defaults</h3>\n<p><strong>iron</strong> includes a default options object which can be passed to the methods as shown above in the\nexample. The default settings are:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">var</span> <span class=\"pl-s1\">options</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">encryption</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">saltBits</span>: <span class=\"pl-c1\">256</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">algorithm</span>: <span class=\"pl-s\">'aes-256-cbc'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">iterations</span>: <span class=\"pl-c1\">1</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">integrity</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">saltBits</span>: <span class=\"pl-c1\">256</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">algorithm</span>: <span class=\"pl-s\">'sha256'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">iterations</span>: <span class=\"pl-c1\">1</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">ttl</span>: <span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">timestampSkewSec</span>: <span class=\"pl-c1\">60</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">localtimeOffsetMsec</span>: <span class=\"pl-c1\">0</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n",
      "intro": "## Introduction\n\n**iron** is a cryptographic utility for sealing a JSON object using symmetric key encryption with message\nintegrity verification. Or in other words, it lets you encrypt an object, send it around (in\ncookies, authentication credentials, etc.), then receive it back and decrypt it. The algorithm\nensures that the message was not tampered with, and also provides a simple mechanism for password\nrotation.\n\nNote: the wire protocol has not changed since 1.x (the version increments reflected a change in\nthe internal error format used by the module and by the node API as well as other node API changes).\n\n**iron** provides methods for encrypting an object, generating a message authentication code (MAC),\nand serializing both into a cookie / URI / HTTP header friendly format. Sealed objects are useful\nin cases where state has to reside on other applications not under your control, without exposing\nthe details of this state to those application.\n\nFor example, sealed objects allow you to encrypt the permissions granted to the authenticated user,\nstore those permissions using a cookie, without worrying about someone modifying (or even knowing)\nwhat those permissions are. Any modification to the encrypted data will invalidate its integrity.\n\nThe seal process follows these general steps:\n\n- generate encryption salt `saltE`\n- derive an encryption key `keyE` using `saltE` and a password\n- generate an integrity salt `saltI`\n- derive an integrity (HMAC) key `keyI` using `saltI` and the password\n- generate a random [initialization vector](http://en.wikipedia.org/wiki/Initialization_vector) `iv`\n- encrypt the serialized object string using `keyE` and `iv`\n- mac the encrypted object along with `saltE` and `iv`\n- concatenate `saltE`, `saltI`, `iv`, and the encrypted object into a URI-friendly string\n",
      "example": "## Example\n\nTo seal an object:\n\n```javascript\nconst obj = {\n    a: 1,\n    b: 2,\n    c: [3, 4, 5],\n    d: {\n        e: 'f'\n    }\n};\n\nconst password = 'some_not_random_password_that_is_at_least_32_characters';\n\ntry {\n    const sealed = await Iron.seal(obj, password, Iron.defaults);\n} catch (err) {\n    console.log(err.message);\n}\n```\n\nThe result `sealed` object is a string which can be sent via cookies, URI query parameter, or an\nHTTP header attribute. To unseal the string:\n\n```javascript\ntry {\n    const unsealed = await Iron.unseal(sealed, password, Iron.defaults);\n} catch (err) {\n    console.log(err.message);\n}\n```\n",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Encapsulated tokens (encrypted and mac'ed objects).",
    "forks": 52,
    "stars": 533,
    "date": "2020-08-09T18:56:34Z",
    "updated": "Sun Aug 09 2020",
    "link": "https://github.com/hapijs/iron"
  },
  "jwt": {
    "name": "jwt",
    "versions": [
      {
        "name": "2.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "2.0.0"
    ],
    "api": true,
    "2.0.0": {
      "menu": "  - [How to register the plugin](#how-to-register-the-plugin)\n  - [Token validation function](#token-validation-function)\n  - [Example ()](#example-scenario)\n- [Key algorithms supported by @hapi/jwt](#key-algorithms-supported-by-hapijwt)",
      "api": "<h2>\n<a id=\"how-to-register-the-plugin\" class=\"anchor\" href=\"#how-to-register-the-plugin\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>How to register the plugin</h2>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-c\">// Load modules</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Jwt</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"@hapi/jwt\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"@hapi/hapi\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">internals</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">8000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Jwt</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">strategy</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"jwt\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"jwt\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// provide the shared secret key / json web keyset info</span>\n    <span class=\"pl-c1\">keys</span>:\n      <span class=\"pl-s1\">secret</span> |\n      <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">uri</span>: <span class=\"pl-s1\">jwks</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">endpoint</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c\">// fields that needs to be verified and respective values</span>\n    <span class=\"pl-c1\">verify</span>: <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c\">// audience intended to receive</span>\n      <span class=\"pl-c1\">aud</span>: <span class=\"pl-s\">\"urn:audience:test\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c\">// issuer of the jwt</span>\n      <span class=\"pl-c1\">iss</span>: <span class=\"pl-s\">\"urn:issuer:test\"</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c\">// verify subject of jwt</span>\n      <span class=\"pl-c1\">sub</span>: <span class=\"pl-c1\">false</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c\">// check expiry - default true</span>\n      <span class=\"pl-c1\">exp</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c\">// nbf &lt; (nowSec + skewSec)</span>\n      <span class=\"pl-c1\">nbf</span>: <span class=\"pl-c1\">1556582777</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c\">// skew secs</span>\n      <span class=\"pl-c1\">timeSkewSec</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c\">// max age (secs) of the JWT allowed</span>\n      <span class=\"pl-c1\">maxAgeSec</span>: <span class=\"pl-c1\">15</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c\">// token validation fn gets executed after token signature verification</span>\n    <span class=\"pl-en\">validate</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">artifacts</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">isValid</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">credentials</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">user</span>: <span class=\"pl-s1\">artifacts</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">decoded</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">payload</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">user</span> <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-c\">//set the strategy</span>\n  <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">default</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"jwt\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<h2>\n<a id=\"token-validation-function\" class=\"anchor\" href=\"#token-validation-function\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Token validation function</h2>\n<p>You can provide your own custom validation function, that will be invoked after signature verification.The function is invoked by passing the artifacts of the token, request and response toolkit handler. This function should return the Promise that resolves to an object having the below properties as shown below or you can also throw error. If you throw err, it will invoke the <code>h.unauthenticated</code> fn filling the error message (Boom style)</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>isValid<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">true</span>,\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>credentials<span class=\"pl-pds\">\"</span></span>: {\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>user<span class=\"pl-pds\">\"</span></span> : <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bob<span class=\"pl-pds\">\"</span></span>\n  },\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>response<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>user authentication successful<span class=\"pl-pds\">\"</span></span> \n}</pre></div>\n<h2>\n<a id=\"example-scenario\" class=\"anchor\" href=\"#example-scenario\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Example (scenario)</h2>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">artifacts</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n<span class=\"pl-c\">// successful validation</span>\n<span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">isValid</span> : <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">credentials</span> : <span class=\"pl-kos\">{</span>decoded <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">response</span>: <span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">any</span><span class=\"pl-c1\">&gt;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span><span class=\"pl-c\"></span>\n<span class=\"pl-c\"></span>\n<span class=\"pl-c\">// failed validation</span>\nreturn <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">isValid</span> : <span class=\"pl-c1\">false</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">credentials</span> : <span class=\"pl-c1\">null</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-s1\">response</span><span class=\"pl-s\">\": &lt;any&gt;</span>\n<span class=\"pl-kos\">}</span>;\n\n// simply throw error\nthrow new Error('Invalid username or password');\n\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\"></span></pre></div>\n<h1>\n<a id=\"key-algorithms-supported-by-hapijwt\" class=\"anchor\" href=\"#key-algorithms-supported-by-hapijwt\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Key algorithms supported by @hapi/jwt</h1>\n<ul>\n<li>public: ['RS256', 'RS384', 'RS512', 'PS256', 'PS384', 'PS512', 'ES256', 'ES384', 'ES512']</li>\n<li>rsa: ['RS256', 'RS384', 'RS512', 'PS256', 'PS384', 'PS512']</li>\n<li>hmac: ['HS256', 'HS384', 'HS512']</li>\n<li>none: ['none]</li>\n</ul>\n",
      "intro": "",
      "example": "",
      "usage": "# Usage\n\n**@hapi/jwt** plugin provides built-in support for JWT authentication for Hapi servers.\n",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "JWT (JSON Web Token) Authentication.",
    "forks": 14,
    "stars": 19,
    "date": "2020-08-22T21:28:05Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/jwt"
  },
  "lab": {
    "name": "lab",
    "versions": [
      {
        "name": "23.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "23.0.0"
    ],
    "api": true,
    "23.0.0": {
      "menu": "  - [Behavior Driven Development](#behavior-driven-development)\n  - [Test Driven Development](#test-driven-development)\n  - [Best practices](#best-practices)\n  - [Timeouts](#timeouts)\n  - [Transforms](#transforms)\n    - [TypeScript](#typescript)\n- [Command Line](#command-line)\n- [Methods](#methods)\n  - [`Lab.script()`](#labscriptoptions)\n  - [`script.after()`](#scriptafteroptions-action)\n  - [`script.afterEach()`](#scriptaftereach)\n  - [`script.before()`](#scriptbefore)\n  - [`script.beforeEach()`](#scriptbeforeeach)\n  - [`script.describe()`](#scriptdescribetitle-options-content)\n  - [`script.experiment()`](#scriptexperimenttitle-options-content)\n  - [`script.experiment.only()`](#scriptexperimentonlytitle-options-content)\n  - [`script.experiment.skip()`](#scriptexperimentskiptitle-options-content)\n  - [`script.it()`](#scriptittitle-options-test)\n  - [`script.suite()`](#scriptsuitetitle-options-content)\n  - [`script.test()`](#scripttesttitle-options-test)\n  - [`script.test.only()`](#scripttestonlytitle-options-test)\n  - [`script.test.skip()`](#scripttestskiptitle-options-test)\n  - [`Flags`](#flags)\n    - [`context`](#context)\n    - [`mustCall()`](#mustcallfunc-count)\n    - [`note()`](#notenote)\n    - [`onCleanup`](#oncleanup)\n    - [`onUncaughtException`](#onuncaughtexception)\n    - [`onUnhandledRejection`](#onunhandledrejection)\n- [`.labrc.js` File](#labrcjs-file)\n  - [Setting precedent](#setting-precedent)\n  - [Available settings](#available-settings)\n- [Linting](#linting)\n  - [Ignoring files in linting](#ignoring-files-in-linting)\n  - [Only run linting](#only-run-linting)\n- [Integration with an assertion library](#integration-with-an-assertion-library)\n- [Debuggers](#debuggers)\n- [Multiple Reporters](#multiple-reporters)\n- [Custom Reporters](#custom-reporters)\n- [Coverage](#coverage)\n  - [Coverage Bypass Stack](#coverage-bypass-stack)\n  - [Excluding paths from coverage reporting](#excluding-paths-from-coverage-reporting)\n- [Acknowledgements](#acknowledgements)",
      "api": "<h3>\n<a id=\"behavior-driven-development\" class=\"anchor\" href=\"#behavior-driven-development\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Behavior Driven Development</h3>\n<p>To make <strong>lab</strong> look like BDD:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Lab</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/lab'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> expect <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> after<span class=\"pl-kos\">,</span> before<span class=\"pl-kos\">,</span> describe<span class=\"pl-kos\">,</span> it <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">exports</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">lab</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">script</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'math'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-en\">before</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-en\">after</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'returns true when 1 + 1 equals 2'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span> <span class=\"pl-c1\">+</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"test-driven-development\" class=\"anchor\" href=\"#test-driven-development\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Test Driven Development</h3>\n<p>To make <strong>lab</strong> look like TDD:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Code</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Lab</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/lab'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> expect <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Code</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> suite<span class=\"pl-kos\">,</span> test <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">exports</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">lab</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">script</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">suite</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'math'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'returns true when 1 + 1 equals 2'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span> <span class=\"pl-c1\">+</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"best-practices\" class=\"anchor\" href=\"#best-practices\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Best practices</h3>\n<ul>\n<li>Add lab as a dev dependency to your project's <code>package.json</code> along with a <code>test</code> script:</li>\n</ul>\n<div class=\"highlight highlight-source-json\"><pre>{\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>devDependencies<span class=\"pl-pds\">\"</span></span>: {\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@hapi/lab<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>21.x.x<span class=\"pl-pds\">\"</span></span>\n  },\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>scripts<span class=\"pl-pds\">\"</span></span>: {\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>lab -t 100<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test-cov-html<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>lab -r html -o coverage.html<span class=\"pl-pds\">\"</span></span>\n  }\n}</pre></div>\n<p>Note that <code>npm test</code> will execute <strong>lab</strong> with the <code>-t 100</code> option which will require 100% code coverage. Run <code>npm run test-cov-html</code> and check the <code>coverage.html</code> file to figure out where coverage is lacking. When coverage is below the threshold, the CLI will exit with code <code>1</code> and will result in an npm Error message.</p>\n<ul>\n<li>Run your tests with</li>\n</ul>\n<div class=\"highlight highlight-source-shell\"><pre>$ npm <span class=\"pl-c1\">test</span></pre></div>\n<h3>\n<a id=\"timeouts\" class=\"anchor\" href=\"#timeouts\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Timeouts</h3>\n<p><code>before()</code>, <code>after()</code>, <code>beforeEach()</code>, <code>afterEach()</code> accept an optional <code>options</code> argument which must be an object with the following optional keys:</p>\n<ul>\n<li>\n<code>timeout</code> -  set a specific timeout in milliseconds. Disabled by default or the value of <code>-M</code>.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">experiment</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'math'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">timeout</span>: <span class=\"pl-c1\">1000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-s1\">lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">before</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">timeout</span>: <span class=\"pl-c1\">500</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span>  <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-en\">doSomething</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'returns true when 1 + 1 equals 2'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span>  <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span> <span class=\"pl-c1\">+</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"transforms\" class=\"anchor\" href=\"#transforms\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Transforms</h3>\n<p>To use source transforms, you must specify a file with the <code>-T</code> command line option that tells Lab how to do the transformation. You can specify many extensions with different transform functions such as <code>.ts</code> or <code>.jsx</code>.</p>\n<h4>\n<a id=\"typescript\" class=\"anchor\" href=\"#typescript\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>TypeScript</h4>\n<p>A TypeScript definition file is included with <strong>lab</strong> to make it easier to use inside of an existing TypeScript project. Below is a TypeScript test example that uses the <a href=\"https://www.npmjs.com/package/lab-transform-typescript\" rel=\"nofollow\">lab-transform-typescript</a> module to manage the transform:</p>\n<div class=\"highlight highlight-source-ts\"><pre><span class=\"pl-k\">import</span> * <span class=\"pl-k\">as</span> <span class=\"pl-smi\">Lab</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'@hapi/lab'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">expect</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'@hapi/code'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">lab</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">Lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">script</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> describe<span class=\"pl-kos\">,</span> it<span class=\"pl-kos\">,</span> before <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">lab</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">lab</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n\n<span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'experiment'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-en\">before</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'verifies 1 equals 1'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Then the test can be executed using the following command line:</p>\n<div class=\"highlight highlight-source-shell\"><pre>$ lab --sourcemaps --transform node_modules/lab-transform-typescript</pre></div>\n<h2>\n<a id=\"command-line\" class=\"anchor\" href=\"#command-line\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Command Line</h2>\n<p><strong>lab</strong> supports the following command line options:</p>\n<ul>\n<li>\n<code>-a</code>, <code>--assert</code> - name of assert library to use. To disable assertion library set to <code>false</code>.</li>\n<li>\n<code>--bail</code> - terminate the process with a non-zero exit code on the first test failure. Defaults to <code>false</code>.</li>\n<li>\n<code>-c</code>, <code>--coverage</code> - enables code coverage analysis.</li>\n<li>\n<code>--coverage-path</code> - sets code coverage path.</li>\n<li>\n<code>--coverage-exclude</code> - sets code coverage excludes.</li>\n<li>\n<code>--coverage-all</code> - report coverage for all matched files, not just those tested.</li>\n<li>\n<code>--coverage-flat</code> - do not perform a recursive find of files for coverage report. Requires <code>--coverage-all</code>\n</li>\n<li>\n<code>--coverage-pattern</code> - only report coverage for files with the given pattern in the name. Defaults to <code>pattern</code>. Requires <code>--coverage-all</code>\n</li>\n<li>\n<code>-C</code>, <code>--colors</code> - enables or disables color output. Defaults to console capabilities.</li>\n<li>\n<code>-d</code>, <code>--dry</code> - dry run. Skips all tests. Use with <code>-v</code> to generate a test catalog. Defaults to <code>false</code>.</li>\n<li>\n<code>-e</code>, <code>--environment</code> - value to set the <code>NODE_ENV</code> environment variable to, defaults to 'test'.</li>\n<li>\n<code>-f</code>, <code>--flat</code> - do not perform a recursive load of test files within the test directory.</li>\n<li>\n<code>-g</code>, <code>--grep</code> - only run tests matching the given pattern which is internally compiled to a RegExp.</li>\n<li>\n<code>-h</code>, <code>--help</code> - show command line usage.</li>\n<li>\n<code>-i</code>, <code>--id</code> - only run the test for the given identifier (or identifiers range, e.g. <code>lab -i 1-3,5</code>). Use <code>lab -dv</code> to print all tests and their identifier without running the tests. This is an alias of <code>ids</code> array property in <code>.labrc</code> file.</li>\n<li>\n<code>-I</code>, <code>--ignore</code> - ignore a list of globals for the leak detection (comma separated), this is an alias of <code>globals</code> property in <code>.labrc</code> file. To ignore symbols, pass the symbol's string representation (e.g. <code>Symbol(special)</code>).</li>\n<li>\n<code>--inspect</code> - start lab in debug mode using the <a href=\"https://nodejs.org/dist/latest-v12.x/docs/api/debugger.html#debugger_v8_inspector_integration_for_node_js\" rel=\"nofollow\">V8 Inspector</a>.</li>\n<li>\n<code>--inspect-brk</code> - see <code>--inspect</code>.</li>\n<li>\n<code>-l</code>, <code>--leaks</code> - disables global variable leak detection.</li>\n<li>\n<code>-L</code>, <code>--lint</code> - run linting rules using linter.  Disabled by default.</li>\n<li>\n<code>--lint-errors-threshold</code> - maximum absolute amount of linting errors. Defaults to 0.</li>\n<li>\n<code>--lint-warnings-threshold</code> - maximum absolute amount of linting warnings. Defaults to 0.</li>\n<li>\n<code>--lint-fix</code> - apply any fixes from the linter, requires <code>-L</code> or <code>--lint</code> to be enabled. Disabled by default.</li>\n<li>\n<code>--lint-options</code> - specify options to pass to linting program. It must be a string that is JSON.parse(able).</li>\n<li>\n<code>-m</code>, <code>--timeout</code> - individual tests timeout in milliseconds (zero disables timeout). Defaults to 2 seconds.</li>\n<li>\n<code>-M</code>, <code>--context-timeout</code> - default timeouts for before, after, beforeEach and afterEach in milliseconds. Disabled by default.</li>\n<li>\n<code>-o</code>, <code>--output</code> - file to write the report to, otherwise sent to stdout.</li>\n<li>\n<code>-p</code>, <code>--default-plan-threshold</code> - sets the minimum number of assertions a test must run. Overridable with <a href=\"#plan\"><code>plan</code></a>.</li>\n<li>\n<code>-P</code>, <code>--pattern</code> - only load files with the given pattern in the name.</li>\n<li>\n<code>-r</code>, <code>--reporter</code> - the reporter used to generate the test results. Defaults to <code>console</code>. Options are:\n<ul>\n<li>\n<code>console</code> - text report.</li>\n<li>\n<code>html</code> - HTML test and code coverage report (sets <code>-c</code>).</li>\n<li>\n<code>json</code> - output results in JSON format.</li>\n<li>\n<code>junit</code> - output results in JUnit XML format.</li>\n<li>\n<code>tap</code> - TAP protocol report.</li>\n<li>\n<code>lcov</code> - output to <a href=\"http://ltp.sourceforge.net/coverage/lcov/geninfo.1.php\" rel=\"nofollow\">lcov</a> format.</li>\n<li>\n<code>clover</code> - output results in <a href=\"https://confluence.atlassian.com/display/CLOVER\" rel=\"nofollow\">Clover XML</a> format.</li>\n<li>\n<a href=\"#multiple-reporters\">Multiple Reporters</a> - See Below</li>\n<li>\n<a href=\"#custom-reporters\">Custom Reporters</a> - See Below</li>\n</ul>\n</li>\n<li>\n<code>-R</code>, <code>--retries</code> - the number of times to retry a failing test that is explicitly marked with <code>retry</code>. Defaults to <code>5</code>.</li>\n<li>\n<code>--shuffle</code> - randomize the order that test scripts are executed.  Will not work with <code>--id</code>.</li>\n<li>\n<code>--seed</code> - use this seed to randomize the order with <code>--shuffle</code>. This is useful to debug order dependent test failures.</li>\n<li>\n<code>-s</code>, <code>--silence</code> - silence test output, defaults to false.</li>\n<li>\n<code>-S</code>, <code>--sourcemaps</code> - enables sourcemap support for stack traces and code coverage, disabled by default.</li>\n<li>\n<code>-t</code>, <code>--threshold</code> - sets the minimum code test coverage percentage to 100%.</li>\n<li>\n<code>--types-test</code> - sets a single TypeScript definition test file (implies <code>-Y</code>). Use when the test directory contains other TypeScript files that should not be loaded for definition testing.</li>\n<li>\n<code>-T</code>, <code>--transform</code> - javascript file that exports an array of objects ie. <code>[ { ext: \".js\", transform: (content, filename) =&gt; { ... } } ]</code>. Note that if you use this option with -c (--coverage), then you must generate sourcemaps and pass sourcemaps option to get proper line numbers.</li>\n<li>\n<code>-v</code>, <code>--verbose</code> - verbose test output, defaults to false.</li>\n<li>\n<code>-V</code>, <code>--version</code> - display lab version information.</li>\n<li>\n<code>-Y</code>, <code>--types</code> - validate the module TypeScript types definitions. This is designed exclusively for JavaScript modules that export a TypeScript definition file.</li>\n</ul>\n<h2>\n<a id=\"methods\" class=\"anchor\" href=\"#methods\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Methods</h2>\n<h3>\n<a id=\"labscriptoptions\" class=\"anchor\" href=\"#labscriptoptions\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Lab.script([options])</code>\n</h3>\n<p>Generates a test script interface which is used to add experiments and tests, where:</p>\n<ul>\n<li>\n<code>options</code> - an optional object with the following optional keys:\n<ul>\n<li>\n<code>schedule</code> - if <code>false</code>, an automatic execution of the script is disabled. Automatic execution allows running lab test scripts directly with Node.js without having to use the CLI (e.g. <code>node test/script.js</code>). When using <strong>lab</strong> programmatically, this behavior is undesired and can be turned off by setting <code>schedule</code> to <code>false</code>. If you need to see the output with schedule disabled you should set <code>output</code> to <code>process.stdout</code>.  Defaults to <code>true</code>.</li>\n<li>\n<code>cli</code> - allows setting command line options within the script. Note that the last script file loaded wins and usage of this is recommended only for temporarily changing the execution of tests. This option is useful for code working with an automatic test engine that run tests on commits. Setting this option has no effect when not using the CLI runner. For example setting <code>cli</code> to <code>{ ids: [1] }</code> will only execute the first test loaded.</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"scriptafteroptions-action\" class=\"anchor\" href=\"#scriptafteroptions-action\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>script.after([options], action)</code>\n</h3>\n<p>Executes the provided action after the current experiment block is finished where:</p>\n<ul>\n<li>\n<code>options</code> - optional flags as describe in <a href=\"#scripttesttitle-options-test\"><code>script.test()</code></a>.</li>\n<li>\n<code>action</code> - a sync or async function using the signature <code>function(flags)</code> where:\n<ul>\n<li>\n<code>flags</code> - see <a href=\"#flags\">Flags</a>\n</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"scriptaftereach\" class=\"anchor\" href=\"#scriptaftereach\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>script.afterEach()</code>\n</h3>\n<p>Executes the provided action after each test is executed in the current experiment block where:</p>\n<ul>\n<li>\n<code>options</code> - optional flags as describe in <a href=\"#scripttesttitle-options-test\"><code>script.test()</code></a>.</li>\n<li>\n<code>action</code> - a sync or async function using the signature <code>function(flags)</code> where:\n<ul>\n<li>\n<code>flags</code> - see <a href=\"#flags\">Flags</a>\n</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"scriptbefore\" class=\"anchor\" href=\"#scriptbefore\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>script.before()</code>\n</h3>\n<p>Executes the provided action before the current experiment block is started where:</p>\n<ul>\n<li>\n<code>options</code> - optional flags as describe in <a href=\"#scripttesttitle-options-test\"><code>script.test()</code></a>.</li>\n<li>\n<code>action</code> - a sync or async function using the signature <code>function(flags)</code> where:\n<ul>\n<li>\n<code>flags</code> - see <a href=\"#flags\">Flags</a>\n</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"scriptbeforeeach\" class=\"anchor\" href=\"#scriptbeforeeach\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>script.beforeEach()</code>\n</h3>\n<p>Executes the provided action before each test is executed in the current experiment block where:</p>\n<ul>\n<li>\n<code>options</code> - optional flags as describe in <a href=\"#scripttesttitle-options-test\"><code>script.test()</code></a>.</li>\n<li>\n<code>action</code> - a sync or async function using the signature <code>function(flags)</code> where:\n<ul>\n<li>\n<code>flags</code> - see <a href=\"#flags\">Flags</a>\n</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"scriptdescribetitle-options-content\" class=\"anchor\" href=\"#scriptdescribetitle-options-content\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>script.describe(title, [options], content)</code>\n</h3>\n<p>Same as <a href=\"#scriptexperimenttitle-options-content\"><code>script.experiment()</code></a>.</p>\n<h3>\n<a id=\"scriptexperimenttitle-options-content\" class=\"anchor\" href=\"#scriptexperimenttitle-options-content\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>script.experiment(title, [options], content)</code>\n</h3>\n<p>Sets up an experiment (a group of tests) where:</p>\n<ul>\n<li>\n<code>title</code> - the experiment description.</li>\n<li>\n<code>options</code> - optional settings:\n<ul>\n<li>\n<code>skip</code> - if <code>true</code>, sets the entire experiment content to be skipped during execution. Defaults to <code>false</code>.</li>\n<li>\n<code>only</code> - if <code>true</code>, sets all other experiments to <code>skip</code>. Default to <code>false</code>.</li>\n<li>\n<code>timeout</code> - overrides the default test timeout for tests and other timed operations. Defaults to <code>2000</code>.</li>\n</ul>\n</li>\n<li>\n<code>content</code> - a function with signature <code>function()</code> which can setup other experiments or tests.</li>\n</ul>\n<h3>\n<a id=\"scriptexperimentonlytitle-options-content\" class=\"anchor\" href=\"#scriptexperimentonlytitle-options-content\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>script.experiment.only(title, [options], content)</code>\n</h3>\n<p>Same as <a href=\"#scriptexperimenttitle-options-content\"><code>script.experiment()</code></a> with the <code>only</code> option set to <code>true</code>.</p>\n<h3>\n<a id=\"scriptexperimentskiptitle-options-content\" class=\"anchor\" href=\"#scriptexperimentskiptitle-options-content\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>script.experiment.skip(title, [options], content)</code>\n</h3>\n<p>Same as <a href=\"#scriptexperimenttitle-options-content\"><code>script.experiment()</code></a> with the <code>skip</code> option set to <code>true</code>.</p>\n<h3>\n<a id=\"scriptittitle-options-test\" class=\"anchor\" href=\"#scriptittitle-options-test\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>script.it(title, [options], test)</code>\n</h3>\n<p>Same as <a href=\"#scripttesttitle-options-test\"><code>script.test()</code></a>.</p>\n<h3>\n<a id=\"scriptsuitetitle-options-content\" class=\"anchor\" href=\"#scriptsuitetitle-options-content\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>script.suite(title, [options], content)</code>\n</h3>\n<p>Same as <a href=\"#scriptexperimenttitle-options-content\"><code>script.experiment()</code></a>.</p>\n<h3>\n<a id=\"scripttesttitle-options-test\" class=\"anchor\" href=\"#scripttesttitle-options-test\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>script.test(title, [options], test)</code>\n</h3>\n<p>Sets up a test where:</p>\n<ul>\n<li>\n<code>title</code> - the test description.</li>\n<li>\n<code>options</code> - optional settings:\n<ul>\n<li>\n<code>skip</code> - if <code>true</code>, sets the entire experiment content to be skipped during execution. Defaults to <code>false</code>.</li>\n<li>\n<code>only</code> - if <code>true</code>, sets all other experiments to <code>skip</code>. Default to <code>false</code>.</li>\n<li>\n<code>timeout</code> - overrides the default test timeout for tests and other timed operations in milliseconds. Defaults to <code>2000</code>.</li>\n<li>\n<code>plan</code> - the expected number of assertions the test must execute. This setting should only be used with an assertion library that supports a <code>count()</code> function, like <a href=\"https://hapi.dev/family/code\" rel=\"nofollow\"><strong>code</strong></a>.</li>\n<li>\n<code>retry</code> - when <code>true</code> or set to a number greater than <code>0</code>, if the test fails it will be retried <code>retries</code> (defaults to <code>5</code>) number of times until it passes.</li>\n</ul>\n</li>\n<li>\n<code>test</code> - a function with signature <code>function(flags)</code> where:\n<ul>\n<li>the function can throw if the test failed.</li>\n<li>the function can return a Promise which either resolves (success) or rejects (fails).</li>\n<li>all other return value is ignored.</li>\n<li>\n<code>flags</code> - a set of test utilities described in <a href=\"#flags\">Flags</a>.</li>\n</ul>\n</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">experiment</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'my plan'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-s1\">lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'only a single assertion executes'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">plan</span>: <span class=\"pl-c1\">1</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span> <span class=\"pl-c1\">+</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"scripttestonlytitle-options-test\" class=\"anchor\" href=\"#scripttestonlytitle-options-test\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>script.test.only(title, [options], test)</code>\n</h3>\n<p>Same as calling <a href=\"#scripttesttitle-options-test\"><code>script.test()</code></a> with <code>only</code> option set to <code>true</code>.</p>\n<h3>\n<a id=\"scripttestskiptitle-options-test\" class=\"anchor\" href=\"#scripttestskiptitle-options-test\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>script.test.skip(title, [options], test)</code>\n</h3>\n<p>Same as calling <a href=\"#scripttesttitle-options-test\"><code>script.test()</code></a> with <code>skip</code> option set to <code>true</code>.</p>\n<h3>\n<a id=\"flags\" class=\"anchor\" href=\"#flags\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Flags</code>\n</h3>\n<p>The <code>test</code> function is passed a <code>flags</code> object that can be used to create notes or set a function to execute for cleanup operations after the test is complete.</p>\n<h4>\n<a id=\"context\" class=\"anchor\" href=\"#context\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>context</code>\n</h4>\n<p>An object that is passed to <code>before</code> and <code>after</code> functions in addition to tests themselves. <code>context</code> is used to set properties inside the before function that can be used by a test function later. It is meant to reduce module level variables that are set by the <code>before</code> / <code>beforeEach</code> functions. Tests aren't able to manipulate the context object for other tests.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">before</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-s1\">context</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-s1\">context</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">foo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'bar'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-s1\">lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'contains context'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-s1\">context</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">context</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">foo</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'bar'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"mustcallfunc-count\" class=\"anchor\" href=\"#mustcallfunc-count\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>mustCall(func, count)</code>\n</h4>\n<p>Sets a requirement that a function must be called a certain number of times where:</p>\n<ul>\n<li>\n<code>func</code> - the function to be called.</li>\n<li>\n<code>count</code> - the number of required invocations.</li>\n</ul>\n<p>Returns a wrapped copy of the function. After the test is complete, each <code>mustCall</code> assertion will be checked and the test will fail if any function was called the incorrect number of times.</p>\n<p>Below is an example demonstrating how to use <code>mustCall</code> to verify that <code>fn</code> is called exactly two times.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'fn must be called twice'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">flags</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-en\">fn</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">wrapped</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">flags</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mustCall</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">fn</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">wrapped</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-en\">doSomeAsyncOperation</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">wrapped</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"notenote\" class=\"anchor\" href=\"#notenote\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>note(note)</code>\n</h4>\n<p>Adds notes to the test log where:</p>\n<ul>\n<li>\n<code>note</code> - a string to be included in the console reporter at the end of the output.</li>\n</ul>\n<p>For example, if you would like to add a note with the current time, your test case may look like the following:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'attaches notes'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">flags</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span> <span class=\"pl-c1\">+</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">flags</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">note</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`The current time is <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-v\">Date</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">now</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Multiple notes can be appended for the same test case by simply calling <code>note()</code> repeatedly.</p>\n<h4>\n<a id=\"oncleanup\" class=\"anchor\" href=\"#oncleanup\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>onCleanup</code>\n</h4>\n<p>A property that can be assigned a cleanup function registered at runtime to be executed after the test completes. The cleanup function will execute even in the event of a timeout or error. Note that the cleanup function will be executed as-is without any timers. The function assigned to <code>onCleanup</code> can return a Promise that will be evaluated.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'cleanups after test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">flags</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-s1\">flags</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">onCleanup</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-en\">cleanup_logic</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span> <span class=\"pl-c1\">+</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">equal</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"onuncaughtexception\" class=\"anchor\" href=\"#onuncaughtexception\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>onUncaughtException</code>\n</h4>\n<p>A property that can be assigned an override for global exception handling. This can be used to test the code that is explicitly meant to result in uncaught exceptions.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'leaves an uncaught rejection'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">flags</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Promise</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">resolve</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-s1\">flags</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">onUncaughtException</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n            <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">an</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'I want this exception to remain uncaught in production'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-s1\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// finish the test</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-c\">// sample production code</span>\n        <span class=\"pl-en\">setTimeout</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Error</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'I want this exception to remain uncaught in production'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"onunhandledrejection\" class=\"anchor\" href=\"#onunhandledrejection\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>onUnhandledRejection</code>\n</h4>\n<p>A property that can be assigned an override function for global rejection handling. This can be used to test the code that is explicitly meant to result in unhandled rejections.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'leaves an unhandled rejection'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">flags</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Promise</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">resolve</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-s1\">flags</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">onUnhandledRejection</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n            <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">err</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">an</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">error</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'I want this rejection to remain unhandled in production'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-s1\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// finish the test</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-c\">// sample production code</span>\n        <span class=\"pl-en\">setTimeout</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n            <span class=\"pl-v\">Promise</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reject</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">Error</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'I want this rejection to remain unhandled in production'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h2>\n<a id=\"labrcjs-file\" class=\"anchor\" href=\"#labrcjs-file\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>.labrc.js</code> File</h2>\n<p><strong>lab</strong> supports a <code>.labrc.js</code> configuration file for centralizing lab settings. The <code>.labrc.js</code> file can be located in the current working directory, any directory that is the parent of the current working directory, or in the user's home directory.  The <code>.labrc.js</code> file needs to be able to be required by Node.js.  Therefore, either format it as a JSON file or with a <code>module.exports</code> that exports an object with the keys that are the settings.</p>\n<p>Below is an example of a <code>.labrc.js</code> file to enable linting and test coverage checking:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-smi\">module</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">exports</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">coverage</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">threshold</span>: <span class=\"pl-c1\">90</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">lint</span>: <span class=\"pl-c1\">true</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"setting-precedent\" class=\"anchor\" href=\"#setting-precedent\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Setting precedent</h3>\n<p>The <code>.labrc.js</code> file will override the <strong>lab</strong> default settings. Any options passed to the <strong>lab</strong> runner will override the settings found in <code>.labrc.js</code>.  For example, assume you have the following <code>.labrc.js</code> file:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-smi\">module</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">exports</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">coverage</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">threshold</span>: <span class=\"pl-c1\">100</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p>If you need to reduce the coverage threshold for a single run, you can execute <strong>lab</strong> as follows:</p>\n<div class=\"highlight highlight-source-shell\"><pre>lab -t 80</pre></div>\n<h3>\n<a id=\"available-settings\" class=\"anchor\" href=\"#available-settings\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Available settings</h3>\n<p>The <code>.labrc.js</code> file supports configuration keys that are named with the long name of the command line settings.  Therefore, if you need to specify an assert library, you would export a key named \"assert\" with the desired value.</p>\n<p>In addition, you can use the <code>paths</code> parameter to override the default test directory (i.e. <code>./test</code>):</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-smi\">module</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">exports</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">paths</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'test/lab'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p>As stated at the beginning of the document, <code>--ignore</code> parameter is an alias for <code>globals</code> option in the <code>.labrc</code> file. Therefore if you wish to ignore specific files you'll need to append a <code>globals</code> setting, <strong>not</strong> an <code>ignore</code> one, as stated on #641.</p>\n<h2>\n<a id=\"linting\" class=\"anchor\" href=\"#linting\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Linting</h2>\n<p><strong>lab</strong> uses a shareable <a href=\"http://eslint.org/\" rel=\"nofollow\">eslint</a> config, and a plugin containing several <strong>hapi</strong> specific linting rules. If you want to extend the default linter you must:</p>\n<ol>\n<li>\n<p>Add <code>@hapi/eslint-plugin-hapi</code> and <code>@hapi/eslint-config-hapi</code> as dependencies in your <code>package.json</code>. You must add both the plugin and the config because eslint treats them as peer dependencies. For more background, see <a href=\"https://github.com/eslint/eslint/issues/3458\">eslint/eslint#3458</a> and <a href=\"https://github.com/eslint/eslint/issues/2518\">eslint/eslint#2518</a>.</p>\n</li>\n<li>\n<p>In your project's eslint configuration, add <code>\"extends\": \"@hapi/eslint-config-hapi\"</code>.</p>\n</li>\n</ol>\n<p>Your project's eslint configuration will now extend the default <strong>lab</strong> configuration.</p>\n<h3>\n<a id=\"ignoring-files-in-linting\" class=\"anchor\" href=\"#ignoring-files-in-linting\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Ignoring files in linting</h3>\n<p>Since <a href=\"http://eslint.org/\" rel=\"nofollow\">eslint</a> is used to lint, you can create an <code>.eslintignore</code> containing paths to be ignored:</p>\n<pre><code>node_modules/*\n**/vendor/*.js\n</code></pre>\n<h3>\n<a id=\"only-run-linting\" class=\"anchor\" href=\"#only-run-linting\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Only run linting</h3>\n<p>In order to run linting and not to execute tests you can combine the <code>dry</code> run\nflag with the <code>lint</code> flag.</p>\n<pre><code>lab -dL\n</code></pre>\n<h2>\n<a id=\"integration-with-an-assertion-library\" class=\"anchor\" href=\"#integration-with-an-assertion-library\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Integration with an assertion library</h2>\n<p>Using the <code>--assert</code> argument allows you to integrate Lab with your favorite assertion library. Aside from <code>--assert</code> from the CLI you can change the <code>assert</code> option when executing <code>report</code>. Whatever assertion library you specify is imported and assigned to the <code>Lab.assertions</code> property. Here is an example using <code>lab --assert code</code>:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">lab</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">exports</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">lab</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">script</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> describe<span class=\"pl-kos\">,</span> it <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">lab</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// Testing shortcuts</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> expect<span class=\"pl-kos\">,</span> fail <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/code'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'expectation'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'should be able to expect'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">true</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'should be able to fail (This test should fail)'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-en\">fail</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Should fail'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<pre><code>$ lab --assert code\n</code></pre>\n<p>If you use the <a href=\"https://github.com/hapijs/code\">Code</a> assertion library Lab will let you know if you have any missing assertions. An example of this is:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'expectation'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Test should pass but get marked as having a missing expectation'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-c\">// Invalid and missing assertion - false is a method, not a property!</span>\n        <span class=\"pl-c\">// This test will pass.</span>\n        <span class=\"pl-v\">Lab</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">to</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">be</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">false</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>This is an invalid test but it will pass as the <code>.false</code> assertion was not actually called. Lab will report the number of incomplete assertions, their location in your code and return a failure of the tests.</p>\n<p>Similarly, if you use an assertion library, <strong>lab</strong> will be able to report the verbosity of your tests. This is a measure of the number of assertions divided by the number of tests. The value will be output when using the console reporter and can be helpful in determining if too many or too few assertions exist in each test. What is too many or too few assertions is entirely up to you.</p>\n<h2>\n<a id=\"debuggers\" class=\"anchor\" href=\"#debuggers\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Debuggers</h2>\n<p><strong>lab</strong> can be started with the option <code>--inspect</code> which will run it with the V8 Inspector.</p>\n<p>This debugger can be accessed using the URL that is printed in the console, or used in association with a few Chrome extensions (<a href=\"https://chrome.google.com/webstore/detail/nodejs-v8-inspector/lfnddfpljnhbneopljflpombpnkfhggl\" rel=\"nofollow\">Node.js V8 Inspector</a>, <a href=\"https://chrome.google.com/webstore/detail/nim-node-inspector-manage/gnhhdgbaldcilmgcpfddgdbkhjohddkj/related\" rel=\"nofollow\">NIM</a>, etc).</p>\n<p>As you may know, if your tests are associated with the command <code>npm test</code>, you can already run <code>npm test -- --inspect</code> to run it with the inspector and avoid creating another command. If you want to listen on a specific port for the inspector, pass <code>--inspect={port}</code>.</p>\n<p><strong>lab</strong> also has automatic support for the <a href=\"https://www.jetbrains.com/webstorm/\" rel=\"nofollow\">WebStorm</a> debugger, just start a normal debugging session on your npm test script.</p>\n<h2>\n<a id=\"multiple-reporters\" class=\"anchor\" href=\"#multiple-reporters\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Multiple Reporters</h2>\n<p>Multiple reporters can be specified by providing multiple reporter options.</p>\n<div class=\"highlight highlight-source-shell\"><pre>$ lab -r console -r html</pre></div>\n<p>If any output <code>-o</code> is provided, they must match the same number of provided reporter options. The reporters would be paired with an output based on\nthe order in which they were supplied. When specifying multiple outputs, use <code>stdout</code> to send a particular reporter to stdout.</p>\n<div class=\"highlight highlight-source-shell\"><pre>$ lab -r console -o stdout -r html -o coverage.html -r lcov -o lcov.info -r json -o data.json</pre></div>\n<p>In a <code>.labrc.js</code> file, multiple reporters and their associated output paths would be represented as follows:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-smi\">module</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">exports</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">reporter</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'console'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'html'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'lcov'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'json'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">output</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'stdout'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'coverage.html'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'lcov.info'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'data.json'</span><span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Multiple reporters of the same kind are also supported.</p>\n<div class=\"highlight highlight-source-shell\"><pre>$ lab -r console -o stdout -r console -o console.log</pre></div>\n<h2>\n<a id=\"custom-reporters\" class=\"anchor\" href=\"#custom-reporters\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Custom Reporters</h2>\n<p>If the value passed for <code>reporter</code> isn't included with Lab, it is loaded from the filesystem. If the string starts with a period (<code>'./custom-reporter'</code>), it will be loaded relative to the current working directory. If it doesn't start with a period (<code>'custom-reporter'</code>), it will be loaded from the <code>node_modules</code> directory, just like any module installed using <code>npm install</code>.</p>\n<p>Reporters must be a class with the following methods: <code>start</code>, <code>test</code> and <code>end</code>. <code>options</code> are passed to the class constructor upon initialization.</p>\n<p>See the <a href=\"lib/reporters/json.js\">json reporter</a> for a good starting point.</p>\n<h2>\n<a id=\"coverage\" class=\"anchor\" href=\"#coverage\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Coverage</h2>\n<p>Sometimes you want to disable code coverage for specific lines, and have the coverage report omit them entirely. To do so, use the <code>$lab:coverage:(off|on)$</code> comments. For example:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-c\">// There is no way to cover this in node 0.10</span>\n<span class=\"pl-c\">/* $lab:coverage:off$ */</span>\n<span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-k\">typeof</span> <span class=\"pl-s1\">value</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'symbol'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// do something with value</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-c\">/* $lab:coverage:on$ */</span></pre></div>\n<h3>\n<a id=\"coverage-bypass-stack\" class=\"anchor\" href=\"#coverage-bypass-stack\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Coverage Bypass Stack</h3>\n<p>Disabling code coverage becomes tricky when dealing with machine-generated or machine-altered code. For example, <code>babel</code> can be configured to disable coverage for generated code using the <code>auxiliaryCommentBefore</code> and <code>auxiliaryCommentAfter</code> options. The naïve approach to this uses <code>$lab:coverage:on$</code> and <code>$lab:coverage:off$</code>, but these directives overwrite any user-specified directives, so that a block where coverage should be disabled may have that coverage unintentionally re-enabled. To work around this issue, <code>lab</code> supports pushing the current code coverage bypass state onto an internal stack using the <code>$lab:coverage:push$</code> directive, and supports restoring the top of the stack using the <code>$lab:coverage:pop$</code> directive:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-c\">// There is no way to cover this in node &lt; 10.0.0</span>\n<span class=\"pl-c\">/* $lab:coverage:off$ */</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> types <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Util</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">isSet</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">types</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">types</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">isSet</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">||</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">set</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">set</span> <span class=\"pl-k\">instanceof</span> <span class=\"pl-v\">Set</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">/* $lab:coverage:on$ */</span>\n\n<span class=\"pl-c\">// When Util is imported using import and babel transpiles to cjs, babel can be</span>\n<span class=\"pl-c\">// configured to use the stack:</span>\n<span class=\"pl-c\">/* $lab:coverage:off$ */</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span>\n  types\n<span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span>\n<span class=\"pl-c\">/*$lab:coverage:push$/</span>\n<span class=\"pl-c\">/*$lab:coverage:off$*/</span>\n<span class=\"pl-s1\">_util</span>\n<span class=\"pl-c\">/*$lab:coverage:pop$/</span>\n<span class=\"pl-c\">.</span>\n<span class=\"pl-c\">/*$lab:coverage:push$/</span>\n<span class=\"pl-c\">/*$lab:coverage:off$*/</span>\n<span class=\"pl-s1\">default</span>\n<span class=\"pl-c\">/*$lab:coverage:pop$*/</span>\n<span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">isSet</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">types</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">types</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">isSet</span> <span class=\"pl-c1\">||</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">set</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">set</span> <span class=\"pl-k\">instanceof</span> <span class=\"pl-v\">Set</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">/* $lab:coverage:on$ */</span></pre></div>\n<p>Semantics:</p>\n<ul>\n<li>\n<code>$lab:coverage:push$</code> copies the current skip state to the top of the stack, and leaves it as the current state as well</li>\n<li>\n<code>$lab:coverage:pop$</code> replaces the current skip state with the top of the stack, and removes the top of the stack\n<ul>\n<li>if the stack is empty, <code>lab</code> will tell you by throwing the error <code>\"unable to pop coverage bypass stack\"</code>\n</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"excluding-paths-from-coverage-reporting\" class=\"anchor\" href=\"#excluding-paths-from-coverage-reporting\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Excluding paths from coverage reporting</h3>\n<p>The <code>--coverage-exclude</code> argument can be repeated multiple times in order to add multiple paths to exclude.  By default the <code>node_modules</code> and <code>test</code> directories are excluded.  If you want to exclude those as well as a directory named <code>public</code> you can run lab as follows:</p>\n<div class=\"highlight highlight-source-shell\"><pre>lab -c --coverage-exclude <span class=\"pl-c1\">test</span> --coverage-exclude node_modules --coverage-exclude public</pre></div>\n<h2>\n<a id=\"acknowledgements\" class=\"anchor\" href=\"#acknowledgements\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Acknowledgements</h2>\n<p><strong>lab</strong> initial code borrowed heavily from <a href=\"http://mochajs.org/\" rel=\"nofollow\">mocha</a>, including the actual code used to render the coverage report into HTML. <strong>lab</strong> coverage code was originally adapted from <a href=\"https://github.com/alex-seville/blanket\">blanket</a> which in turn uses <a href=\"https://github.com/substack/node-falafel\">falafel</a>.</p>\n",
      "intro": "## Introduction\n\n**lab** is a simple test utility for Node.js. Unlike other test utilities, lab uses only async/await features and includes everything you should expect from a modern Node.js test utility. Our goal with **lab** is to keep the execution engine as simple as possible, and not try to build an extensible framework.\n\n**lab** works best with the [**code** assertion library](https://hapi.dev/family/code) but can be used with any assertion library that throws an error when a condition isn't met.\n",
      "example": "",
      "usage": "## Usage\n\nBy default, **lab** loads all the '\\*.js' files inside the local 'test' directory and executes the tests found. To use different directories or files, pass the file or directories as arguments:\n\n```bash\n$ lab unit.js\n```\n\nTest files must require the **lab** module, and export a test script:\n\n```javascript\nconst Code = require('@hapi/code');\nconst Lab = require('@hapi/lab');\n\nconst { expect } = Code;\nconst { it } = exports.lab = Lab.script();\n\nit('returns true when 1 + 1 equals 2', () => {\n\n    expect(1 + 1).to.equal(2);\n});\n```\n\nOr\n\n```javascript\nconst Code = require('@hapi/code');\nconst Lab = require('@hapi/lab');\n\nconst { expect } = Code;\nconst lab = exports.lab = Lab.script();\n\nlab.test('returns true when 1 + 1 equals 2', () => {\n\n    expect(1 + 1).to.equal(2);\n});\n```\n\nIf a test is performing an asynchronous operation then it should use the `async` / `await` keywords or return a Promise. For example:\n\n```javascript\nlab.test('config file has correct value', async () => {\n\n    const file = await fs.readFile('config');\n    expect(file.toString()).to.contain('something');\n});\n```\n\nTests can be organized into experiments:\n\n```javascript\nlab.experiment('math', () => {\n\n    lab.test('returns true when 1 + 1 equals 2', () => {\n\n        expect(1 + 1).to.equal(2);\n    });\n});\n```\n\nIf you need to perform some setup operations before or after executing the tests inside an experiment, the `before()` and `after()` methods can be used. To execute code before or after each test in an experiment, use `beforeEach()` and `afterEach()`.\n\n```javascript\nlab.experiment('math', () => {\n\n    lab.before(() => {\n\n        return new Promise((resolve) => {\n\n            // Wait 1 second\n            setTimeout(() => {\n\n                resolve();\n            }, 1000);\n        });\n    });\n\n    lab.beforeEach(() => {\n\n        // Run before every single test\n    });\n\n    lab.test('returns true when 1 + 1 equals 2', () => {\n\n        expect(1 + 1).to.equal(2);\n    });\n});\n\n```\n\n`test()`, `before()`, `beforeEach()`, `after()` and `afterEach()` also support returning promises just as tests do:\n\n```javascript\nlab.experiment('math', () => {\n\n    lab.before(() => {\n\n        return aFunctionReturningAPromise();\n    });\n\n    lab.test('returns true when 1 + 1 equals 2', () => {\n\n        return aFunctionReturningAPromise()\n            .then((aValue) => {\n\n                expect(aValue).to.equal(expectedValue);\n            });\n    });\n});\n```\n\nBoth `test()` and `experiment()` accept an optional `options` argument which must be an object with the following optional keys:\n- `timeout` - set a test or experiment specific timeout in milliseconds. Defaults to the global timeout (`2000`ms or the value of `-m`).\n- `skip` - skip execution. When used on an experiment, all children will be skipped - even if they are marked with `only`.\n- `only` - marks all other tests or experiments with `skip`.\n\nYou can also append `.only(…)` or `.skip(…)` to `test` and `experiment` instead of using `options`:\n\n```javascript\nlab.experiment('with only', () => {\n\n    lab.test.only('only this test will run', () => {\n\n        expect(1 + 1).to.equal(2);\n    });\n\n    lab.test('another test that will not be executed', () => {});\n});\n```\n",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Node test utility.",
    "forks": 178,
    "stars": 731,
    "date": "2020-09-02T15:58:39Z",
    "updated": "Wed Sep 02 2020",
    "link": "https://github.com/hapijs/lab"
  },
  "mimos": {
    "name": "mimos",
    "versions": [
      {
        "name": "5.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "5.0.0"
    ],
    "api": true,
    "5.0.0": {
      "menu": "- [`new Mimos()`](#new-mimosoptions)\n- [`mimos.path()`](#mimospathpath)\n- [`mimos.type()`](#mimostypetype)\n- [Override Example](#override-example)",
      "api": "<p>Mimos is a convenience class for retrieving mime information objects.</p>\n<h3>\n<a id=\"new-mimosoptions\" class=\"anchor\" href=\"#new-mimosoptions\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>new Mimos([options])</code>\n</h3>\n<p>Creates a new Mimos object where:</p>\n<ul>\n<li>\n<code>[options]</code> - an option object the following keys\n<ul>\n<li>\n<code>[override]</code> - an object hash that is merged into the built in mime information specified <a href=\"https://github.com/jshttp/mime-db\">here</a>. Each key value pair represents a single mime object. Each override value should follow this schema:\n<ul>\n<li>\n<code>key</code> - the key is the lower-cased correct mime-type. (Ex. \"application/javascript\").</li>\n<li>\n<code>value</code> - the value should an object following the specifications outlined <a href=\"https://github.com/jshttp/mime-db#data-structure\">here</a>. Additional values include:\n<ul>\n<li>\n<code>type</code> - specify the <code>type</code> value of result objects, defaults to <code>key</code>. See the example below for more clarification.</li>\n<li>\n<code>predicate</code> - method with signature <code>function(mime)</code> when this mime type is found in the database, this function will run. This allows you make customizations to <code>mime</code> based on developer criteria.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"mimospathpath\" class=\"anchor\" href=\"#mimospathpath\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>mimos.path(path)</code>\n</h3>\n<p>Returns mime object where:</p>\n<ul>\n<li>\n<code>path</code> path to file including the file extension. Uses the <code>extension</code> values of the mime objects for lookup.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">mimos</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Mimos</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">mime</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">mimos</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">path</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/static/public/app.js'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// mime</span>\n<span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">{</span>\n<span class=\"pl-c\">  source: 'iana',</span>\n<span class=\"pl-c\">  charset: 'UTF-8',</span>\n<span class=\"pl-c\">  compressible: true,</span>\n<span class=\"pl-c\">  extensions: [ 'js' ],</span>\n<span class=\"pl-c\">  type: 'application/javascript'</span>\n<span class=\"pl-c\">}</span>\n<span class=\"pl-c\">*/</span></pre></div>\n<h3>\n<a id=\"mimostypetype\" class=\"anchor\" href=\"#mimostypetype\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>mimos.type(type)</code>\n</h3>\n<p>Returns mime object where:</p>\n<ul>\n<li>\n<code>type</code> the content-type to find mime information about. Uses the <code>type</code> values of the mime objects for lookup.</li>\n</ul>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">mimos</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Mimos</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">mime</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">mimos</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">type</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'text/plain'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// mime</span>\n<span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">{</span>\n<span class=\"pl-c\">  source: 'iana',</span>\n<span class=\"pl-c\">  compressible: true,</span>\n<span class=\"pl-c\">  extensions: ['txt', 'text', 'conf', 'def', 'list', 'log', 'in', 'ini'],</span>\n<span class=\"pl-c\">  type: 'text/plain'</span>\n<span class=\"pl-c\">}</span>\n<span class=\"pl-c\">*/</span></pre></div>\n<h3>\n<a id=\"override-example\" class=\"anchor\" href=\"#override-example\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Override Example</h3>\n<p>In certain situations, it can be helpful to override the built in mime type information. The optional argument to the Mimos constructor is used to override and add mime information. Below is an example to help understand how this works.</p>\n<div class=\"highlight highlight-source-js\"><pre>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">options</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">override</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s\">'node/module'</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">source</span>: <span class=\"pl-s\">'iana'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">compressible</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">extensions</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'node'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'module'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'npm'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'node/module'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-s\">'application/javascript'</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">source</span>: <span class=\"pl-s\">'iana'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">charset</span>: <span class=\"pl-s\">'UTF-8'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">compressible</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">extensions</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'js'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'javascript'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'text/javascript'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-s\">'text/html'</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-en\">predicate</span>: <span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">mime</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">someCondition</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n                    <span class=\"pl-s1\">mime</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">foo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'test'</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-kos\">}</span>\n                <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>\n                    <span class=\"pl-s1\">mime</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">foo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'bar'</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-kos\">}</span>\n                <span class=\"pl-k\">return</span> <span class=\"pl-s1\">mime</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">mimos</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Mimos</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">options</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dir</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">mimos</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">path</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'./node_modules/mimos.module'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">{</span>\n<span class=\"pl-c\">  source: 'iana',</span>\n<span class=\"pl-c\">  compressible: true,</span>\n<span class=\"pl-c\">  extensions: ['node', 'module', 'npm'],</span>\n<span class=\"pl-c\">  type: 'node/module'</span>\n<span class=\"pl-c\">}</span>\n<span class=\"pl-c\">*/</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dir</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">mimos</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">type</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'application/javascript'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">Note: even though we asked for type 'application/javascript', the type value is 'text/javascript' because of the override. Always use the proper content-type for retrieval.</span>\n<span class=\"pl-c\">{</span>\n<span class=\"pl-c\">  source: 'iana',</span>\n<span class=\"pl-c\">  charset: 'UTF-8',</span>\n<span class=\"pl-c\">  compressible: true,</span>\n<span class=\"pl-c\">  extensions: ['js', 'javascript'],</span>\n<span class=\"pl-c\">  type: 'text/javascript'</span>\n<span class=\"pl-c\">}</span>\n<span class=\"pl-c\">*/</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dir</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">mimos</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">type</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'text/html'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">someCondition is true:</span>\n<span class=\"pl-c\">{</span>\n<span class=\"pl-c\">  source: 'iana',</span>\n<span class=\"pl-c\">  compressible: true,</span>\n<span class=\"pl-c\">  extensions: ['html','htm'],</span>\n<span class=\"pl-c\">  type: 'test/html',</span>\n<span class=\"pl-c\">  foo: 'test'</span>\n<span class=\"pl-c\">}</span>\n<span class=\"pl-c\"></span>\n<span class=\"pl-c\">someCondition is false:</span>\n<span class=\"pl-c\">{</span>\n<span class=\"pl-c\">  source: 'iana',</span>\n<span class=\"pl-c\">  compressible: true,</span>\n<span class=\"pl-c\">  extensions: ['html','htm'],</span>\n<span class=\"pl-c\">  type: 'test/html',</span>\n<span class=\"pl-c\">  foo: 'bar'</span>\n<span class=\"pl-c\">}</span>\n<span class=\"pl-c\">*/</span></pre></div>\n",
      "intro": "",
      "example": "",
      "usage": "## Usage\n",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Mime database interface.",
    "forks": 11,
    "stars": 15,
    "date": "2020-07-21T01:16:38Z",
    "updated": "Mon Jul 20 2020",
    "link": "https://github.com/hapijs/mimos"
  },
  "nes": {
    "name": "nes",
    "versions": [
      {
        "name": "12.0.3",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "12.0.3"
    ],
    "api": true,
    "12.0.3": {
      "menu": "- [Protocol](#protocol)\n- [Examples](#examples)\n  - [Route invocation](#route-invocation)\n    - [Server](#server)\n    - [Client](#client)\n  - [Subscriptions](#subscriptions)\n    - [Server](#server-1)\n    - [Client](#client-1)\n  - [Broadcast](#broadcast)\n    - [Server](#server-2)\n    - [Client](#client-2)\n  - [Route authentication](#route-authentication)\n    - [Server](#server-3)\n    - [Client](#client-3)\n  - [Subscription filter](#subscription-filter)\n    - [Server](#server-4)\n    - [Client](#client-4)\n  - [Browser Client](#browser-client)\n- [Registration](#registration)\n- [Server](#server-5)\n  - [`await server.broadcast()`](#await-serverbroadcastmessage-options)\n  - [`server.subscription()`](#serversubscriptionpath-options)\n  - [`await server.publish()`](#await-serverpublishpath-message-options)\n  - [`await server.eachSocket()`](#await-servereachsocketeach-options)\n- [Socket](#socket)\n  - [`socket.id`](#socketid)\n  - [`socket.app`](#socketapp)\n  - [`socket.auth`](#socketauth)\n  - [`socket.server`](#socketserver)\n  - [`socket.connection`](#socketconnection)\n  - [`socket.disconnect()`](#socketdisconnect)\n  - [`socket.isOpen()`](#socketisopen)\n  - [`await socket.send()`](#await-socketsendmessage)\n  - [`await socket.publish()`](#await-socketpublishpath-message)\n  - [`await socket.revoke()`](#await-socketrevokepath-message-options)\n- [Request](#request)\n  - [`request.socket`](#requestsocket)\n- [Client](#client-5)\n  - [`new Client()`](#new-clienturl-options)\n  - [`client.onError`](#clientonerror)\n  - [`client.onConnect`](#clientonconnect)\n  - [`client.onDisconnect`](#clientondisconnect)\n  - [`client.onHeartbeatTimeout`](#clientonheartbeattimeout)\n  - [`client.onUpdate`](#clientonupdate)\n  - [`await client.connect()`](#await-clientconnectoptions)\n  - [`await client.disconnect()`](#await-clientdisconnect)\n  - [`client.id`](#clientid)\n  - [`await client.request()`](#await-clientrequestoptions)\n  - [`await client.message()`](#await-clientmessagemessage)\n  - [`await client.subscribe()`](#await-clientsubscribepath-handler)\n  - [`await client.unsubscribe()`](#await-clientunsubscribepath-handler)\n  - [`client.subscriptions()`](#clientsubscriptions)\n  - [`client.overrideReconnectionAuth()`](#clientoverridereconnectionauthauth)\n  - [`await client.reauthenticate()`](#await-clientreauthenticateauth)\n  - [Errors](#errors)",
      "api": "<h2>\n<a id=\"protocol\" class=\"anchor\" href=\"#protocol\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Protocol</h2>\n<p>The <strong>nes</strong> protocol is described in the <a href=\"https://github.com/hapijs/nes/blob/master/PROTOCOL.md\">Protocol documentation</a>.</p>\n<h2>\n<a id=\"examples\" class=\"anchor\" href=\"#examples\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Examples</h2>\n<h3>\n<a id=\"route-invocation\" class=\"anchor\" href=\"#route-invocation\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Route invocation</h3>\n<h4>\n<a id=\"server\" class=\"anchor\" href=\"#server\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Server</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Nes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/nes'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Nes</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/h'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">config</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">id</span>: <span class=\"pl-s\">'hello'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-en\">handler</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n                <span class=\"pl-k\">return</span> <span class=\"pl-s\">'world!'</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"client\" class=\"anchor\" href=\"#client\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Client</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Nes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/nes'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">var</span> <span class=\"pl-s1\">client</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Nes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Client</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'ws://localhost'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">client</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">connect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">client</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">request</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'hello'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>  <span class=\"pl-c\">// Can also request '/h'</span>\n    <span class=\"pl-c\">// payload -&gt; 'world!'</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"subscriptions\" class=\"anchor\" href=\"#subscriptions\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Subscriptions</h3>\n<h4>\n<a id=\"server-1\" class=\"anchor\" href=\"#server-1\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Server</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Nes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/nes'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Nes</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">subscription</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/item/{id}'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">publish</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/item/5'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-c1\">5</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">status</span>: <span class=\"pl-s\">'complete'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">publish</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/item/6'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-c1\">6</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">status</span>: <span class=\"pl-s\">'initial'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"client-1\" class=\"anchor\" href=\"#client-1\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Client</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Nes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/nes'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">client</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Nes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Client</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'ws://localhost'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">client</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">connect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-en\">handler</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">update</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">flags</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-c\">// update -&gt; { id: 5, status: 'complete' }</span>\n        <span class=\"pl-c\">// Second publish is not received (doesn't match)</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">client</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">subscribe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/item/5'</span><span class=\"pl-kos\">,</span> <span class=\"pl-en\">handler</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"broadcast\" class=\"anchor\" href=\"#broadcast\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Broadcast</h3>\n<h4>\n<a id=\"server-2\" class=\"anchor\" href=\"#server-2\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Server</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Nes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/nes'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Nes</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">broadcast</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'welcome!'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"client-2\" class=\"anchor\" href=\"#client-2\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Client</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Nes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/nes'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">client</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Nes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Client</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'ws://localhost'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">client</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">connect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">client</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">onUpdate</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">update</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-c\">// update -&gt; 'welcome!'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"route-authentication\" class=\"anchor\" href=\"#route-authentication\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Route authentication</h3>\n<h4>\n<a id=\"server-3\" class=\"anchor\" href=\"#server-3\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Server</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Basic</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/basic'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Bcrypt</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'bcrypt'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Nes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/nes'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-v\">Basic</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Nes</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-c\">// Set up HTTP Basic authentication</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">users</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">john</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">username</span>: <span class=\"pl-s\">'john'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">password</span>: <span class=\"pl-s\">'$2a$10$iqJSHD.BGr0E2IxQwYgJmeP3NvhPrXAeLSaGCj6IR/XU5QtjVu5Tm'</span><span class=\"pl-kos\">,</span>   <span class=\"pl-c\">// 'secret'</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'John Doe'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">id</span>: <span class=\"pl-s\">'2133d32a'</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-en\">validate</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">username</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">password</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">user</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">users</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">username</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span>!<span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">isValid</span>: <span class=\"pl-c1\">false</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">isValid</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-v\">Bcrypt</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">compare</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">password</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">password</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">const</span>  <span class=\"pl-s1\">credentials</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span> isValid<span class=\"pl-kos\">,</span> credentials <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">strategy</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'simple'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'basic'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> validate <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-c\">// Configure route with authentication</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/h'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">config</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">id</span>: <span class=\"pl-s\">'hello'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-en\">handler</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n                <span class=\"pl-k\">return</span> <span class=\"pl-s\">`Hello <span class=\"pl-s1\"><span class=\"pl-kos\">${</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">credentials</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-kos\">}</span></span>`</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"client-3\" class=\"anchor\" href=\"#client-3\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Client</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Nes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/nes'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">client</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Nes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Client</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'ws://localhost'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">client</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">connect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">auth</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">headers</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">authorization</span>: <span class=\"pl-s\">'Basic am9objpzZWNyZXQ='</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">client</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">request</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'hello'</span><span class=\"pl-kos\">)</span>  <span class=\"pl-c\">// Can also request '/h'</span>\n    <span class=\"pl-c\">// payload -&gt; 'Hello John Doe'</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"subscription-filter\" class=\"anchor\" href=\"#subscription-filter\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Subscription filter</h3>\n<h4>\n<a id=\"server-4\" class=\"anchor\" href=\"#server-4\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Server</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Basic</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/basic'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Bcrypt</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'bcrypt'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Nes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/nes'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-v\">Basic</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Nes</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-c\">// Set up HTTP Basic authentication</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">users</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">john</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">username</span>: <span class=\"pl-s\">'john'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">password</span>: <span class=\"pl-s\">'$2a$10$iqJSHD.BGr0E2IxQwYgJmeP3NvhPrXAeLSaGCj6IR/XU5QtjVu5Tm'</span><span class=\"pl-kos\">,</span>   <span class=\"pl-c\">// 'secret'</span>\n            <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'John Doe'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">id</span>: <span class=\"pl-s\">'2133d32a'</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-en\">validate</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">username</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">password</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">user</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">users</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">username</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span>!<span class=\"pl-s1\">user</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">isValid</span>: <span class=\"pl-c1\">false</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">isValid</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-v\">Bcrypt</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">compare</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">password</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">password</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">const</span>  <span class=\"pl-s1\">credentials</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">id</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s1\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">name</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span> isValid<span class=\"pl-kos\">,</span> credentials <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">auth</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">strategy</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'simple'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'basic'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'required'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> validate <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-c\">// Set up subscription</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">subscription</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/items'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-en\">filter</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">path</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">message</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">options</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n            <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">message</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">updater</span> !== <span class=\"pl-s1\">options</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">credentials</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">username</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">publish</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/items'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-c1\">5</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">status</span>: <span class=\"pl-s\">'complete'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">updater</span>: <span class=\"pl-s\">'john'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">publish</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/items'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-c1\">6</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">status</span>: <span class=\"pl-s\">'initial'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">updater</span>: <span class=\"pl-s\">'steve'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"client-4\" class=\"anchor\" href=\"#client-4\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Client</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Nes</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/nes'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">client</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Nes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Client</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'ws://localhost'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// Authenticate as 'john'</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">client</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">connect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">auth</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">headers</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">authorization</span>: <span class=\"pl-s\">'Basic am9objpzZWNyZXQ='</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-en\">handler</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">update</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">flags</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-c\">// First publish is not received (filtered due to updater key)</span>\n        <span class=\"pl-c\">// update -&gt; { id: 6, status: 'initial', updater: 'steve' }</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">client</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">subscribe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/items'</span><span class=\"pl-kos\">,</span> <span class=\"pl-en\">handler</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"browser-client\" class=\"anchor\" href=\"#browser-client\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Browser Client</h3>\n<p>When you <code>require('@hapi/nes')</code> it loads the full module and adds a lot of extra code that is not needed\nfor the browser. The browser will only need the <strong>nes</strong> client. If you are using CommonJS you can\nload the client with <code>require('@hapi/nes/lib/client')</code>.</p>\n<h2>\n<a id=\"registration\" class=\"anchor\" href=\"#registration\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Registration</h2>\n<p>The <strong>nes</strong> plugin uses the standard <strong>hapi</strong> registration process using the <code>server.register()</code>\nmethod. The plugin accepts the following optional registration options:</p>\n<ul>\n<li>\n<code>onConnection</code> - a function with the signature <code>function(socket)</code> invoked for each incoming client\nconnection where:\n<ul>\n<li>\n<code>socket</code> - the <a href=\"#socket\"><code>Socket</code></a> object of the incoming connection.</li>\n</ul>\n</li>\n<li>\n<code>onDisconnection</code> - a function with the signature <code>function(socket)</code> invoked for each incoming client\nconnection on disconnect where:\n<ul>\n<li>\n<code>socket</code> - the <a href=\"#socket\"><code>Socket</code></a> object of the connection.</li>\n</ul>\n</li>\n<li>\n<code>onMessage</code> - a function with the signature <code>async function(socket, message)</code> used to receive custom\nclient messages (when the client calls <a href=\"#clientmessagedata\"><code>client.message()</code></a>) where:\n<ul>\n<li>\n<code>socket</code> - the <a href=\"#socket\"><code>Socket</code></a> object of the message source.</li>\n<li>\n<code>message</code> - the message sent by the client.</li>\n<li>the function may return a response to the client.</li>\n</ul>\n</li>\n<li>\n<code>auth</code> - optional plugin authentication options with the following supported values:\n<ul>\n<li>\n<code>false</code> - no client authentication supported.</li>\n<li>an object with the following optional keys:\n<ul>\n<li>\n<code>type</code> - the type of authentication flow supported by the server. Each type has a very different\nsecurity profile. The following types are supported:\n<ul>\n<li>\n<code>'direct'</code> - the plugin configures an internal authentication endpoint which is only called\ninternally by the plugin when the client provides its authentication credentials (or by\npassing an <code>auth</code> option to <a href=\"#await-clientconnectoptions\"><code>client.connect()</code></a>). The\nendpoint returns a copy of the credentials object (along with any artifacts) to the plugin\nwhich is then used for all subsequent client requests and subscriptions. This type requires\nexposing the underlying credentials to the application. Note that if the authentication scheme\nuses the HTTP request method (e.g. <a href=\"https://github.com/hueniverse/hawk\">hawk</a> or\n<a href=\"https://github.com/hueniverse/oz\">oz</a>) you need to use <code>'auth'</code> as the value (and\nnot <code>'GET'</code>). This is the default value.</li>\n<li>\n<code>'cookie'</code> - the plugin configures a public authentication endpoint which must be called\nby the client application manually before it calls <a href=\"#await-clientconnectoptions\"><code>client.connect()</code></a>.\nWhen the endpoint is called with valid credentials, it sets a cookie with the provided\n<code>name</code> which the browser then transmits back to the server when the WebSocket connection\nis made. This type removes the need to expose the authentication credentials to the\nJavaScript layer but requires an additional round trip before establishing a client\nconnection.</li>\n<li>\n<code>'token'</code> - the plugin configures a public authentication endpoint which must be called\nby the client application manually before it calls <a href=\"#await-clientconnectoptions\"><code>client.connect()</code></a>.\nWhen the endpoint is called with valid credentials, it returns an encrypted authentication\ntoken which the client can use to authenticate the connection by passing an <code>auth</code> option\nto <a href=\"#await-clientconnectoptions\"><code>client.connect()</code></a> with the token. This type is useful\nwhen the client-side application needs to manage its credentials differently than relying\non cookies (e.g. non-browser clients).</li>\n</ul>\n</li>\n<li>\n<code>endpoint</code> - the HTTP path of the authentication endpoint. Note that even though the <code>'direct'</code>\ntype does not exposes the endpoint, it is still created internally and registered using the\nprovided path. Change it only if the default path creates a conflict. Defaults to <code>'/nes/auth'</code>.</li>\n<li>\n<code>id</code> - the authentication endpoint identifier. Change it only if the default id creates a conflict.\nDefaults to <code>nes.auth</code>.</li>\n<li>\n<code>route</code> - the <strong>hapi</strong> route <code>config.auth</code> settings. The authentication endpoint must be\nconfigured with at least one authentication strategy which the client is going to use to\nauthenticate. The <code>route</code> value must be set to a valid value supported by the <strong>hapi</strong> route\n<code>auth</code> configuration. Defaults to the default authentication strategy if one is present,\notherwise no authentication will be possible (clients will fail to authenticate).</li>\n<li>\n<code>password</code> - the password used by the <a href=\"https://github.com/hueniverse/iron\"><strong>iron</strong></a> module\nto encrypt the cookie or token values. If no password is provided, one is automatically\ngenerated. However, the password will change every time the process is restarted (as well\nas generate different results on a distributed system). It is recommended that a password\nis manually set and managed by the application.</li>\n<li>\n<code>iron</code> - the settings used by the <a href=\"https://github.com/hueniverse/iron\"><strong>iron</strong></a> module.\nDefaults to the <strong>iron</strong> defaults.</li>\n<li>\n<code>cookie</code> - the cookie name when using type <code>'cookie'</code>. Defaults to <code>'nes'</code>.</li>\n<li>\n<code>isSecure</code> - the cookie secure flag when using type <code>'cookie'</code>. Defaults to <code>true</code>.</li>\n<li>\n<code>isHttpOnly</code> - the cookie HTTP only flag when using type <code>'cookie'</code>. Defaults to <code>true</code>.</li>\n<li>\n<code>path</code> - the cookie path when using type <code>'cookie'</code>. Defaults to <code>'/'</code>.</li>\n<li>\n<code>domain</code> - the cookie domain when using type <code>'cookie'</code>. Defaults to no domain.</li>\n<li>\n<code>ttl</code> - the cookie expiration milliseconds when using type <code>'cookie'</code>. Defaults to current\nsession only.</li>\n<li>\n<code>index</code> - if <code>true</code>, authenticated socket with <code>user</code> property in <code>credentials</code> are mapped\nfor usage in <a href=\"#serverbroadcastmessage-options\"><code>server.broadcast()</code></a> calls. Defaults to <code>false</code>.</li>\n<li>\n<code>timeout</code> - number of milliseconds after which a new connection is disconnected if authentication\nis required but the connection has not yet sent a hello message. No timeout if set to <code>false</code>.\nDefaults to <code>5000</code> (5 seconds).</li>\n<li>\n<code>maxConnectionsPerUser</code> - if specified, limits authenticated users to a maximum number of\nclient connections. Requires the <code>index</code> option enabled. Defaults to <code>false</code>.</li>\n<li>\n<code>minAuthVerifyInterval</code> - if specified, waits at least the specificed number of milliseconds\nbetween calls to <a href=\"https://hapijs.com/api#-await-serverauthverifyrequest\" rel=\"nofollow\"><code>await server.auth.verify()</code></a>\nto check if credentials are still valid. Cannot be shorter than <code>heartbeat.interval</code>.\nDefaults to <code>heartbeat.interval</code> or <code>15000</code> if <code>heartbeat</code> is disabled.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>headers</code> - an optional array of header field names to include in server responses to the client.\nIf set to <code>'*'</code> (without an array), allows all headers. Defaults to <code>null</code> (no headers).</li>\n<li>\n<code>payload</code> - optional message payload settings where:\n<ul>\n<li>\n<code>maxChunkChars</code> - the maximum number of characters (after the full protocol object is converted\nto a string using <code>JSON.stringify()</code>) allowed in a single WebSocket message. This is important\nwhen using the protocol over a slow network (e.g. mobile) with large updates as the transmission\ntime can exceed the timeout or heartbeat limits which will cause the client to disconnect.\nDefaults to <code>false</code> (no limit).</li>\n</ul>\n</li>\n<li>\n<code>heartbeat</code> - configures connection keep-alive settings where value can be:\n<ul>\n<li>\n<code>false</code> - no heartbeats.</li>\n<li>an object with:\n<ul>\n<li>\n<code>interval</code> - time interval between heartbeat messages in milliseconds. Defaults to <code>15000</code>\n(15 seconds).</li>\n<li>\n<code>timeout</code> - timeout in milliseconds after a heartbeat is sent to the client and before the\nclient is considered disconnected by the server. Defaults to <code>5000</code> (5 seconds).</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>maxConnections</code> - if specified, limits the number of simultaneous client connections. Defaults to\n<code>false</code>.</li>\n<li>\n<code>origin</code> - an origin string or an array of origin strings incoming client requests must match for\nthe connection to be permitted. Defaults to no origin validation.</li>\n</ul>\n<h2>\n<a id=\"server-5\" class=\"anchor\" href=\"#server-5\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Server</h2>\n<p>The plugin decorates the server with a few new methods for interacting with the incoming WebSocket\nconnections.</p>\n<h3>\n<a id=\"await-serverbroadcastmessage-options\" class=\"anchor\" href=\"#await-serverbroadcastmessage-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await server.broadcast(message, [options])</code>\n</h3>\n<p>Sends a message to all connected clients where:</p>\n<ul>\n<li>\n<code>message</code> - the message sent to the clients. Can be any type which can be safely converted to\nstring using <code>JSON.stringify()</code>.</li>\n<li>\n<code>options</code> - optional object with the following:\n<ul>\n<li>\n<code>user</code> - optional user filter. When provided, the message will be sent only to authenticated\nsockets with <code>credentials.user</code> equal to  <code>user</code>. Requires the <code>auth.index</code> options to be\nconfigured to <code>true</code>.</li>\n</ul>\n</li>\n</ul>\n<p>Note that in a multi server deployment, only the client connected to the current server will receive\nthe message.</p>\n<h3>\n<a id=\"serversubscriptionpath-options\" class=\"anchor\" href=\"#serversubscriptionpath-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>server.subscription(path, [options])</code>\n</h3>\n<p>Declares a subscription path client can subscribe to where:</p>\n<ul>\n<li>\n<code>path</code> - an HTTP-like path. The path must begin with the <code>'/'</code> character. The path may contain\npath parameters as supported by the <strong>hapi</strong> route path parser.</li>\n<li>\n<code>options</code> - an optional object where:\n<ul>\n<li>\n<code>filter</code> - a publishing filter function for making per-client connection decisions about which\nmatching publication update should be sent to which client. The function uses the signature\n<code>async function(path, message, options)</code> where:\n<ul>\n<li>\n<code>path</code> - the path of the published update. The path is provided in case the subscription\ncontains path parameters.</li>\n<li>\n<code>message</code> - the message being published.</li>\n<li>\n<code>options</code> - additional information about the subscription and client:\n<ul>\n<li>\n<code>socket</code> - the current socket being published to.</li>\n<li>\n<code>credentials</code> - the client credentials if authenticated.</li>\n<li>\n<code>params</code> - the parameters parsed from the publish message path if the subscription\npath contains parameters.</li>\n<li>\n<code>internal</code> - the <code>internal</code> options data passed to the publish call, if defined.</li>\n</ul>\n</li>\n<li>the function must return a value of (or a promise that resolves into):\n<ul>\n<li>\n<code>true</code> - to proceed sending the message.</li>\n<li>\n<code>false</code> - to skip sending the message.</li>\n<li>\n<code>{ override }</code> - an override <code>message</code> to send to this <code>socket</code> instead of the\npublished one. Note that if you want to modify <code>message</code>, you must clone it first or\nthe changes will apply to all other sockets.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>auth</code> - the subscription authentication options with the following supported values:\n<ul>\n<li>\n<code>false</code> - no authentication required to subscribe.</li>\n<li>a configuration object with the following optional keys:\n<ul>\n<li>\n<code>mode</code> - same as the <strong>hapi</strong> route auth modes:\n<ul>\n<li>\n<code>'required'</code> - authentication is required. This is the default value.</li>\n<li>\n<code>'optional'</code> - authentication is optional.</li>\n</ul>\n</li>\n<li>\n<code>scope</code> - a string or array of string of authentication scope as supported by the\n<strong>hapi</strong> route authenticate configuration.</li>\n<li>\n<code>entity</code> - the required credentials type as supported by the <strong>hapi</strong> route\nauthentication configuration:\n<ul>\n<li><code>'user'</code></li>\n<li><code>'app'</code></li>\n<li><code>'any'</code></li>\n</ul>\n</li>\n<li>\n<code>index</code> - if <code>true</code>, authenticated socket with <code>user</code> property in <code>credentials</code> are\nmapped for usage in <a href=\"#await-socketpublishpath-message\"><code>server.publish()</code></a> calls.\nDefaults to <code>false</code>.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>onSubscribe</code> - a method called when a client subscribes to this subscription endpoint using\nthe signature <code>async function(socket, path, params)</code> where:\n<ul>\n<li>\n<code>socket</code> - the <a href=\"#socket\"><code>Socket</code></a> object of the incoming connection.</li>\n<li>\n<code>path</code> - the path the client subscribed to</li>\n<li>\n<code>params</code> - the parameters parsed from the subscription request path if the subscription\npath definition contains parameters.</li>\n</ul>\n</li>\n<li>\n<code>onUnsubscribe</code> - a method called when a client unsubscribes from this subscription endpoint\nusing the signature <code>async function(socket, path, params)</code> where:\n<ul>\n<li>\n<code>socket</code> - the <a href=\"#socket\"><code>Socket</code></a> object of the incoming connection.</li>\n<li>\n<code>path</code> - Path of the unsubscribed route.</li>\n<li>\n<code>params</code> - the parameters parsed from the subscription request path if the subscription\npath definition contains parameters.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"await-serverpublishpath-message-options\" class=\"anchor\" href=\"#await-serverpublishpath-message-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await server.publish(path, message, [options])</code>\n</h3>\n<p>Sends a message to all the subscribed clients where:</p>\n<ul>\n<li>\n<code>path</code> - the subscription path. The path is matched first against the available subscriptions\nadded via <code>server.subscription()</code> and then against the specific path provided by each client\nat the time of registration (only matter when the subscription path contains parameters). When\na match is found, the subscription <code>filter</code> function is called (if present) to further filter\nwhich client should receive which update.</li>\n<li>\n<code>message</code> - the message sent to the clients. Can be any type which can be safely converted to\nstring using <code>JSON.stringify()</code>.</li>\n<li>\n<code>options</code> - optional object that may include\n<ul>\n<li>\n<code>internal</code> - Internal data that is passed to <code>filter</code> and may be used to filter messages\non data that is not sent to the client.</li>\n<li>\n<code>user</code> - optional user filter. When provided, the message will be sent only to authenticated\nsockets with <code>credentials.user</code> equal to  <code>user</code>. Requires the subscription <code>auth.index</code>\noptions to be configured to <code>true</code>.</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"await-servereachsocketeach-options\" class=\"anchor\" href=\"#await-servereachsocketeach-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await server.eachSocket(each, [options])</code>\n</h3>\n<p>Iterates over all connected sockets, optionally filtering on those that have subscribed to\na given subscription. This operation is synchronous.</p>\n<ul>\n<li>\n<code>each</code> - Iteration method in the form <code>async function(socket)</code>.</li>\n<li>\n<code>options</code> - Optional options object\n<ul>\n<li>\n<code>subscription</code> - When set to a string path, limits the results to sockets that are\nsubscribed to that path.</li>\n<li>\n<code>user</code> - optional user filter. When provided, the <code>each</code> method will be invoked with\nauthenticated sockets with <code>credentials.user</code> equal to  <code>user</code>. Requires the subscription\n<code>auth.index</code> options to be configured to <code>true</code>.</li>\n</ul>\n</li>\n</ul>\n<h2>\n<a id=\"socket\" class=\"anchor\" href=\"#socket\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Socket</h2>\n<p>An object representing a client connection.</p>\n<h3>\n<a id=\"socketid\" class=\"anchor\" href=\"#socketid\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>socket.id</code>\n</h3>\n<p>A unique socket identifier.</p>\n<h3>\n<a id=\"socketapp\" class=\"anchor\" href=\"#socketapp\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>socket.app</code>\n</h3>\n<p>An object used to store application state per socket. Provides a safe namespace to avoid conflicts\nwith the socket methods.</p>\n<h3>\n<a id=\"socketauth\" class=\"anchor\" href=\"#socketauth\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>socket.auth</code>\n</h3>\n<p>The socket authentication state if any. Similar to the normal <strong>hapi</strong> <code>request.auth</code> object where:</p>\n<ul>\n<li>\n<code>isAuthenticated</code> - a boolean set to <code>true</code> when authenticated.</li>\n<li>\n<code>credentials</code> - the authentication credentials used.</li>\n<li>\n<code>artifacts</code> - authentication artifacts specific to the authentication strategy used.</li>\n</ul>\n<h3>\n<a id=\"socketserver\" class=\"anchor\" href=\"#socketserver\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>socket.server</code>\n</h3>\n<p>The socket's server reference.</p>\n<h3>\n<a id=\"socketconnection\" class=\"anchor\" href=\"#socketconnection\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>socket.connection</code>\n</h3>\n<p>The socket's connection reference.</p>\n<h3>\n<a id=\"socketdisconnect\" class=\"anchor\" href=\"#socketdisconnect\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>socket.disconnect()</code>\n</h3>\n<p>Closes a client connection.</p>\n<h3>\n<a id=\"socketisopen\" class=\"anchor\" href=\"#socketisopen\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>socket.isOpen()</code>\n</h3>\n<p>Returns <code>true</code> is the socket connection is in ready state, otherwise <code>false</code>.</p>\n<h3>\n<a id=\"await-socketsendmessage\" class=\"anchor\" href=\"#await-socketsendmessage\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await socket.send(message)</code>\n</h3>\n<p>Sends a custom message to the client where:</p>\n<ul>\n<li>\n<code>message</code> - the message sent to the client. Can be any type which can be safely converted to\nstring using <code>JSON.stringify()</code>.</li>\n</ul>\n<h3>\n<a id=\"await-socketpublishpath-message\" class=\"anchor\" href=\"#await-socketpublishpath-message\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await socket.publish(path, message)</code>\n</h3>\n<p>Sends a subscription update to a specific client where:</p>\n<ul>\n<li>\n<code>path</code> - the subscription string. Note that if the client did not subscribe to the provided <code>path</code>,\nthe client will ignore the update silently.</li>\n<li>\n<code>message</code> - the message sent to the client. Can be any type which can be safely converted to\nstring using <code>JSON.stringify()</code>.</li>\n</ul>\n<h3>\n<a id=\"await-socketrevokepath-message-options\" class=\"anchor\" href=\"#await-socketrevokepath-message-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await socket.revoke(path, message, [options])</code>\n</h3>\n<p>Revokes a subscription and optionally includes a last update where:</p>\n<ul>\n<li>\n<code>path</code> - the subscription string. Note that if the client is not subscribe to the provided <code>path</code>,\nthe client will ignore the it silently.</li>\n<li>\n<code>message</code> - an optional last subscription update sent to the client. Can be any type which can be\nsafely converted to string using <code>JSON.stringify()</code>. Pass <code>null</code> to revoke the subscription without\nsending a last update.</li>\n<li>\n<code>options</code> - optional settings:\n<ul>\n<li>\n<code>ignoreClosed</code> - ignore errors if the underlying websocket has been closed. Defaults to <code>false</code>.</li>\n</ul>\n</li>\n</ul>\n<h2>\n<a id=\"request\" class=\"anchor\" href=\"#request\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Request</h2>\n<p>The following decorations are available on each request received via the nes connection.</p>\n<h3>\n<a id=\"requestsocket\" class=\"anchor\" href=\"#requestsocket\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>request.socket</code>\n</h3>\n<p>Provides access to the <a href=\"#socket\"><code>Socket</code></a> object of the incoming connection.</p>\n<h2>\n<a id=\"client-5\" class=\"anchor\" href=\"#client-5\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Client</h2>\n<p>The client implements the <strong>nes</strong> protocol and provides methods for interacting with the server.\nIt supports auto-connect by default as well as authentication.</p>\n<h3>\n<a id=\"new-clienturl-options\" class=\"anchor\" href=\"#new-clienturl-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>new Client(url, [options])</code>\n</h3>\n<p>Creates a new client object where:</p>\n<ul>\n<li>\n<code>url</code> - the WebSocket address to connect to (e.g. <code>'wss://localhost:8000'</code>).</li>\n<li>\n<code>option</code> - optional configuration object where:\n<ul>\n<li>\n<code>ws</code> - available only when the client is used in node.js and passed as-is to the\n<a href=\"https://www.npmjs.com/package/ws\" rel=\"nofollow\"><strong>ws</strong> module</a>.</li>\n<li>\n<code>timeout</code> - server response timeout in milliseconds. Defaults to <code>false</code> (no timeout).</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"clientonerror\" class=\"anchor\" href=\"#clientonerror\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>client.onError</code>\n</h3>\n<p>A property used to set an error handler with the signature <code>function(err)</code>. Invoked whenever an\nerror happens that cannot be associated with a pending request.</p>\n<h3>\n<a id=\"clientonconnect\" class=\"anchor\" href=\"#clientonconnect\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>client.onConnect</code>\n</h3>\n<p>A property used to set a handler for connection events (initial connection and subsequent\nreconnections) with the signature <code>function()</code>.</p>\n<h3>\n<a id=\"clientondisconnect\" class=\"anchor\" href=\"#clientondisconnect\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>client.onDisconnect</code>\n</h3>\n<p>A property used to set a handler for disconnection events with the signature <code>function(willReconnect, log)</code>\nwhere:</p>\n<ul>\n<li>\n<code>willReconnect</code> - a boolean indicating if the client will automatically attempt to reconnect.</li>\n<li>\n<code>log</code> - an object with the following optional keys:\n<ul>\n<li>\n<code>code</code> - the <a href=\"https://tools.ietf.org/html/rfc6455#section-7.4.1\" rel=\"nofollow\">RFC6455</a> status code.</li>\n<li>\n<code>explanation</code> - the <a href=\"https://tools.ietf.org/html/rfc6455#section-7.4.1\" rel=\"nofollow\">RFC6455</a> explanation for the\n<code>code</code>.</li>\n<li>\n<code>reason</code> - a human-readable text explaining the reason for closing.</li>\n<li>\n<code>wasClean</code> - if <code>false</code>, the socket was closed abnormally.</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"clientonheartbeattimeout\" class=\"anchor\" href=\"#clientonheartbeattimeout\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>client.onHeartbeatTimeout</code>\n</h3>\n<p>A property used to set a handler for heartbeat timeout events with the signature <code>function(willReconnect)</code>\nwhere:</p>\n<ul>\n<li>\n<code>willReconnect</code> - a boolean indicating if the client will automatically attempt to reconnect.</li>\n</ul>\n<p>Upon heartbeat timeout, the client will disconnect the websocket. However, the <code>client.onDisconnect()</code> property will only be called (if set) once the server has completed the closing handshake. Users may use this property to be notified immediately and take action (e.g. display a message in the browser).</p>\n<h3>\n<a id=\"clientonupdate\" class=\"anchor\" href=\"#clientonupdate\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>client.onUpdate</code>\n</h3>\n<p>A property used to set a custom message handler with the signature <code>function(message)</code>. Invoked whenever\nthe server calls <code>server.broadcast()</code> or <code>socket.send()</code>.</p>\n<h3>\n<a id=\"await-clientconnectoptions\" class=\"anchor\" href=\"#await-clientconnectoptions\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await client.connect([options])</code>\n</h3>\n<p>Connects the client to the server where:</p>\n<ul>\n<li>\n<code>options</code> - an optional configuration object with the following options:\n<ul>\n<li>\n<code>auth</code> - sets the credentials used to authenticate. when the server is configured for\n<code>'token'</code> type authentication, the value is the token response received from the\nauthentication endpoint (called manually by the application). When the server is\nconfigured for <code>'direct'</code> type authentication, the value is the credentials expected\nby the server for the specified authentication strategy used which typically means an\nobject with headers (e.g. <code>{ headers: { authorization: 'Basic am9objpzZWNyZXQ=' } }</code>).</li>\n<li>\n<code>reconnect</code> - a boolean that indicates whether the client should try to reconnect. Defaults to <code>true</code>.</li>\n<li>\n<code>delay</code> - time in milliseconds to wait between each reconnection attempt. The delay time\nis cumulative, meaning that if the value is set to <code>1000</code> (1 second), the first wait will\nbe 1 seconds, then 2 seconds, 3 seconds, until the <code>maxDelay</code> value is reached and then\n<code>maxDelay</code> is used.</li>\n<li>\n<code>maxDelay</code> - the maximum delay time in milliseconds between reconnections.</li>\n<li>\n<code>retries</code> - number of reconnection attempts. Defaults to <code>Infinity</code> (unlimited).</li>\n<li>\n<code>timeout</code> - socket connection timeout in milliseconds. Defaults to the WebSocket\nimplementation timeout default.</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"await-clientdisconnect\" class=\"anchor\" href=\"#await-clientdisconnect\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await client.disconnect()</code>\n</h3>\n<p>Disconnects the client from the server and stops future reconnects.</p>\n<h3>\n<a id=\"clientid\" class=\"anchor\" href=\"#clientid\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>client.id</code>\n</h3>\n<p>The unique socket identifier assigned by the server. The value is set after the connection is\nestablished.</p>\n<h3>\n<a id=\"await-clientrequestoptions\" class=\"anchor\" href=\"#await-clientrequestoptions\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await client.request(options)</code>\n</h3>\n<p>Sends an endpoint request to the server where:</p>\n<ul>\n<li>\n<code>options</code> - value can be one of:\n<ul>\n<li>a string with the requested endpoint path or route id (defaults to a GET method).</li>\n<li>an object with the following keys:\n<ul>\n<li>\n<code>path</code> - the requested endpoint path or route id.</li>\n<li>\n<code>method</code> - the requested HTTP method (can also be any method string supported by the\nserver). Defaults to <code>'GET'</code>.</li>\n<li>\n<code>headers</code> - an object where each key is a request header and the value the header\ncontent. Cannot include an Authorization header. Defaults to no headers.</li>\n<li>\n<code>payload</code> - the request payload sent to the server.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Rejects with <code>Error</code> if the request failed.</p>\n<p>Resolves with object containing:</p>\n<ul>\n<li>\n<code>payload</code> - the server response object.</li>\n<li>\n<code>statusCode</code> - the HTTP response status code.</li>\n<li>\n<code>headers</code> - an object containing the HTTP response headers returned by the server (based on\nthe server configuration).</li>\n</ul>\n<h3>\n<a id=\"await-clientmessagemessage\" class=\"anchor\" href=\"#await-clientmessagemessage\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await client.message(message)</code>\n</h3>\n<p>Sends a custom message to the server which is received by the server <code>onMessage</code> handler where:</p>\n<ul>\n<li>\n<code>message</code> - the message sent to the server. Can be any type which can be safely converted to\nstring using <code>JSON.stringify()</code>.</li>\n</ul>\n<h3>\n<a id=\"await-clientsubscribepath-handler\" class=\"anchor\" href=\"#await-clientsubscribepath-handler\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await client.subscribe(path, handler)</code>\n</h3>\n<p>Subscribes to a server subscription where:</p>\n<ul>\n<li>\n<code>path</code> - the requested subscription path. Paths are just like HTTP request paths (e.g.\n<code>'/item/5'</code> or <code>'/updates'</code> based on the paths supported by the server).</li>\n<li>\n<code>handler</code> - the function used to receive subscription updates using the\nsignature <code>function(message, flags)</code> where:\n<ul>\n<li>\n<code>message</code> - the subscription update sent by the server.</li>\n<li>\n<code>flags</code> - an object with the following optional flags:\n<ul>\n<li>\n<code>revoked</code> - set to <code>true</code> when the message is the last update from the server due to\na subscription revocation.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Note that when <code>subscribe()</code> is called before the client connects, any server errors will be\nthrow by <code>connect()</code>.</p>\n<h3>\n<a id=\"await-clientunsubscribepath-handler\" class=\"anchor\" href=\"#await-clientunsubscribepath-handler\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await client.unsubscribe(path, handler)</code>\n</h3>\n<p>Cancels a subscription where:</p>\n<ul>\n<li>\n<code>path</code> - the subscription path used to subscribe.</li>\n<li>\n<code>handler</code> - remove a specific handler from a subscription or <code>null</code> to remove all handlers for\nthe given path.</li>\n</ul>\n<h3>\n<a id=\"clientsubscriptions\" class=\"anchor\" href=\"#clientsubscriptions\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>client.subscriptions()</code>\n</h3>\n<p>Returns an array of the current subscription paths.</p>\n<h3>\n<a id=\"clientoverridereconnectionauthauth\" class=\"anchor\" href=\"#clientoverridereconnectionauthauth\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>client.overrideReconnectionAuth(auth)</code>\n</h3>\n<p>Sets or overrides the authentication credentials used to reconnect the client on disconnect when\nthe client is configured to automatically reconnect, where:</p>\n<ul>\n<li>\n<code>auth</code> - same as the <code>auth</code> option passed to <a href=\"#await-clientconnectoptions\"><code>client.connect()</code></a>.</li>\n</ul>\n<p>Returns <code>true</code> if reconnection is enabled, otherwise <code>false</code> (in which case the method was ignored).</p>\n<p>Note: this will not update the credentials on the server -\nuse <a href=\"#await-clientreauthenticateauth\"><code>client.reauthenticate()</code></a>.</p>\n<h3>\n<a id=\"await-clientreauthenticateauth\" class=\"anchor\" href=\"#await-clientreauthenticateauth\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await client.reauthenticate(auth)</code>\n</h3>\n<p>Will issue the <code>reauth</code> message to the server with updated <code>auth</code> details and also\n<a href=\"#clientoverridereconnectionauthauth\">override the reconnection information</a>, if reconnection is enabled.\nThe server will respond with an error and drop the connection in case the new <code>auth</code> credentials are\ninvalid.</p>\n<p>Rejects with <code>Error</code> if the request failed.</p>\n<p>Resolves with <code>true</code> if the request succeeds.</p>\n<p>Note: when authentication has a limited lifetime, <code>reauthenticate()</code> should be called early enough to avoid\nthe server dropping the connection.</p>\n<h3>\n<a id=\"errors\" class=\"anchor\" href=\"#errors\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Errors</h3>\n<p>When a client method returns or throws an error, the error is decorated with:</p>\n<ul>\n<li>\n<code>type</code> - a string indicating the source of the error where:\n<ul>\n<li>\n<code>'disconnect'</code> - the socket disconnected before the request completed.</li>\n<li>\n<code>'protocol'</code> - the client received an invalid message from the server violating the protocol.</li>\n<li>\n<code>'server'</code> - an error response sent from the server.</li>\n<li>\n<code>'timeout'</code> - a timeout event.</li>\n<li>\n<code>'user'</code> - user error (e.g. incorrect use of the API).</li>\n<li>\n<code>'ws'</code> - a socket error.</li>\n</ul>\n</li>\n</ul>\n",
      "intro": "## Introduction\n\n**nes** adds native WebSocket support to [**hapi**](https://github.com/hapijs/hapi)-based application\nservers. Instead of treating the WebSocket connections as a separate platform with its own security\nand application context, **nes** builds on top of the existing **hapi** architecture to provide a\nflexible and organic extension.\n\nProtocol version: 2.4.x (different from module version)\n",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "WebSocket adapter plugin for hapi routes.",
    "forks": 81,
    "stars": 489,
    "date": "2020-08-22T18:13:08Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/nes"
  },
  "nigel": {
    "name": "nigel",
    "versions": [
      {
        "name": "4.0.2",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "4.0.2"
    ],
    "api": false,
    "4.0.2": {
      "menu": "",
      "api": "",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Boyer-Moore-Horspool algorithms.",
    "forks": 9,
    "stars": 14,
    "date": "2020-08-22T20:11:47Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/nigel"
  },
  "oppsy": {
    "name": "oppsy",
    "versions": [
      {
        "name": "3.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "3.0.0"
    ],
    "api": true,
    "3.0.0": {
      "menu": "- [new Oppsy()](#new-oppsyserver-config)\n  - [oppsy.start()](#oppsystartinterval)\n  - [oppsy.stop()](#oppsystop)",
      "api": "<h3>\n<a id=\"new-oppsyserver-config\" class=\"anchor\" href=\"#new-oppsyserver-config\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>new Oppsy(server, [config])</h3>\n<p>Creates a new Oppsy object.</p>\n<ul>\n<li>\n<code>server</code> - the hapi server to collect information about.</li>\n<li>\n<code>[config]</code> - optional configuration object\n<ul>\n<li>\n<code>httpAgents</code> - the list of httpAgents to report socket information about. Can be a single http.Agent or an array of agents objects. Defaults to Http.globalAgent.</li>\n<li>\n<code>httpsAgents</code> - the list of httpsAgents to report socket information about. Can be a single https.Agent or an array of agents. Defaults to Https.globalAgent.</li>\n</ul>\n</li>\n</ul>\n<p>The oppsy object is an EventEmitter so it exposes the same API(<code>.on</code> and <code>.emit</code>) as the Node EventEmitter object. After it is started, it emits an \"ops\" event after a set interval with the collected ops information as the event payload.</p>\n<h4>\n<a id=\"oppsystartinterval\" class=\"anchor\" href=\"#oppsystartinterval\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>oppsy.start(interval)</h4>\n<p>Starts an Oppsy object collecting network and server information.</p>\n<ul>\n<li>\n<code>interval</code> - number of milliseconds to wait between each data sampling.</li>\n</ul>\n<h4>\n<a id=\"oppsystop\" class=\"anchor\" href=\"#oppsystop\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>oppsy.stop()</h4>\n<p>Stops an Oppsy objects collecting.</p>\n",
      "intro": "",
      "example": "",
      "usage": "## Usage\n\n```js\nconst Hapi = require('@hapi/hapi');\nconst Oppsy = require('@hapi/oppsy');\n\nconst server = new Hapi.Server();\nconst oppsy = new Oppsy(server);\noppsy.on('ops', (data) => {\n  console.log(data);\n});\n\nawait server.start();\n\noppsy.start(1000);\n```\n\nThis creates a new Oppsy object and starts collecting information every 1000 miliseconds\n",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "An EventEmitter useful for collecting hapi server ops information.",
    "forks": 19,
    "stars": 25,
    "date": "2020-08-22T20:44:28Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/oppsy"
  },
  "pez": {
    "name": "pez",
    "versions": [
      {
        "name": "5.0.3",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "5.0.3"
    ],
    "api": false,
    "5.0.3": {
      "menu": "",
      "api": "",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Multipart parser.",
    "forks": 15,
    "stars": 33,
    "date": "2020-08-22T17:58:48Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/pez"
  },
  "podium": {
    "name": "podium",
    "versions": [
      {
        "name": "4.1.1",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "4.1.1"
    ],
    "api": true,
    "4.1.1": {
      "menu": "  - [`Using different parameters`](#-using-different-parameters)\n    - [`channels`](#channels)\n    - [`clone`](#clone)\n    - [`spread`](#spread)\n    - [`shared`](#shared)\n    - [`tag-filter`](#tag-filter)\n    - [`count`](#count)\n- [`new Podium()`](#new-podiumevents)\n- [`podium.registerEvent()`](#podiumregistereventevents)\n- [`podium.registerPodium()`](#podiumregisterpodiumpodiums)\n- [`podium.emit()`](#podiumemitcriteria-data)\n- [`podium.on()`](#podiumoncriteria-listener-context)\n- [`podium.addListener()`](#podiumaddlistenercriteria-listener-context)\n- [`podium.once()`](#podiumoncecriteria-listener-context)\n- [`podium.removeListener()`](#podiumremovelistenername-listener)\n- [`podium.removeAllListeners()`](#podiumremovealllistenersname)\n- [`podium.hasListeners()`](#podiumhaslistenersname)",
      "api": "<h3>\n<a id=\"-using-different-parameters\" class=\"anchor\" href=\"#-using-different-parameters\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><a name=\"parameters\"></a> <code>Using different parameters</code>\n</h3>\n<p>Along with channels, podium allows you to specify other event parameters. Below are more examples:</p>\n<ul>\n<li><a href=\"#channels\"><code>channels</code></a></li>\n<li><a href=\"#clone\"><code>clone</code></a></li>\n<li><a href=\"#spread\"><code>spread</code></a></li>\n<li><a href=\"#shared\"><code>shared</code></a></li>\n<li><a href=\"#tagFilter\"><code>tag-filter</code></a></li>\n<li><a href=\"#count\"><code>count</code></a></li>\n</ul>\n<h4>\n<a id=\"channels\" class=\"anchor\" href=\"#channels\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><a name=\"channels\"></a><code>channels</code>\n</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Podium</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/podium'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">podiumObject</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Podium</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">registerEvent</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">channels</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'ch1'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'ch2'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'ch3'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'ch4'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event2'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">channels</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'ch1'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'ch2'</span><span class=\"pl-kos\">]</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">listener1</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'listener1 called'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">listener2</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'listener2 called'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">channels</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'ch1'</span><span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-en\">listener1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">channels</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'ch3'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'ch4'</span><span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-en\">listener2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">channels</span>: <span class=\"pl-s\">'ch2'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c\">// autonomous function</span>\n\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'auto'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">var</span> <span class=\"pl-s1\">arr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">4</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">4</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">5</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">emit</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">channel</span>: <span class=\"pl-s\">'ch3'</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"clone\" class=\"anchor\" href=\"#clone\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><a name=\"clone\"></a><code>clone</code>\n</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Podium</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/podium'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">podiumObject</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Podium</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">registerEvent</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">channels</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'ch1'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'ch2'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">clone</span>: <span class=\"pl-c1\">true</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event2'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">channels</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'ch1'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'ch2'</span><span class=\"pl-kos\">]</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">listener1</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-s1\">data</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">55</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'listener1 called'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">listener2</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-s1\">data</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">100</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'listener2 called'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">channels</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'ch1'</span><span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-en\">listener1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event2'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">channels</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'ch1'</span><span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-en\">listener2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">var</span> <span class=\"pl-s1\">arr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">4</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">4</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">5</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'initially: '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">arr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">emit</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">channel</span>: <span class=\"pl-s\">'ch1'</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'after event1, ch1: '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">arr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">emit</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event2'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">channel</span>: <span class=\"pl-s\">'ch1'</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'after event2, ch1: '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">arr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"spread\" class=\"anchor\" href=\"#spread\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><a name=\"spread\"></a><code>spread</code>\n</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Podium</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/podium'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">podiumObject</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Podium</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">registerEvent</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">channels</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'ch1'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'ch2'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">spread</span>: <span class=\"pl-c1\">true</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event2'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">channels</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'ch1'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'ch2'</span><span class=\"pl-kos\">]</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">listener1</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data1</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data2</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data3</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data4</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'listener1 called'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data1</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data2</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data3</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data4</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">listener2</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-s1\">data</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">100</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'listener2 called'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">channels</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'ch1'</span><span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-en\">listener1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event2'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">channels</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'ch1'</span><span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-en\">listener2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">var</span> <span class=\"pl-s1\">arr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">4</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">4</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">5</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'initially: '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">arr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">emit</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">channel</span>: <span class=\"pl-s\">'ch1'</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'after event1, ch1: '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">arr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">emit</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event2'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">channel</span>: <span class=\"pl-s\">'ch1'</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'after event2, ch1: '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">arr</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"shared\" class=\"anchor\" href=\"#shared\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><a name=\"shared\"></a><code>shared</code>\n</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Podium</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/podium'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">podiumObject</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Podium</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">registerEvent</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">channels</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'ch1'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'ch2'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">registerEvent</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">channels</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'ch1'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'ch2'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">shared</span>: <span class=\"pl-c1\">true</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">listener2</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'listener2 called'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">channels</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'ch1'</span><span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-en\">listener2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">var</span> <span class=\"pl-s1\">arr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">4</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">4</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">5</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">emit</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">channel</span>: <span class=\"pl-s\">'ch1'</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"tag-filter\" class=\"anchor\" href=\"#tag-filter\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><a name=\"tagFilter\"></a><code>tag-filter</code>\n</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Podium</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/podium'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">emitter</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Podium</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'test'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">updates</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">emitter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">updates</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> data <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">emitter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">filter</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'b'</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">updates</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> data <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">emitter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">filter</span>: <span class=\"pl-s\">'b'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">updates</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-c1\">3</span><span class=\"pl-kos\">,</span> data <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">emitter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">filter</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'c'</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">updates</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-c1\">4</span><span class=\"pl-kos\">,</span> data <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">emitter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">filter</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">tags</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'b'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">all</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">updates</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-c1\">5</span><span class=\"pl-kos\">,</span> data <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">emitter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">emit</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">tags</span>: <span class=\"pl-s\">'a'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">emitter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">emit</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">tags</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'b'</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">emitter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">emit</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">tags</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'d'</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">emitter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">emit</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">tags</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">4</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">emitter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">emit</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">tags</span>: <span class=\"pl-kos\">[</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'b'</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">5</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">emitter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">emit</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">6</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">updates</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h4>\n<a id=\"count\" class=\"anchor\" href=\"#count\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><a name=\"count\"></a><code>count</code>\n</h4>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Podium</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/podium'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">podiumObject</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Podium</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">registerEvent</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">listener1</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'listener1 called'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">data</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">on</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-c1\">count</span>: <span class=\"pl-c1\">2</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-en\">listener1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">emit</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'emit 1'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">emit</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'emit 2'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">podiumObject</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">emit</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'event1'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'emit 3'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// this wont call listener1</span></pre></div>\n<h2>\n<a id=\"new-podiumevents\" class=\"anchor\" href=\"#new-podiumevents\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>new Podium(events)</code>\n</h2>\n<p>Creates a new <strong>podium</strong> emitter where:</p>\n<ul>\n<li>\n<code>events</code> - if present, the value is passed to <a href=\"#podiumregistereventevents\"><code>podium.registerEvent()</code></a>.</li>\n</ul>\n<p>Returns a <code>Podium</code> object.</p>\n<h2>\n<a id=\"podiumregistereventevents\" class=\"anchor\" href=\"#podiumregistereventevents\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>podium.registerEvent(events)</code>\n</h2>\n<p>Register the specified events and their optional configuration. Events must be registered before\nthey can be emitted or subscribed to. This is done to detect event name misspelling and invalid\nevent activities. The <code>events</code> argument can be:</p>\n<ul>\n<li>an event <strong>string</strong>.</li>\n<li>an event options object with the following optional keys (unless noted otherwise):\n<ul>\n<li>\n<code>name</code> - the event name <strong>string (required)</strong>.</li>\n<li>\n<code>channels</code> - a <strong>string</strong> or <strong>array of strings</strong> specifying the event channels available. <strong>Defaults\nto no channel restrictions (event updates can specify a channel or not).</strong>\n</li>\n<li>\n<code>clone</code> - if <code>true</code>, the <code>data</code> object passed to <a href=\"#podiumemitcriteria-data-callback\"><code>podium.emit()</code></a>\nis cloned before it is passed to the listeners (unless an override specified by each listener).\n<strong>Defaults to <code>false</code> (<code>data</code> is passed as-is).</strong>\n</li>\n<li>\n<code>spread</code> - if <code>true</code>, the <code>data</code> object passed to <a href=\"#podiumemitcriteria-data-callback\"><code>podium.emit()</code></a>\n<strong>must be an array</strong> and the <code>listener</code> method is called with each array element passed as a separate\nargument (unless an override specified by each listener). <strong>This should only be used when the emitted\ndata structure is known and predictable.</strong>\n<strong>Defaults to <code>false</code> (<code>data</code> is emitted as a single argument regardless of its type).</strong>\n</li>\n<li>\n<code>tags</code> - if <code>true</code> and the <code>criteria</code> object passed to <a href=\"#podiumemitcriteria-data-callback\"><code>podium.emit()</code></a>\nincludes <code>tags</code>, the tags are mapped to an object (where each tag string is the key and\nthe value is <code>true</code>) which is appended to the arguments list at the end. A configuration override can be set by each\nlistener. <strong>Defaults to <code>false</code>.</strong>\n</li>\n<li>\n<code>shared</code> - if <code>true</code>, the same event <code>name</code> can be registered multiple times where the second\nregistration is ignored. <strong>Note that if the registration config is changed between registrations,\nonly the first configuration is used. Defaults to <code>false</code> (a duplicate registration will throw an\nerror).</strong> For detailed examples of event parameters <a href=\"README.md#parameters\">see here</a>\n</li>\n</ul>\n</li>\n<li>a <code>Podium</code> object which is passed to <a href=\"#podiumregisterpodiumpodiums\"><code>podium.registerPodium()</code></a>.</li>\n<li>an array containing any of the above.</li>\n</ul>\n<h2>\n<a id=\"podiumregisterpodiumpodiums\" class=\"anchor\" href=\"#podiumregisterpodiumpodiums\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>podium.registerPodium(podiums)</code>\n</h2>\n<p>Registers another emitter as an event source for the current emitter (any event update emitted by the\nsource emitter is passed to any subscriber of the current emitter) where:</p>\n<ul>\n<li>\n<code>podiums</code> - a <code>Podium</code> object or an array of objects, each added as a source.</li>\n</ul>\n<p>Note that any events registered with a source emitter are automatically added to the current emitter.\nIf the events are already registered, they are left as-is.</p>\n<h2>\n<a id=\"podiumemitcriteria-data\" class=\"anchor\" href=\"#podiumemitcriteria-data\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>podium.emit(criteria, data)</code>\n</h2>\n<p>Emits an event update to all the subscribed listeners where:</p>\n<ul>\n<li>\n<code>criteria</code> - the event update criteria which must be one of:\n<ul>\n<li>the event name string.</li>\n<li>an object with the following optional keys (unless noted otherwise):\n<ul>\n<li>\n<code>name</code> - the event name string (required).</li>\n<li>\n<code>channel</code> - the channel name string.</li>\n<li>\n<code>tags</code> - a tag string or array of tag strings.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>data</code> - the value emitted to the subscribers.</li>\n</ul>\n<h2>\n<a id=\"podiumoncriteria-listener-context\" class=\"anchor\" href=\"#podiumoncriteria-listener-context\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>podium.on(criteria, listener, context)</code>\n</h2>\n<p>Subscribe a handler to an event where:</p>\n<ul>\n<li>\n<code>criteria</code> - the subscription criteria which must be one of the following:\n<ul>\n<li>event name <strong>string</strong>.</li>\n<li>a criteria object with the following optional keys (unless noted otherwise):\n<ul>\n<li>\n<code>name</code> - the event name <strong>string (required)</strong>.</li>\n<li>\n<code>channels</code> - a <strong>string</strong> or <strong>array of strings</strong> specifying the event channels to subscribe to.\nIf the event registration specified a list of allowed channels, the <code>channels</code> array must\nmatch the allowed channels. If <code>channels</code> are specified, event updates without any\nchannel designation will not be included in the subscription. <strong>Defaults to no channels\nfilter.</strong>\n</li>\n<li>\n<code>clone</code> - if <code>true</code>, the <code>data</code> object passed to <a href=\"#podiumemitcriteria-data-callback\"><code>podium.emit()</code></a>\nis cloned before it is passed to the <code>listener</code> method. <strong>Defaults to the event\nregistration option (which defaults to <code>false</code>).</strong>\n</li>\n<li>\n<code>count</code> - a positive <strong>integer</strong> indicating the number of times the <code>listener</code> can be called\nafter which the subscription is automatically removed. A count of <code>1</code> is the same as\ncalling <code>podium.once()</code>. <strong>Defaults to no limit.</strong>\n</li>\n<li>\n<code>filter</code> - the event tags (if present) to subscribe to which can be one of the following:\n<ul>\n<li>a tag <strong>string</strong>.</li>\n<li>an <strong>array</strong> of tag <strong>strings</strong>.</li>\n<li>an object with the following:\n<ul>\n<li>\n<code>tags</code> - a tag <strong>string</strong> or <strong>array</strong> of tag <strong>strings</strong>.</li>\n<li>\n<code>all</code> - if <code>true</code>, all <code>tags</code> must be present for the event update to match the\nsubscription. <strong>Defaults to <code>false</code> (at least one matching tag).</strong>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>spread</code> - if <code>true</code>, and the <code>data</code> object passed to <a href=\"#podiumemitcriteria-data-callback\"><code>podium.emit()</code></a>\nis an <strong>array</strong>, the <code>listener</code> method is called with each <strong>array element</strong> passed as a separate\nargument. <strong>This should only be used when the emitted data structure is known and predictable.\nDefaults to the event registration option (which defaults to <code>false</code>).</strong>\n</li>\n<li>\n<code>tags</code> - if <code>true</code> and the <code>criteria</code> object passed to <a href=\"#podiumemitcriteria-data-callback\"><code>podium.emit()</code></a>\nincludes <code>tags</code>, the tags are mapped to an object (where each tag string is the key and\nthe value is <code>true</code>) which is appended to the arguments list at the end. <strong>Defaults to the event registration option\n(which defaults to <code>false</code>).</strong>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>listener</code> - the handler method set to receive event updates. The function signature depends\non the <code>spread</code>, and <code>tags</code> options.</li>\n<li>\n<code>context</code> - an <strong>object</strong> that binds to the listener handler.</li>\n</ul>\n<h2>\n<a id=\"podiumaddlistenercriteria-listener-context\" class=\"anchor\" href=\"#podiumaddlistenercriteria-listener-context\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>podium.addListener(criteria, listener, context)</code>\n</h2>\n<p>Same as <a href=\"#podiumoncriteria-listener\"><code>podium.on()</code></a>.</p>\n<h2>\n<a id=\"podiumoncecriteria-listener-context\" class=\"anchor\" href=\"#podiumoncecriteria-listener-context\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>podium.once(criteria, listener, context)</code>\n</h2>\n<p>Same as calling <a href=\"#podiumoncriteria-listener\"><code>podium.on()</code></a> with the <code>count</code> option set to <code>1</code>.</p>\n<h2>\n<a id=\"podiumremovelistenername-listener\" class=\"anchor\" href=\"#podiumremovelistenername-listener\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>podium.removeListener(name, listener)</code>\n</h2>\n<p>Removes all listeners subscribed to a given event name matching the provided listener method where:</p>\n<ul>\n<li>\n<code>name</code> - the event name <strong>string</strong>.</li>\n<li>\n<code>listener</code> - the function reference provided when subscribed.</li>\n</ul>\n<p>Returns a reference to the current emitter.</p>\n<h2>\n<a id=\"podiumremovealllistenersname\" class=\"anchor\" href=\"#podiumremovealllistenersname\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>podium.removeAllListeners(name)</code>\n</h2>\n<p>Removes all listeners subscribed to a given event name where:</p>\n<ul>\n<li>\n<code>name</code> - the event name <strong>string</strong>.</li>\n</ul>\n<p>Returns a reference to the current emitter.</p>\n<h2>\n<a id=\"podiumhaslistenersname\" class=\"anchor\" href=\"#podiumhaslistenersname\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>podium.hasListeners(name)</code>\n</h2>\n<p>Returns whether an event has any listeners subscribed where:</p>\n<ul>\n<li>\n<code>name</code> - the event name <strong>string</strong>.</li>\n</ul>\n<p>Returns <code>true</code> if the event name has any listeners, otherwise <code>false</code>.</p>\n",
      "intro": "## Introduction\n\n**podium** is an event emitter with support for tags, filters, channels, event update cloning,\narguments spreading, and other features useful when building large scale applications.\nWhile node's native [`EventEmitter`](https://nodejs.org/dist/latest-v6.x/docs/api/events.html#events_class_eventemitter) is strictly focused on maximum performance,\nit lacks many features that do not belong in the core implementation. **podium** is not restricted by\nnode's performance requirement as it is designed for application layer needs where its overhead\nis largely insignificant as implementing these features will have similar cost on top of the native emitter.\n",
      "example": "## Example\n\n```js\nconst Podium = require('@hapi/podium');\n\nconst emitter = new Podium()\n\nconst context = { count: 0 }\n\nemitter.registerEvent({\n    name: 'event',\n    channels: ['ch1', 'ch2']\n})\n\nconst handler1 = function () {\n\n    ++this.count\n    console.log(this.count)\n};\n\nconst handler2 = function () {\n\n    this.count = this.count + 2\n    console.log(this.count)\n}\n\nemitter.on({\n    name: 'event',\n    channels: ['ch1']\n}, handler1, context);\n\nemitter.on({\n    name: 'event',\n    channels: ['ch2']\n}, handler2, context)\n\nemitter.emit({\n    name: 'event',\n    channel: 'ch1'\n})\n\nemitter.emit({\n    name: 'event',\n    channel: 'ch2'\n})\n\nemitter.hasListeners('event') // true\n\nemitter.removeAllListeners('event') // Removes all listeners subscribed to 'event'\n```\n\nThe above example uses podium's channel event parameter to restrict the event update to only the specified channel. \n\nFirst you register the event by calling the `registerEvent()` method. Here, you name the event `'event'` and give it channels `['ch1', 'ch2']`.\n\nNext you specify your listener handlers. These will be called when an event is updated. Here you make use of podium's listener context, data that you can bind to your listener handlers. \nIn this case, `handler1` will add 1 to count, which is specified as `{ count: 0 }`, while `handler2` will add 2.\n\nNext you call the `on()` method to subscribe a handler to an event. You use the same event name, but two different channels. `'ch1'` will use handler1 and `'ch2'` will use handler2.\n\nLastly, you use `emit()` to emit and event update to the subscribers. \n\n",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Event emitter with async features.",
    "forks": 23,
    "stars": 81,
    "date": "2020-08-10T18:33:43Z",
    "updated": "Mon Aug 10 2020",
    "link": "https://github.com/hapijs/podium"
  },
  "scooter": {
    "name": "scooter",
    "versions": [
      {
        "name": "6.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "6.0.0"
    ],
    "api": true,
    "6.0.0": {
      "menu": "- [Usage](#usage)",
      "api": "<p>Scooter uses the [useragent] package to provide user-agent information. For\nmore details of what information scooter provides, please see the <a href=\"https://www.npmjs.org/package/useragent\" rel=\"nofollow\">useragent</a>.</p>\n<h1>\n<a id=\"usage\" class=\"anchor\" href=\"#usage\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Usage</h1>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Scooter</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/scooter'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">start</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/user-agent'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-en\">handler</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n            <span class=\"pl-k\">return</span> <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">plugins</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">scooter</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Scooter</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">info</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">uri</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s\">'/user-agent'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "User-agent information plugin.",
    "forks": 22,
    "stars": 47,
    "date": "2020-08-22T18:06:31Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/scooter"
  },
  "shot": {
    "name": "shot",
    "versions": [
      {
        "name": "5.0.3",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "5.0.3"
    ],
    "api": true,
    "5.0.3": {
      "menu": "- [Methods](#methods)\n  - [`await Shot.inject()`](#await-shotinjectdispatchfunc-options)\n  - [`Shot.isInjection()`](#shotisinjectionobj)",
      "api": "<h2>\n<a id=\"methods\" class=\"anchor\" href=\"#methods\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Methods</h2>\n<h3>\n<a id=\"await-shotinjectdispatchfunc-options\" class=\"anchor\" href=\"#await-shotinjectdispatchfunc-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>await Shot.inject(dispatchFunc, options)</code>\n</h3>\n<p>Injects a fake request into an HTTP server.</p>\n<ul>\n<li>\n<code>dispatchFunc</code> - listener function. The same as you would pass to <code>Http.createServer</code> when making a node HTTP server. Has the signature <code>function (req, res)</code> where:\n<ul>\n<li>\n<code>req</code> - a simulated request object. Inherits from <code>Stream.Readable</code>.</li>\n<li>\n<code>res</code> - a simulated response object. Inherits from node's <code>Http.ServerResponse</code>.</li>\n</ul>\n</li>\n<li>\n<code>options</code> - request options object where:\n<ul>\n<li>\n<code>url</code> - a string specifying the request URL.</li>\n<li>\n<code>method</code> - a string specifying the HTTP request method, defaulting to <code>'GET'</code>.</li>\n<li>\n<code>authority</code> - a string specifying the HTTP HOST header value to be used if no header is provided, and the <code>url</code>\ndoes not include an authority component. Defaults to <code>'localhost'</code>.</li>\n<li>\n<code>headers</code> - an optional object containing request headers.</li>\n<li>\n<code>remoteAddress</code> - an optional string specifying the client remote address. Defaults to <code>'127.0.0.1'</code>.</li>\n<li>\n<code>payload</code> - an optional request payload. Can be a string, Buffer, Stream or object.</li>\n<li>\n<code>simulate</code> - an object containing flags to simulate various conditions:\n<ul>\n<li>\n<code>end</code> - indicates whether the request will fire an <code>end</code> event. Defaults to <code>undefined</code>, meaning an <code>end</code> event will fire.</li>\n<li>\n<code>split</code> - indicates whether the request payload will be split into chunks. Defaults to <code>undefined</code>, meaning payload will not be chunked.</li>\n<li>\n<code>error</code> - whether the request will emit an <code>error</code> event. Defaults to <code>undefined</code>, meaning no <code>error</code> event will be emitted. If set to <code>true</code>, the emitted error will have a message of <code>'Simulated'</code>.</li>\n<li>\n<code>close</code> - whether the request will emit a <code>close</code> event. Defaults to <code>undefined</code>, meaning no <code>close</code> event will be emitted.</li>\n</ul>\n</li>\n<li>\n<code>validate</code> - Optional flag to validate this options object. Defaults to <code>true</code>.</li>\n</ul>\n</li>\n</ul>\n<p>Returns a response object where:</p>\n<ul>\n<li>\n<code>raw</code> - an object containing the raw request and response objects where:\n<ul>\n<li>\n<code>req</code> - the simulated request object.</li>\n<li>\n<code>res</code> - the simulated response object.</li>\n</ul>\n</li>\n<li>\n<code>headers</code> - an object containing the response headers.</li>\n<li>\n<code>statusCode</code> - the HTTP status code.</li>\n<li>\n<code>statusMessage</code> - the HTTP status message.</li>\n<li>\n<code>payload</code> - the payload as a UTF-8 encoded string.</li>\n<li>\n<code>rawPayload</code> - the raw payload as a Buffer.</li>\n<li>\n<code>trailers</code> - an object containing the response trailers.</li>\n</ul>\n<h3>\n<a id=\"shotisinjectionobj\" class=\"anchor\" href=\"#shotisinjectionobj\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Shot.isInjection(obj)</code>\n</h3>\n<p>Checks if given object <code>obj</code> is a Shot <code>Request</code> object.</p>\n",
      "intro": "## Introduction\n\nInjects a fake HTTP request/response into a node HTTP server for simulating server logic, writing tests, or debugging. Does not use a socket\nconnection so can be run against an inactive server (server not in listen mode).\n",
      "example": "## Example\n\n```javascript\nconst Http = require('http');\nconst Shot = require('@hapi/shot');\n\n\nconst internals = {};\n\n\ninternals.main = async function () {\n\n    const dispatch = function (req, res) {\n\n        const reply = 'Hello World';\n        res.writeHead(200, { 'Content-Type': 'text/plain', 'Content-Length': reply.length });\n        res.end(reply);\n    };\n\n    const server = Http.createServer(dispatch);\n\n    const res = await Shot.inject(dispatch, { method: 'get', url: '/' });\n    console.log(res.payload);\n};\n\n\ninternals.main();\n```\n\nNote how `server.listen` is never called.\n",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Injects a fake HTTP request/response into your node server logic.",
    "forks": 43,
    "stars": 198,
    "date": "2020-09-02T02:19:55Z",
    "updated": "Tue Sep 01 2020",
    "link": "https://github.com/hapijs/shot"
  },
  "somever": {
    "name": "somever",
    "versions": [
      {
        "name": "3.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "3.0.0"
    ],
    "api": false,
    "3.0.0": {
      "menu": "",
      "api": "",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Semantic versioning rules parser, compatible with version ranges used in package.json files and the canonical [semver](https://www.npmjs.com/package/semver) module.",
    "forks": 10,
    "stars": 0,
    "date": "2020-08-22T18:09:21Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/somever"
  },
  "statehood": {
    "name": "statehood",
    "versions": [
      {
        "name": "7.0.3",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "7.0.3"
    ],
    "api": false,
    "7.0.3": {
      "menu": "",
      "api": "",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "HTTP State Management Utilities.",
    "forks": 26,
    "stars": 20,
    "date": "2020-08-10T16:28:55Z",
    "updated": "Mon Aug 10 2020",
    "link": "https://github.com/hapijs/statehood"
  },
  "subtext": {
    "name": "subtext",
    "versions": [
      {
        "name": "7.0.3",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "7.0.3"
    ],
    "api": true,
    "7.0.3": {
      "menu": "- [Methods](#methods)\n  - [`Subtext.parse()`](#subtextparserequest-tap-options)",
      "api": "<h2>\n<a id=\"methods\" class=\"anchor\" href=\"#methods\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Methods</h2>\n<h3>\n<a id=\"subtextparserequest-tap-options\" class=\"anchor\" href=\"#subtextparserequest-tap-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>Subtext.parse(request, tap, options)</code>\n</h3>\n<p>Parses the request body and returns it in a promise.</p>\n<p><code>options</code> are the following:</p>\n<ul>\n<li>\n<code>parse</code>: (required) boolean</li>\n<li>\n<code>output</code>: (required) 'data', 'stream', 'file'</li>\n<li>\n<code>maxBytes</code>: int</li>\n<li>\n<code>override</code>: string</li>\n<li>\n<code>defaultContentType</code>: string</li>\n<li>\n<code>allow</code>: string, only allow a certain media type</li>\n<li>\n<code>timeout</code>: integer, limit time spent buffering request</li>\n<li>\n<code>qs</code>: object, to pass into the qs module</li>\n<li>\n<code>uploads</code>: string, directory for file uploads</li>\n<li>\n<code>decoders</code>: an object mapping content-encoding names to their corresponding decoder functions</li>\n<li>\n<code>compression</code>: an object mapping content-encoding names to their corresponding options passed to the <code>decoders</code> functions</li>\n</ul>\n<p>returns the following:</p>\n<ul>\n<li>\n<code>payload</code>: the parsed payload, or null if no payload</li>\n<li>\n<code>mime</code>: the content type of the request</li>\n</ul>\n",
      "intro": "## Introduction\n\n`subtext` parses the request body and returns it in a promise.\n",
      "example": "## Example\n\n```javascript\nconst Http = require('http');\nconst Subtext = require('@hapi/subtext');\n\nHttp.createServer(async (request, response) => {\n\n  const { payload, mime } = await Subtext.parse(request, null, { parse: true, output: 'data' });\n\n  response.writeHead(200, { 'Content-Type': 'text/plain' });\n  response.end(`Payload contains: ${JSON.stringify(payload)}`);\n\n}).listen(1337, '127.0.0.1');\n\nconsole.log('Server running at http://127.0.0.1:1337/');\n\n```\n",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "HTTP payload parser.",
    "forks": 25,
    "stars": 22,
    "date": "2020-08-09T22:03:31Z",
    "updated": "Sun Aug 09 2020",
    "link": "https://github.com/hapijs/subtext"
  },
  "teamwork": {
    "name": "teamwork",
    "versions": [
      {
        "name": "5.1.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "5.1.0"
    ],
    "api": false,
    "5.1.0": {
      "menu": "",
      "api": "",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Wait for multiple callbacks",
    "forks": 13,
    "stars": 12,
    "date": "2020-08-22T18:16:06Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/teamwork"
  },
  "topo": {
    "name": "topo",
    "versions": [
      {
        "name": "5.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "5.0.0"
    ],
    "api": true,
    "5.0.0": {
      "menu": "- [Methods](#methods)\n  - [`new Sorter()`](#new-sorter)\n  - [`sorter.add()`](#sorteraddnodes-options)\n  - [`sorter.nodes`](#sorternodes)\n  - [`sorter.merge()`](#sortermergeothers)",
      "api": "<h2>\n<a id=\"methods\" class=\"anchor\" href=\"#methods\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Methods</h2>\n<h3>\n<a id=\"new-sorter\" class=\"anchor\" href=\"#new-sorter\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>new Sorter()</code>\n</h3>\n<p>Creates a new <code>Sorter</code> object.</p>\n<h3>\n<a id=\"sorteraddnodes-options\" class=\"anchor\" href=\"#sorteraddnodes-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>sorter.add(nodes, [options])</code>\n</h3>\n<p>Specifies an additional node or list of nodes to be topologically sorted where:</p>\n<ul>\n<li>\n<code>nodes</code> - a mixed value or array of mixed values to be added as nodes to the topologically sorted list.</li>\n<li>\n<code>options</code> - optional sorting information about the <code>nodes</code>:\n<ul>\n<li>\n<code>group</code> - a string naming the group to which <code>nodes</code> should be assigned.  The group name <code>'?'</code> is reserved.</li>\n<li>\n<code>before</code> - a string or array of strings specifying the groups that <code>nodes</code> must precede in the topological sort.</li>\n<li>\n<code>after</code> - a string or array of strings specifying the groups that <code>nodes</code> must succeed in the topological sort.</li>\n<li>\n<code>sort</code> - a numerical value used to sort items when performing a <code>sorter.merge()</code>.</li>\n</ul>\n</li>\n</ul>\n<p>Returns an array of the topologically sorted nodes.</p>\n<h3>\n<a id=\"sorternodes\" class=\"anchor\" href=\"#sorternodes\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>sorter.nodes</code>\n</h3>\n<p>An array of the topologically sorted nodes.  This list is renewed upon each call to <a href=\"#topoaddnodes-options\"><code>sorter.add()</code></a>.</p>\n<h3>\n<a id=\"sortermergeothers\" class=\"anchor\" href=\"#sortermergeothers\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>sorter.merge(others)</code>\n</h3>\n<p>Merges another <code>Sorter</code> object into the current object where:</p>\n<ul>\n<li>\n<code>others</code> - the other object or array of objects to be merged into the current one. <code>null</code>\nvalues are ignored.</li>\n</ul>\n<p>Returns an array of the topologically sorted nodes. Will throw if a dependency error is found as a result of the\ncombined items.</p>\n<p>If the order in which items have been added to each list matters, use the <code>sort</code> option in <code>sorter.add()</code> with an incrementing\nvalue providing an absolute sort order among all items added to either object.</p>\n",
      "intro": "## Introduction\n\nThe `Topo` object is the container for topologically sorting a list of nodes with non-circular interdependencies.\n",
      "example": "## Example\n\n```js\nconst Topo = require('@hapi/topo');\n\nconst morning = new Topo.Sorter();\n\nmorning.add('Nap', { after: ['breakfast', 'prep'] });\n\nmorning.add([\n    'Make toast',\n    'Pour juice'\n], { before: 'breakfast', group: 'prep' });\n\nmorning.add('Eat breakfast', { group: 'breakfast' });\n\nmorning.nodes;        // ['Make toast', 'Pour juice', 'Eat breakfast', 'Nap']\n```\n",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Topological sorting with grouping support.",
    "forks": 27,
    "stars": 102,
    "date": "2020-08-22T18:16:56Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/topo"
  },
  "vise": {
    "name": "vise",
    "versions": [
      {
        "name": "4.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "4.0.0"
    ],
    "api": false,
    "4.0.0": {
      "menu": "",
      "api": "",
      "intro": "",
      "example": "",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Treat multiple buffers as one.",
    "forks": 11,
    "stars": 6,
    "date": "2020-08-22T19:48:43Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/vise"
  },
  "vision": {
    "name": "vision",
    "versions": [
      {
        "name": "6.0.1",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "6.0.1"
    ],
    "api": true,
    "6.0.1": {
      "menu": "  - [EJS](#ejs)\n  - [Handlebars](#handlebars)\n  - [Pug](#pug)\n  - [Marko](#marko)\n  - [Mustache](#mustache)\n  - [Nunjucks](#nunjucks)\n  - [Twig](#twig)\n- [Registration](#registration)\n- [Views Manager](#views-manager)\n- [`options`](#options)\n- [`manager.registerHelper()`](#managerregisterhelpername-helper)\n- [`manager.render()`](#managerrendertemplate-context-options-callback)\n- [`manager.getEngine()`](#managergetengineext)\n- [`manager.clearCache()`](#managerclearcachetemplate-engine)\n- [Server](#server)\n  - [`server.views()`](#serverviewsoptions)\n  - [`server.render()`](#serverrendertemplate-context-options-callback)\n  - [`server.getViewsManager()`](#servergetviewsmanager)\n- [Requests](#requests)\n  - [`request.render()`](#requestrendertemplate-context-options-callback)\n  - [`request.getViewsManager()`](#requestgetviewsmanager)\n- [The view handler](#the-view-handler)\n- [Response Toolkit Interface](#response-toolkit-interface)\n  - [`h.view()`](#hviewtemplate-context-options)\n  - [`h.getViewsManager()`](#hgetviewsmanager)\n    - [Ex template used in these docs](#ex-template-used-in-these-docs)",
      "api": "<h3>\n<a id=\"ejs\" class=\"anchor\" href=\"#ejs\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>EJS</h3>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Ejs</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'ejs'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Vision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/vision'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">3000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">rootHandler</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">view</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'index'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">title</span>: <span class=\"pl-s\">'examples/ejs/templates/basic | Hapi '</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">version</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">message</span>: <span class=\"pl-s\">'Hello Ejs!'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">provision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Vision</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">views</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">engines</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">ejs</span>: <span class=\"pl-v\">Ejs</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">relativeTo</span>: <span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'examples/ejs/templates/basic'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">handler</span>: <span class=\"pl-en\">rootHandler</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Server running at:'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">info</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">uri</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">provision</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"handlebars\" class=\"anchor\" href=\"#handlebars\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Handlebars</h3>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Handlebars</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'handlebars'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Vision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/vision'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">3000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">rootHandler</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">view</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'index'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">title</span>: <span class=\"pl-s\">'examples/handlebars/templates/basic | hapi '</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">version</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">message</span>: <span class=\"pl-s\">'Hello Handlebars!'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">provision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Vision</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">views</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">engines</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">html</span>: <span class=\"pl-v\">Handlebars</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">relativeTo</span>: <span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'examples/handlebars/templates/basic'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">handler</span>: <span class=\"pl-en\">rootHandler</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Server running at:'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">info</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">uri</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">provision</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"pug\" class=\"anchor\" href=\"#pug\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Pug</h3>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Path</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'path'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Pug</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'pug'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Vision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/vision'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">3000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">rootHandler</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">view</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'index'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">title</span>: <span class=\"pl-s\">'examples/pug/templates | Hapi '</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">version</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">message</span>: <span class=\"pl-s\">'Hello Pug!'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">provision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Vision</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">views</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">engines</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">pug</span>: <span class=\"pl-v\">Pug</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">relativeTo</span>: <span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'examples/pug/templates'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">compileOptions</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c\">// By default Pug uses relative paths (e.g. ../root.pug), when using absolute paths (e.g. include /root.pug), basedir is prepended.</span>\n            <span class=\"pl-c\">// https://pugjs.org/language/includes.html</span>\n            <span class=\"pl-c1\">basedir</span>: <span class=\"pl-v\">Path</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">join</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'examples/pug/templates'</span><span class=\"pl-kos\">)</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">handler</span>: <span class=\"pl-en\">rootHandler</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Server running at:'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">info</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">uri</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">provision</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"marko\" class=\"anchor\" href=\"#marko\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Marko</h3>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Marko</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'marko'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Vision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/vision'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">3000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">rootHandler</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">view</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'index'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">title</span>: <span class=\"pl-s\">'examples/marko/templates | Hapi '</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">version</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">message</span>: <span class=\"pl-s\">'Hello Marko!'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">provision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Vision</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">views</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">engines</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">marko</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-en\">compile</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">src</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">options</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n                    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">opts</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">preserveWhitespace</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">writeToDisk</span>: <span class=\"pl-c1\">false</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n                    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">template</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Marko</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">load</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">options</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">filename</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">opts</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n                    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">context</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n                        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">template</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">renderToString</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">context</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">relativeTo</span>: <span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'examples/marko/templates'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">handler</span>: <span class=\"pl-en\">rootHandler</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Server running at:'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">info</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">uri</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">provision</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"mustache\" class=\"anchor\" href=\"#mustache\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Mustache</h3>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Mustache</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'mustache'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Vision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/vision'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">3000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">rootHandler</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">view</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'index'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">title</span>: <span class=\"pl-s\">'examples/mustache/templates/basic | Hapi '</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">version</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">message</span>: <span class=\"pl-s\">'Hello Mustache!'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">provision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Vision</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">views</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">engines</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">html</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-en\">compile</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">template</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n                    <span class=\"pl-v\">Mustache</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">parse</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">template</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n                    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">context</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n                        <span class=\"pl-k\">return</span> <span class=\"pl-v\">Mustache</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">render</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">template</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">context</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">relativeTo</span>: <span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'examples/mustache/templates/basic'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">handler</span>: <span class=\"pl-en\">rootHandler</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Server running at:'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">info</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">uri</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">provision</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"nunjucks\" class=\"anchor\" href=\"#nunjucks\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Nunjucks</h3>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Nunjucks</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'nunjucks'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Vision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/vision'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">3000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">rootHandler</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">view</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'index'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">title</span>: <span class=\"pl-s\">'examples/nunjucks/templates | Hapi '</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">version</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">message</span>: <span class=\"pl-s\">'Hello Nunjucks!'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">provision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Vision</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">views</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">engines</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">html</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-en\">compile</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">src</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">options</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n                    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">template</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Nunjucks</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">compile</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">src</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">options</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">environment</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n                    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">context</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n                        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">template</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">render</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">context</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n\n                <span class=\"pl-en\">prepare</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">options</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">next</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n                    <span class=\"pl-s1\">options</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">compileOptions</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">environment</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Nunjucks</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">configure</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">options</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">path</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">watch</span> : <span class=\"pl-c1\">false</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n                    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">next</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">relativeTo</span>: <span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'examples/nunjucks/templates'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">handler</span>: <span class=\"pl-en\">rootHandler</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Server running at:'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">info</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">uri</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">provision</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"twig\" class=\"anchor\" href=\"#twig\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Twig</h3>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Twig</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'twig'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Vision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/vision'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">3000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">rootHandler</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">view</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'index'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">title</span>: <span class=\"pl-s\">'examples/twig/templates | Hapi '</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">version</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">message</span>: <span class=\"pl-s\">'Hello Twig!'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">provision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Vision</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">views</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">engines</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">twig</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-en\">compile</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">src</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">options</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n                    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">template</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Twig</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">twig</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">options</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">filename</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">data</span>: <span class=\"pl-s1\">src</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n                    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">context</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n                        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">template</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">render</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">context</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">relativeTo</span>: <span class=\"pl-s1\">__dirname</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'examples/twig/templates'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">handler</span>: <span class=\"pl-en\">rootHandler</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">start</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Server running at:'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">info</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">uri</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">provision</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h2>\n<a id=\"registration\" class=\"anchor\" href=\"#registration\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Registration</h2>\n<p>Vision can be registered multiple times and receives <a href=\"#options\"><code>views manager options</code></a> as registration options.</p>\n<p>Example:</p>\n<pre><code>internals.provision = async () =&gt; {\n\n    await server.register({\n        plugin: require('@hapi/vision'),\n        options: {\n            engines: { html: require('handlebars') },\n            path: __dirname + '/templates'\n        }\n    })\n\n    const context = {\n        title: 'Registration Example',\n        message: 'Hello, World'\n    };\n\n    return server.render('hello', context);\n};\n\ninternals.provision();\n</code></pre>\n<h2>\n<a id=\"views-manager\" class=\"anchor\" href=\"#views-manager\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Views Manager</h2>\n<p>The Views Manager is configured with <a href=\"#registration\"><code>registration options</code></a> or by calling <a href=\"#serverviewsoptions\"><code>server.views(options)</code></a></p>\n<h2>\n<a id=\"options\" class=\"anchor\" href=\"#options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>options</code>\n</h2>\n<ul>\n<li>\n<p><code>engines</code> - required object where each key is a file extension (e.g. 'html', 'hbr'), mapped\nto the npm module used for rendering the templates. Alternatively, the extension can be\nmapped to an object with the following options:</p>\n<ul>\n<li>\n<code>module</code> - the npm module used for rendering the templates. The module object must\ncontain the <code>compile()</code> function:\n<ul>\n<li>\n<code>compile()</code> - the rendering function. The required function signature depends on the\n<code>compileMode</code> settings (see below). If <code>compileMode</code> is <code>'sync'</code>, the signature is\n<code>compile(template, options)</code>, the return value is a function with signature\n<code>function(context, options)</code> (the compiled sync template), and the method is allowed to throw errors. If\n<code>compileMode</code> is <code>'async'</code>, the signature is <code>compile(template, options, next)</code>\nwhere <code>next</code> has the signature <code>function(err, compiled)</code>, <code>compiled</code> is a\nfunction with signature <code>function(context, options, callback)</code> (the compiled async template) and <code>callback</code> has the\nsignature <code>function(err, rendered)</code>.</li>\n<li>\n<code>prepare(config, next)</code> - initializes additional engine state.\nThe <code>config</code> object is the engine configuration object allowing updates to be made.\nThis is useful for engines like Nunjucks that rely on additional state for rendering.\n<code>next</code> has the signature <code>function(err)</code>.</li>\n<li>\n<code>registerPartial(name, src)</code> - registers a partial for use during template rendering.\nThe <code>name</code> is the partial path that templates should use to reference the partial and\n<code>src</code> is the uncompiled template string for the partial.</li>\n<li>\n<code>registerHelper(name, helper)</code> - registers a helper for use during template rendering.\nThe <code>name</code> is the name that templates should use to reference the helper and <code>helper</code>\nis the function that will be invoked when the helper is called.</li>\n</ul>\n</li>\n<li>any of the <code>views</code> options listed below (except <code>defaultExtension</code>) to override the\ndefaults for a specific engine.</li>\n</ul>\n</li>\n<li>\n<p><code>compileMode</code> - specify whether the engine <code>compile()</code> method is <code>'sync'</code> or <code>'async'</code>.\nDefaults to <code>'sync'</code>.</p>\n</li>\n<li>\n<p><code>defaultExtension</code> - defines the default filename extension to append to template names when\nmultiple engines are configured and not explicit extension is provided for a given template.\nNo default value.</p>\n</li>\n<li>\n<p><code>path</code> - the root file path, or array of file paths, used to resolve and load the templates identified when calling\n<a href=\"#hviewtemplate-context-options\"><code>h.view()</code></a>.\nDefaults to current working directory.</p>\n</li>\n<li>\n<p><code>partialsPath</code> - the root file path, or array of file paths, where partials are located. Partials are small segments\nof template code that can be nested and reused throughout other templates. Defaults to no\npartials support (empty path).</p>\n</li>\n<li>\n<p><code>helpersPath</code> - the directory path, or array of directory paths, where helpers are located. Helpers are functions used\nwithin templates to perform transformations and other data manipulations using the template\ncontext or other inputs. Each valid template file in the helpers directory is loaded and the file name\nis used as the helper name. The files must export a single method with the signature\n<code>function(context)</code> and return a string. Sub-folders are not supported and are ignored.\nDefaults to no helpers support (empty path). Note that pug does not support loading helpers\nthis way.</p>\n</li>\n<li>\n<p><code>relativeTo</code> - a base path used as prefix for <code>path</code> and <code>partialsPath</code>. No default.</p>\n</li>\n<li>\n<p><code>layout</code> - if set to <code>true</code> or a layout filename, layout support is enabled. A layout is a\nsingle template file used as the parent template for other view templates in the same engine.\nIf <code>true</code>, the layout template name must be 'layout.ext' where 'ext' is the engine's\nextension. Otherwise, the provided filename is suffixed with the engine's extension and\nloaded. Disable <code>layout</code> when using Jade as it will handle including any layout files\nindependently. Defaults to <code>false</code>.</p>\n</li>\n<li>\n<p><code>layoutPath</code> - the root file path, or array of file paths, where layout templates are located (using the <code>relativeTo</code>\nprefix if present). Defaults to <code>path</code>.</p>\n</li>\n<li>\n<p><code>layoutKeyword</code> - the key used by the template engine to denote where primary template\ncontent should go. Defaults to <code>'content'</code>.</p>\n</li>\n<li>\n<p><code>encoding</code> - the text encoding used by the templates when reading the files and outputting\nthe result. Defaults to <code>'utf8'</code>.</p>\n</li>\n<li>\n<p><code>isCached</code> - if set to <code>false</code>, templates will not be cached (thus will be read from file on\nevery use). Defaults to <code>true</code>.</p>\n</li>\n<li>\n<p><code>allowAbsolutePaths</code> - if set to <code>true</code>, allows absolute template paths passed to\n<a href=\"#hviewtemplate-context-options\"><code>h.view()</code></a>.\nDefaults to <code>false</code>.</p>\n</li>\n<li>\n<p><code>allowInsecureAccess</code> - if set to <code>true</code>, allows template paths passed to\n<a href=\"#hviewtemplate-context-options\"><code>h.view()</code></a>\nto contain '../'. Defaults to <code>false</code>.</p>\n</li>\n<li>\n<p><code>compileOptions</code> - options object passed to the engine's compile function. Defaults to empty\noptions <code>{}</code>.</p>\n</li>\n<li>\n<p><code>runtimeOptions</code> - options object passed to the returned function from the compile operation.\nDefaults to empty options <code>{}</code>.</p>\n</li>\n<li>\n<p><code>contentType</code> - the content type of the engine results. Defaults to <code>'text/html'</code>.</p>\n</li>\n<li>\n<p><code>context</code> - a global context used with all templates. The global context option can be either\nan object or a function that takes the <a href=\"https://github.com/hapijs/hapi/blob/master/API.md#request\"><code>request</code></a>\nas its only argument and returns a context object. The <a href=\"https://github.com/hapijs/hapi/blob/master/API.md#request\"><code>request</code></a> object is only provided when using\nthe <a href=\"#the-view-handler\">view handler</a> or <a href=\"#hviewtemplate-context-options\"><code>h.view()</code></a>. When using\n<a href=\"#serverrendertemplate-context-options-callback\"><code>server.render()</code></a> or\n<a href=\"#requestrendertemplate-context-options-callback\"><code>request.render()</code></a>, the <a href=\"https://github.com/hapijs/hapi/blob/master/API.md#request\"><code>request</code></a> argument will be <code>null</code>. When rendering\nviews, the global context will be merged with any context object specified on the handler or using\n<a href=\"#hviewtemplate-context-options\"><code>h.view()</code></a>. When multiple context objects are used, values from the global\ncontext always have lowest precedence.</p>\n</li>\n</ul>\n<h2>\n<a id=\"managerregisterhelpername-helper\" class=\"anchor\" href=\"#managerregisterhelpername-helper\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>manager.registerHelper(name, helper)</code>\n</h2>\n<p>Registers a helper, on all configured engines that have a <code>registerHelper()</code> method, for use during template rendering. Engines without a <code>registerHelper()</code> method will be skipped. The <code>name</code> is the name that templates should use to reference the helper and <code>helper</code> is the function that will be invoked when the helper is called.</p>\n<h2>\n<a id=\"managerrendertemplate-context-options-callback\" class=\"anchor\" href=\"#managerrendertemplate-context-options-callback\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>manager.render(template, context, options, [callback])</code>\n</h2>\n<p>Renders a template. This is typically not needed and it is usually more convenient to use <a href=\"#serverrendertemplate-context-options-callback\"><code>server.render()</code></a>.</p>\n<h2>\n<a id=\"managergetengineext\" class=\"anchor\" href=\"#managergetengineext\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>manager.getEngine(ext)</code>\n</h2>\n<ul>\n<li>\n<code>ext</code>- The extension used when registering the engine -- check the keys used when configuring <code>engines</code> in <a href=\"#options\"><code>views manager options</code></a>\n</li>\n</ul>\n<h2>\n<a id=\"managerclearcachetemplate-engine\" class=\"anchor\" href=\"#managerclearcachetemplate-engine\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>manager.clearCache(template, [engine])</code>\n</h2>\n<ul>\n<li>\n<code>template</code> - the template filename and path, relative to the views manager templates path (<code>path</code>\nor <code>relativeTo</code>).</li>\n<li>\n<code>engine</code> - the engine returned by <code>manager.getEngine(ext)</code>\n</li>\n</ul>\n<h2>\n<a id=\"server\" class=\"anchor\" href=\"#server\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Server</h2>\n<h3>\n<a id=\"serverviewsoptions\" class=\"anchor\" href=\"#serverviewsoptions\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>server.views(options)</code>\n</h3>\n<ul>\n<li>Initializes a plugin's view manager by receiving <a href=\"#options\"><code>manager options</code></a>\n</li>\n<li>Returns the newly created <a href=\"#views-manager\">view manager</a> for the plugin that called it.</li>\n</ul>\n<h3>\n<a id=\"serverrendertemplate-context-options-callback\" class=\"anchor\" href=\"#serverrendertemplate-context-options-callback\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>server.render(template, context, [options], [callback])</code>\n</h3>\n<p>Uses the server views manager to render a template where:</p>\n<ul>\n<li>\n<code>template</code> - the template filename and path, relative to the views manager templates path (<code>path</code>\nor <code>relativeTo</code>).</li>\n<li>\n<code>context</code> - optional object used by the template to render context-specific result. Defaults to\nno context (<code>{}</code>).</li>\n<li>\n<code>options</code> - optional object used to override the views manager configuration.</li>\n<li>callback - the callback function with signature function (err, rendered, config) where:\n<ul>\n<li>\n<code>err</code> - the rendering error if any.</li>\n<li>\n<code>rendered</code> - the result view string.</li>\n<li>\n<code>config</code> - the configuration used to render the template.</li>\n</ul>\n</li>\n</ul>\n<p>If no <code>callback</code> is provided, a <code>Promise</code> object is returned. The returned promise is resolved with only the\nrendered content and not the configuration object.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">3000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">internals</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">provision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/vision'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">views</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">engines</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">html</span>: <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'handlebars'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s1\">__dirname</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s\">'/templates'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">context</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">title</span>: <span class=\"pl-s\">'Views Example'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">message</span>: <span class=\"pl-s\">'Hello, World'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">render</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'hello'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">context</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">provision</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"servergetviewsmanager\" class=\"anchor\" href=\"#servergetviewsmanager\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>server.getViewsManager()</code>\n</h3>\n<p>Returns the closest <a href=\"#views-manager\">Views manager</a> to your <code>realm</code> (either on your realm or inherited from an ancestor realm)</p>\n<h2>\n<a id=\"requests\" class=\"anchor\" href=\"#requests\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Requests</h2>\n<h3>\n<a id=\"requestrendertemplate-context-options-callback\" class=\"anchor\" href=\"#requestrendertemplate-context-options-callback\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>request.render(template, context, [options], [callback])</code>\n</h3>\n<p><a href=\"#requestrendertemplate-context-options-callback\"><code>request.render()</code></a> works the same way as <a href=\"#serverrendertemplate-context-options-callback\"><code>server.render()</code></a>\nbut is for use inside of request handlers. <a href=\"#serverrendertemplate-context-options-callback\"><code>server.render()</code></a>\ndoes not work inside request handlers when called via <code>request.server.render()</code> if the view manager was created\nby a plugin. This is because the <code>request.server</code> object does not have access to the plugin realm where the\nview manager was configured. <a href=\"#requestrendertemplate-context-options-callback\"><code>request.render()</code></a> gets its realm from the route that the request was bound to.</p>\n<p>Note that this will not work in <code>onRequest</code> extensions added by the plugin because the route isn't yet set at\nthis point in the request lifecycle and the <a href=\"#requestrendertemplate-context-options-callback\"><code>request.render()</code></a> method will produce the same limited results\n<a href=\"#serverrendertemplate-context-options-callback\"><code>server.render()</code></a> can. When using the <code>onRequest</code> extension, use the <a href=\"#response-toolkit-interface\"><code>h</code> response toolkit interface</a> instead.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">3000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">internals</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">provision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/vision'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">views</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">engines</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">html</span>: <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'handlebars'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s1\">__dirname</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s\">'/templates'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/view'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-en\">handler</span>: <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n            <span class=\"pl-k\">return</span> <span class=\"pl-s1\">request</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">render</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">message</span>: <span class=\"pl-s\">'hello'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">provision</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"requestgetviewsmanager\" class=\"anchor\" href=\"#requestgetviewsmanager\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>request.getViewsManager()</code>\n</h3>\n<p>Returns the closest <a href=\"#views-manager\">Views manager</a> to your <code>realm</code> (either on your realm or inherited from an ancestor realm)</p>\n<h2>\n<a id=\"the-view-handler\" class=\"anchor\" href=\"#the-view-handler\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>The view handler</h2>\n<p>The <code>view</code> <a href=\"https://github.com/hapijs/hapi/blob/master/API.md#serverdecoratetype-property-method-options\">handler</a> can be used with routes registered in the same realm as the view manager. The\nhandler takes an <code>options</code> parameter that can be either a string or an object. When the <code>options</code>\nparameter is a string, it should be the filename and path of the template relative to the templates\npath configured via the views manager. When the <code>options</code> parameter is an object, it may have the\nfollowing keys:</p>\n<ul>\n<li>\n<code>template</code> - the template filename and path, relative to the templates path configured via the\nserver views manager.</li>\n<li>\n<code>context</code> - optional object used by the template to render context-specific result. Defaults to\nno context <code>{}</code>.</li>\n<li>\n<code>options</code> - optional object used to override the server's views manager configuration for this\nresponse. Cannot override <code>isCached</code>, <code>partialsPath</code>, or <code>helpersPath</code> which are only loaded at\ninitialization.</li>\n</ul>\n<p>The rendering <code>context</code> contains the <code>params</code>, <code>payload</code>, <code>query</code>, and <code>pre</code> values from the\n<a href=\"https://github.com/hapijs/hapi/blob/master/API.md#request\">request</a> by default (these\ncan be overriden by values explicitly set via the <code>options</code>).</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">3000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">internals</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">provision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/vision'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">views</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">engines</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">html</span>: <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'handlebars'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s1\">__dirname</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s\">'/templates'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">handler</span>: <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">view</span>: <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">template</span>: <span class=\"pl-s\">'hello'</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">context</span>: <span class=\"pl-kos\">{</span>\n                    <span class=\"pl-c1\">title</span>: <span class=\"pl-s\">'Views Example'</span><span class=\"pl-kos\">,</span>\n                    <span class=\"pl-c1\">message</span>: <span class=\"pl-s\">'Hello, World'</span>\n                <span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">provision</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h2>\n<a id=\"response-toolkit-interface\" class=\"anchor\" href=\"#response-toolkit-interface\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Response Toolkit Interface</h2>\n<h3>\n<a id=\"hviewtemplate-context-options\" class=\"anchor\" href=\"#hviewtemplate-context-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>h.view(template, [context, [options]])</code>\n</h3>\n<p>Uses the response <a href=\"https://github.com/hapijs/hapi/blob/master/API.md#response-toolkit\">toolkit</a> interface by means of returning control over to the router with a templatized view\nresponse where:</p>\n<ul>\n<li>\n<code>template</code> - the template filename and path, relative to the templates path configured via the\nserver views manager.</li>\n<li>\n<code>context</code> - optional object used by the template to render context-specific result. Defaults to\nno context <code>{}</code>.</li>\n<li>\n<code>options</code> - optional object used to override the server's views manager configuration for this\nresponse. Cannot override <code>isCached</code>, <code>partialsPath</code>, or <code>helpersPath</code> which are only loaded at\ninitialization.</li>\n</ul>\n<p>Returns a <a href=\"https://github.com/hapijs/hapi/blob/master/API.md#response-object\">response object</a>.\nThe generated response will have the <code>variety</code> property set to <code>view</code>.</p>\n<p>The same <a href=\"https://github.com/hapijs/hapi/blob/master/API.md#lifecycle-workflow\">lifecycle workflow</a> applies.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Hapi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/hapi'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">server</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Hapi</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">Server</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">port</span>: <span class=\"pl-c1\">3000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">internals</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">provision</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">register</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/vision'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">views</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">engines</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">html</span>: <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'handlebars'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c1\">path</span>: <span class=\"pl-s1\">__dirname</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s\">'/templates'</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">const</span> <span class=\"pl-en\">rootHandler</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">request</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">context</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">title</span>: <span class=\"pl-s\">'Views Example'</span><span class=\"pl-kos\">,</span>\n            <span class=\"pl-c1\">message</span>: <span class=\"pl-s\">'Hello, World'</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">h</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">view</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'hello'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">context</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-s1\">server</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">route</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">method</span>: <span class=\"pl-s\">'GET'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">path</span>: <span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">handler</span>: <span class=\"pl-en\">rootHandler</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-s1\">internals</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">provision</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"hgetviewsmanager\" class=\"anchor\" href=\"#hgetviewsmanager\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>h.getViewsManager()</code>\n</h3>\n<p>Returns the closest <a href=\"#views-manager\">Views manager</a> to your <code>realm</code> (either on your realm or inherited from an ancestor realm)</p>\n<h4>\n<a id=\"ex-template-used-in-these-docs\" class=\"anchor\" href=\"#ex-template-used-in-these-docs\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Ex template used in these docs</h4>\n<p><strong>templates/hello.html</strong></p>\n<div class=\"highlight highlight-text-html-basic\"><pre><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">html</span><span class=\"pl-kos\">&gt;</span>\n    <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">head</span><span class=\"pl-kos\">&gt;</span>\n        <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">title</span><span class=\"pl-kos\">&gt;</span>{{title}}<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">title</span><span class=\"pl-kos\">&gt;</span>\n    <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">head</span><span class=\"pl-kos\">&gt;</span>\n    <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">body</span><span class=\"pl-kos\">&gt;</span>\n        <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">div</span><span class=\"pl-kos\">&gt;</span>\n            <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">h1</span><span class=\"pl-kos\">&gt;</span>{{message}}<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">h1</span><span class=\"pl-kos\">&gt;</span>\n        <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">div</span><span class=\"pl-kos\">&gt;</span>\n    <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">body</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">html</span><span class=\"pl-kos\">&gt;</span></pre></div>\n",
      "intro": "## Introduction\n\n**vision** decorates the [server](https://hapi.dev/api#server),\n[request](https://hapi.dev/api#request), and\n`h` response [toolkit](https://hapi.dev/api#response-toolkit) interfaces with additional\nmethods for managing view engines that can be used to render templated responses.\n\n**vision** also provides a built-in [handler](https://hapi.dev/api#-serverdecoratetype-property-method-options) implementation for creating templated responses.\n\nMost interaction with **vision** is done via the `h` [response toolkit](https://hapi.dev/api#response-toolkit)\nand [server](https://hapi.dev/api#server) interfaces.\n",
      "example": "## Example\n\n```js\nconst Hapi = require('@hapi/hapi');\nconst Vision = require('@hapi/vision');\n\nconst server = Hapi.Server({ port: 3000 });\n\nconst provision = async () => {\n\n    await server.register(Vision);\n    await server.start();\n\n    console.log('Server running at:', server.info.uri);\n};\n\nprovision();\n```\n\nThe examples in the `examples` folder can be run with `node`.\n\n```\ngit clone https://github.com/hapijs/vision.git && cd vision\nnpm install\n\nnode examples/handlebars\n```\n\n:point_up: That command will run the handlebars basic template.\nThere are three more examples in there: for helpers, layout, and partials.\n\nUse this hierarchy to know which commands to run, e.g.\n```\nnode examples/mustache\nnode examples/mustache/partials\nnode examples/jsx\n```\n\n```\n- cms // A bare-bones Content Management System with a WYSIWYG editor\n- ejs\n  - layout\n- handlebars\n  - helpers\n  - layout\n  - partials\n- jsx // React server-side rendering with `hapi-react-views`\n- marko\n- mixed // Using multiple render engines (handlebars and pug)\n- mustache\n  - layout\n  - partials\n- nunjucks\n- pug\n- twig\n```\n\n**vision** is compatible with most major templating engines out of the box. Engines that don't follow\nthe normal API pattern can still be used by mapping their API to the [**vision** API](https://hapi.dev/family/vision/). Some of the examples below use the `compile` and `prepare` methods which are part of the API.\n",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "Template rendering support for hapi.js.",
    "forks": 66,
    "stars": 186,
    "date": "2020-08-22T18:25:28Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/vision"
  },
  "wreck": {
    "name": "wreck",
    "versions": [
      {
        "name": "17.0.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "17.0.0"
    ],
    "api": true,
    "17.0.0": {
      "menu": "- [`defaults()`](#defaultsoptions)\n- [`request()`](#requestmethod-uri-options)\n- [`read()`](#readresponse-options)\n  - [Notes about gunzip](#notes-about-gunzip)\n- [`get()`](#geturi-options)\n- [`post()`](#posturi-options)\n- [`patch()`](#patchuri-options)\n- [`put()`](#puturi-options)\n- [`delete()`](#deleteuri-options)\n- [`toReadableStream()`](#toreadablestreampayload-encoding)\n- [`parseCacheControl()`](#parsecachecontrolfield)\n- [`agents`](#agents)\n- [Events](#events)\n  - [`preRequest`](#prerequest)\n  - [`request`](#request)\n  - [`response`](#response)",
      "api": "<h3>\n<a id=\"defaultsoptions\" class=\"anchor\" href=\"#defaultsoptions\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>defaults(options)</code>\n</h3>\n<p>Returns a <em>new</em> instance of Wreck which merges the provided <code>options</code> with those provided on a per-request basis. You can call defaults repeatedly to build up multiple clients.</p>\n<ul>\n<li>\n<code>options</code> - Config object containing settings for both <code>request</code> and <code>read</code> operations as well as:\n<ul>\n<li>\n<code>agents</code> - an object that contains the agents for pooling connections with the following required keys:\n<ul>\n<li>\n<code>http</code> - an <a href=\"http://nodejs.org/api/http.html#http_class_http_agent\" rel=\"nofollow\">HTTP Agent</a> instance.</li>\n<li>\n<code>https</code> - an <a href=\"https://nodejs.org/api/https.html#https_class_https_agent\" rel=\"nofollow\">HTTPS Agent</a> instance.</li>\n<li>\n<code>httpsAllowUnauthorized</code> - an <a href=\"https://nodejs.org/api/https.html#https_class_https_agent\" rel=\"nofollow\">HTTPS Agent</a> instance.</li>\n</ul>\n</li>\n<li>\n<code>events</code> - if <code>true</code>, enables events. Events are available via the <code>events</code> emitter property.</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"requestmethod-uri-options\" class=\"anchor\" href=\"#requestmethod-uri-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>request(method, uri, [options])</code>\n</h3>\n<p>Initiate an HTTP request.</p>\n<ul>\n<li>\n<p><code>method</code> - a string specifying the HTTP request method. Defaults to <code>'GET'</code>.</p>\n</li>\n<li>\n<p><code>uri</code> - the URI of the requested resource.</p>\n</li>\n<li>\n<p><code>options</code> - optional configuration object with the following keys:</p>\n<ul>\n<li>\n<p><code>agent</code> - Node Core <a href=\"http://nodejs.org/api/http.html#http_class_http_agent\" rel=\"nofollow\">http.Agent</a>. Defaults to either <code>wreck.agents.http</code> or <code>wreck.agents.https</code>.  Setting to <code>false</code> disables agent pooling.</p>\n</li>\n<li>\n<p><code>baseUrl</code> - fully qualified URL string used as the base URL. Most useful with <code>Wreck.defaults()</code> when making multiple requests to the same domain. For example, if <code>baseUrl</code> is <code>https://example.com/api/</code>, then requesting <code>/end/point?test=true</code> will fetch <code>https://example.com/end/point?test=true</code>. Any query string in the <code>baseUrl</code> will be overwritten with the query string in the <code>uri</code> When <code>baseUrl</code> is given, <code>uri</code> must also be a string. In order to retain the <code>/api/</code> portion of the <code>baseUrl</code> in the example, the <code>path</code> must not start with a leading <code>/</code> and the <code>baseUrl</code> must end with a trailing <code>/</code>.</p>\n</li>\n<li>\n<p><code>beforeRedirect</code> - a function to call before a redirect is triggered, using the signature <code>async function(redirectMethod, statusCode, location, resHeaders, redirectOptions, next)</code> where:\n- <code>redirectMethod</code> - A string specifying the redirect method.\n- <code>statusCode</code> - HTTP status code of the response that triggered the redirect.\n- <code>location</code> - The redirect location string.\n- <code>resHeaders</code> - An object with the headers received as part of the redirection response.\n- <code>redirectOptions</code> - Options that will be applied to the redirect request. Changes to this object are applied to the redirection request.\n- <code>next</code> - the callback function called to perform the redirection using signature <code>function()</code>.</p>\n</li>\n<li>\n<p><code>ciphers</code> - <a href=\"https://nodejs.org/api/tls.html#tls_modifying_the_default_tls_cipher_suite\" rel=\"nofollow\">TLS</a> list of TLS ciphers to override node's default. The possible values depend on your installation of OpenSSL. Read the official OpenSSL docs for possible <a href=\"https://www.openssl.org/docs/man1.0.2/apps/ciphers.html#CIPHER-LIST-FORMAT\" rel=\"nofollow\">TLS_CIPHERS</a>.</p>\n</li>\n<li>\n<p><code>headers</code> - an object containing the request headers.</p>\n</li>\n<li>\n<p><code>payload</code> - the request body as a string, Buffer, readable stream, or an object that can be serialized using <code>JSON.stringify()</code>.</p>\n</li>\n<li>\n<p><code>redirect303</code> - if <code>true</code>, a HTTP 303 status code will redirect using a GET method. Defaults to <code>false</code> (no redirection on 303).</p>\n</li>\n<li>\n<p><code>redirected</code> - a function to call when a redirect was triggered, using the signature <code>function(statusCode, location, req)</code> where:</p>\n<ul>\n<li>\n<code>statusCode</code> - HTTP status code of the response that triggered the redirect.</li>\n<li>\n<code>location</code> - The redirected location string.</li>\n<li>\n<code>req</code> - The new <a href=\"http://nodejs.org/api/http.html#http_class_http_clientrequest\" rel=\"nofollow\">ClientRequest</a> object which replaces the one initially returned.</li>\n</ul>\n</li>\n<li>\n<p><code>redirectMethod</code> - override the HTTP method used when following 301 and 302 redirections. Defaults to the original method.</p>\n</li>\n<li>\n<p><code>redirects</code> - the maximum number of redirects to follow. Default to <code>false</code> (no redirects).</p>\n</li>\n<li>\n<p><code>rejectUnauthorized</code> - <a href=\"http://nodejs.org/api/tls.html\" rel=\"nofollow\">TLS</a> flag indicating whether the client should reject a response from a server with invalid certificates. This cannot be set at the same time as the <code>agent</code> option is set.</p>\n</li>\n<li>\n<p><code>secureProtocol</code> - <a href=\"http://nodejs.org/api/tls.html\" rel=\"nofollow\">TLS</a> flag indicating the SSL method to use, e.g. <code>SSLv3_method</code> to force SSL version 3. The possible values depend on your installation of OpenSSL. Read the official OpenSSL docs for possible <a href=\"http://www.openssl.org/docs/ssl/ssl.html#DEALING_WITH_PROTOCOL_METHODS\" rel=\"nofollow\">SSL_METHODS</a>.</p>\n</li>\n<li>\n<p><code>socketPath</code> - a UNIX socket path string for direct server connection.</p>\n</li>\n<li>\n<p><code>timeout</code> - number of milliseconds to wait without receiving a response before aborting the request. Defaults to <code>0</code> (no limit).</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>Returns a promise that resolves into a node response object. The promise has a <code>req</code> property which is the instance of the node.js <a href=\"http://nodejs.org/api/http.html#http_class_http_clientrequest\" rel=\"nofollow\">ClientRequest</a> object.</p>\n<h3>\n<a id=\"readresponse-options\" class=\"anchor\" href=\"#readresponse-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>read(response, options)</code>\n</h3>\n<ul>\n<li>\n<p><code>response</code> - An HTTP Incoming Message object.</p>\n</li>\n<li>\n<p><code>options</code> - <code>null</code> or a configuration object with the following optional keys:</p>\n<ul>\n<li>\n<p><code>gunzip</code> - determines how to handle gzipped payloads. Defaults to <code>false</code>.</p>\n<ul>\n<li>\n<code>true</code> - only try to gunzip if the response indicates a gzip content-encoding.</li>\n<li>\n<code>false</code> - explicitly disable gunzipping.</li>\n<li>\n<code>force</code> - try to gunzip regardless of the content-encoding header.</li>\n</ul>\n</li>\n<li>\n<p><code>json</code> - determines how to parse the payload as JSON:</p>\n<ul>\n<li>\n<code>false</code> - leaves payload raw. This is the default value.</li>\n<li>\n<code>true</code> - only try <code>JSON.parse</code> if the response indicates a JSON content-type.</li>\n<li>\n<code>'strict'</code> - as <code>true</code>, except returns an error for non-JSON content-type.</li>\n<li>\n<code>'force'</code> - try <code>JSON.parse</code> regardless of the content-type header.</li>\n</ul>\n</li>\n<li>\n<p><code>maxBytes</code> - the maximum allowed response payload size. Defaults to <code>0</code> (no limit).</p>\n</li>\n<li>\n<p><code>timeout</code> - the number of milliseconds to wait while reading data before aborting handling of the response. Defaults to <code>0</code>.</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>Returns a promise that resolves into the payload in the form of a Buffer or (optionally) parsed JavaScript object (JSON).</p>\n<h4>\n<a id=\"notes-about-gunzip\" class=\"anchor\" href=\"#notes-about-gunzip\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Notes about gunzip</h4>\n<p>When using gunzip, HTTP headers <code>Content-Encoding</code>, <code>Content-Length</code>, <code>Content-Range</code> and <code>ETag</code> won't reflect the reality as the payload has been uncompressed.</p>\n<h3>\n<a id=\"geturi-options\" class=\"anchor\" href=\"#geturi-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>get(uri, [options])</code>\n</h3>\n<p>Convenience method for GET operations.</p>\n<ul>\n<li>\n<code>uri</code> - The URI of the requested resource.</li>\n<li>\n<code>options</code> - Optional config object containing settings for both <code>request</code> and\n<code>read</code> operations.</li>\n</ul>\n<p>Returns a promise that resolves into an object with the following properties:\n- <code>res</code> - The <a href=\"https://nodejs.org/api/http.html#http_class_http_incomingmessage\" rel=\"nofollow\">HTTP Incoming Message</a>\nobject, which is a readable stream that has \"ended\" and contains no more data to read.\n- <code>payload</code> - The payload in the form of a Buffer or (optionally) parsed JavaScript object (JSON).</p>\n<p>Throws any error that may have occurred during handling of the request or a Boom error object if the response has an error status\ncode (i.e. 4xx or 5xx). If the error is a boom error object it will have the following properties in addition to the standard boom\nproperties:\n- <code>data.isResponseError</code> - boolean, indicates if the error is a result of an error response status code\n- <code>data.headers</code> - object containing the response headers\n- <code>data.payload</code> - the payload in the form of a Buffer or as a parsed object\n- <code>data.res</code> - the <a href=\"https://nodejs.org/api/http.html#http_class_http_incomingmessage\" rel=\"nofollow\">HTTP Incoming Message</a> object</p>\n<h3>\n<a id=\"posturi-options\" class=\"anchor\" href=\"#posturi-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>post(uri, [options])</code>\n</h3>\n<p>Convenience method for POST operations.</p>\n<ul>\n<li>\n<code>uri</code> - The URI of the requested resource.</li>\n<li>\n<code>options</code> - Optional config object containing settings for both <code>request</code> and\n<code>read</code> operations.</li>\n</ul>\n<p>Returns a promise that resolves into an object with the following properties:\n- <code>res</code> - The <a href=\"https://nodejs.org/api/http.html#http_class_http_incomingmessage\" rel=\"nofollow\">HTTP Incoming Message</a>\nobject, which is a readable stream that has \"ended\" and contains no more data to read.\n- <code>payload</code> - The payload in the form of a Buffer or (optionally) parsed JavaScript object (JSON).</p>\n<p>Throws any error that may have occurred during handling of the request or a Boom error object if the response has an error status\ncode (i.e. 4xx or 5xx). If the error is a boom error object it will have the following properties in addition to the standard boom\nproperties:\n- <code>data.isResponseError</code> - boolean, indicates if the error is a result of an error response status code\n- <code>data.headers</code> - object containing the response headers\n- <code>data.payload</code> - the payload in the form of a Buffer or as a parsed object\n- <code>data.res</code> - the <a href=\"https://nodejs.org/api/http.html#http_class_http_incomingmessage\" rel=\"nofollow\">HTTP Incoming Message</a> object</p>\n<h3>\n<a id=\"patchuri-options\" class=\"anchor\" href=\"#patchuri-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>patch(uri, [options])</code>\n</h3>\n<p>Convenience method for PATCH operations.</p>\n<ul>\n<li>\n<code>uri</code> - The URI of the requested resource.</li>\n<li>\n<code>options</code> - Optional config object containing settings for both <code>request</code> and\n<code>read</code> operations.</li>\n</ul>\n<p>Returns a promise that resolves into an object with the following properties:\n- <code>res</code> - The <a href=\"https://nodejs.org/api/http.html#http_class_http_incomingmessage\" rel=\"nofollow\">HTTP Incoming Message</a>\nobject, which is a readable stream that has \"ended\" and contains no more data to read.\n- <code>payload</code> - The payload in the form of a Buffer or (optionally) parsed JavaScript object (JSON).</p>\n<p>Throws any error that may have occurred during handling of the request or a Boom error object if the response has an error status\ncode (i.e. 4xx or 5xx). If the error is a boom error object it will have the following properties in addition to the standard boom\nproperties:\n- <code>data.isResponseError</code> - boolean, indicates if the error is a result of an error response status code\n- <code>data.headers</code> - object containing the response headers\n- <code>data.payload</code> - the payload in the form of a Buffer or as a parsed object\n- <code>data.res</code> - the <a href=\"https://nodejs.org/api/http.html#http_class_http_incomingmessage\" rel=\"nofollow\">HTTP Incoming Message</a> object</p>\n<h3>\n<a id=\"puturi-options\" class=\"anchor\" href=\"#puturi-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>put(uri, [options])</code>\n</h3>\n<p>Convenience method for PUT operations.</p>\n<ul>\n<li>\n<code>uri</code> - The URI of the requested resource.</li>\n<li>\n<code>options</code> - Optional config object containing settings for both <code>request</code> and\n<code>read</code> operations.</li>\n</ul>\n<p>Returns a promise that resolves into an object with the following properties:\n- <code>res</code> - The <a href=\"https://nodejs.org/api/http.html#http_class_http_incomingmessage\" rel=\"nofollow\">HTTP Incoming Message</a>\nobject, which is a readable stream that has \"ended\" and contains no more data to read.\n- <code>payload</code> - The payload in the form of a Buffer or (optionally) parsed JavaScript object (JSON).</p>\n<p>Throws any error that may have occurred during handling of the request or a Boom error object if the response has an error status\ncode (i.e. 4xx or 5xx). If the error is a boom error object it will have the following properties in addition to the standard boom\nproperties:\n- <code>data.isResponseError</code> - boolean, indicates if the error is a result of an error response status code\n- <code>data.headers</code> - object containing the response headers\n- <code>data.payload</code> - the payload in the form of a Buffer or as a parsed object\n- <code>data.res</code> - the <a href=\"https://nodejs.org/api/http.html#http_class_http_incomingmessage\" rel=\"nofollow\">HTTP Incoming Message</a> object</p>\n<h3>\n<a id=\"deleteuri-options\" class=\"anchor\" href=\"#deleteuri-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>delete(uri, [options])</code>\n</h3>\n<p>Convenience method for DELETE operations.</p>\n<ul>\n<li>\n<code>uri</code> - The URI of the requested resource.</li>\n<li>\n<code>options</code> - Optional config object containing settings for both <code>request</code> and\n<code>read</code> operations.</li>\n</ul>\n<p>Returns a promise that resolves into an object with the following properties:\n- <code>res</code> - The <a href=\"https://nodejs.org/api/http.html#http_class_http_incomingmessage\" rel=\"nofollow\">HTTP Incoming Message</a>\nobject, which is a readable stream that has \"ended\" and contains no more data to read.\n- <code>payload</code> - The payload in the form of a Buffer or (optionally) parsed JavaScript object (JSON).</p>\n<p>Throws any error that may have occurred during handling of the request or a Boom error object if the response has an error status\ncode (i.e. 4xx or 5xx). If the error is a boom error object it will have the following properties in addition to the standard boom\nproperties:\n- <code>data.isResponseError</code> - boolean, indicates if the error is a result of an error response status code\n- <code>data.headers</code> - object containing the response headers\n- <code>data.payload</code> - the payload in the form of a Buffer or as a parsed object\n- <code>data.res</code> - the <a href=\"https://nodejs.org/api/http.html#http_class_http_incomingmessage\" rel=\"nofollow\">HTTP Incoming Message</a> object</p>\n<h3>\n<a id=\"toreadablestreampayload-encoding\" class=\"anchor\" href=\"#toreadablestreampayload-encoding\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>toReadableStream(payload, [encoding])</code>\n</h3>\n<p>Creates a <a href=\"http://nodejs.org/api/stream.html#stream_class_stream_readable\" rel=\"nofollow\">readable stream</a>\nfor the provided payload and encoding.</p>\n<ul>\n<li>\n<code>payload</code> - The Buffer or string to be wrapped in a readable stream.</li>\n<li>\n<code>encoding</code> - The encoding to use. Must be a valid Buffer encoding, such as 'utf8' or 'ascii'.</li>\n</ul>\n\n\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">stream</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Wreck</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toReadableStream</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Buffer</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">from</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Hello'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'ascii'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'ascii'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">read</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">stream</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">read</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// read -&gt; 'Hello'</span></pre></div>\n<h3>\n<a id=\"parsecachecontrolfield\" class=\"anchor\" href=\"#parsecachecontrolfield\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>parseCacheControl(field)</code>\n</h3>\n<p>Parses the provided <em>cache-control</em> request header value into an object containing\na property for each directive and it's value. Boolean directives, such as \"private\"\nor \"no-cache\" will be set to the boolean <code>true</code>.</p>\n<ul>\n<li>\n<code>field</code> - The header cache control value to be parsed.</li>\n</ul>\n\n\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Wreck</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">parseCacheControl</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'private, max-age=0, no-cache'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// result.private -&gt; true</span>\n<span class=\"pl-c\">// result['max-age'] -&gt; 0</span>\n<span class=\"pl-c\">// result['no-cache'] -&gt; true</span></pre></div>\n<h3>\n<a id=\"agents\" class=\"anchor\" href=\"#agents\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>agents</code>\n</h3>\n<p>An object containing the node agents used for pooling connections for <code>http</code> and <code>https</code>. The properties are <code>http</code>, <code>https</code>, and <code>httpsAllowUnauthorized</code> which is an <code>https</code> agent with <code>rejectUnauthorized</code> set to false.  All agents have <code>maxSockets</code> configured to <code>Infinity</code>.  They are each instances of the Node.js <a href=\"http://nodejs.org/api/http.html#http_class_http_agent\" rel=\"nofollow\">Agent</a> and expose the standard properties.</p>\n<p>For example, the following code demonstrates changing <code>maxSockets</code> on the <code>http</code> agent.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-v\">Wreck</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/wreck'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">Wreck</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">agents</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">http</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">maxSockets</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">20</span><span class=\"pl-kos\">;</span></pre></div>\n<p>Below is another example that sets the certificate details for all HTTPS requests.</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-c1\">HTTPS</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'https'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-v\">Wreck</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@hapi/wreck'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-v\">Wreck</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">agents</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">https</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-c1\">HTTPS</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Agent</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n    cert<span class=\"pl-kos\">,</span>\n    key<span class=\"pl-kos\">,</span>\n    ca\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"events\" class=\"anchor\" href=\"#events\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Events</h3>\n<p>To enable events, use <code>Wreck.defaults({ events: true })</code>. Events are available via the <code>events</code> emitter attached to the client returned by <code>Wreck.defaults()</code>.</p>\n<h4>\n<a id=\"prerequest\" class=\"anchor\" href=\"#prerequest\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>preRequest</code>\n</h4>\n<p>The request event is emitted just before <em>wreck</em> creates a request.  The\nhandler should accept the following arguments <code>(uri, options)</code> where:</p>\n<ul>\n<li>\n<code>uri</code> - the result of <code>new URL(uri)</code>. This will provide information about\nthe resource requested.  Also includes the headers and method.</li>\n<li>\n<code>options</code> - the options passed into the request function.  This will include\na payload if there is one.</li>\n</ul>\n<p>Since the <code>preRequest</code> event executes on a global event handler, you can intercept\nand decorate <code>uri</code> and <code>options</code> before a request is created.</p>\n<h4>\n<a id=\"request\" class=\"anchor\" href=\"#request\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>request</code>\n</h4>\n<p>The request event is emitted just after <em>wreck</em> creates a request.  The handler should accept the following arguments <code>(req)</code> where:</p>\n<ul>\n<li>\n<code>req</code> - the raw <a href=\"https://nodejs.org/api/http.html#http_class_http_clientrequest\" rel=\"nofollow\"><code>ClientRequest</code></a> object created from the <code>uri</code>, before <code>end</code> has been called.</li>\n</ul>\n<p>Since the <code>request</code> event executes on a global event handler, you can intercept\nand add listeners to a request.</p>\n<h4>\n<a id=\"response\" class=\"anchor\" href=\"#response\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a><code>response</code>\n</h4>\n<p>The response event is always emitted for any request that <em>wreck</em> makes.  The\nhandler should accept the following arguments <code>(err, details)</code> where:</p>\n<ul>\n<li>\n<code>err</code> - a Boom error</li>\n<li>\n<code>details</code> - object with the following properties\n<ul>\n<li>\n<code>req</code> - the raw <code>ClientHttp</code> request object</li>\n<li>\n<code>res</code> - the raw <code>IncomingMessage</code> response object</li>\n<li>\n<code>start</code> - the time that the request was initiated</li>\n<li>\n<code>uri</code> - the result of <code>new URL(uri)</code>. This will provide information about\nthe resource requested.  Also includes the headers and method.</li>\n</ul>\n</li>\n</ul>\n<p>This event is useful for logging all requests that go through <em>wreck</em>. The <code>err</code>\nand <code>res</code> arguments can be undefined depending on if an error occurs.  Please\nbe aware that if multiple modules are depending on the same cached <em>wreck</em>\nmodule that this event can fire for each request made across all modules.  The\n<code>start</code> property is the timestamp when the request was started.  This can be\nuseful for determining how long it takes <em>wreck</em> to get a response back and\nprocessed.</p>\n",
      "intro": "",
      "example": "",
      "usage": "## Usage\n\n```javascript\nconst Wreck = require('@hapi/wreck');\n\nconst example = async function () {\n\n    const { res, payload } = await Wreck.get('http://example.com');\n    console.log(payload.toString());\n};\n\ntry {\n    example();\n}\ncatch (ex) {\n    console.error(ex);\n}\n```\n",
      "faq": "",
      "advanced": "### Advanced\n\n```javascript\nconst Wreck = require('@hapi/wreck');\n\nconst method = 'GET'; // GET, POST, PUT, DELETE\nconst uri = '/';\nconst readableStream = Wreck.toReadableStream('foo=bar');\n\nconst wreck = Wreck.defaults({\n    headers: { 'x-foo-bar': 123 },\n    agents: {\n        https: new Https.Agent({ maxSockets: 100 }),\n        http: new Http.Agent({ maxSockets: 1000 }),\n        httpsAllowUnauthorized: new Https.Agent({ maxSockets: 100, rejectUnauthorized: false })\n    }\n});\n\n// cascading example -- does not alter `wreck`\n// inherits `headers` and `agents` specified above\nconst wreckWithTimeout = wreck.defaults({\n    timeout: 5\n});\n\n// all attributes are optional\nconst options = {\n    baseUrl: 'https://www.example.com',\n    payload: readableStream || 'foo=bar' || Buffer.from('foo=bar'),\n    headers: { /* http headers */ },\n    redirects: 3,\n    beforeRedirect: (redirectMethod, statusCode, location, resHeaders, redirectOptions, next) => next(),\n    redirected: function (statusCode, location, req) {},\n    timeout: 1000,    // 1 second, default: unlimited\n    maxBytes: 1048576, // 1 MB, default: unlimited\n    rejectUnauthorized: true || false,\n    agent: null,         // Node Core http.Agent\n    secureProtocol: 'SSLv3_method', // The SSL method to use\n    ciphers: 'DES-CBC3-SHA' // The TLS ciphers to support\n};\n\nconst example = async function () {\n\n    const promise = wreck.request(method, uri, options);\n    try {\n        const res = await promise;\n        const body = await Wreck.read(res, options);\n        console.log(body.toString());\n    }\n    catch (err) {\n        // Handle errors\n    }\n};\n```\n\nUse `promise.req.abort()` to terminate the request early. Note that this is limited to the initial request only.\nIf the request was already redirected, aborting the original request will not abort execution of pending redirections.\n",
      "license": "BSD"
    },
    "slogan": "HTTP client utilities.",
    "forks": 103,
    "stars": 378,
    "date": "2020-08-22T19:19:20Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/wreck"
  },
  "yar": {
    "name": "yar",
    "versions": [
      {
        "name": "10.1.0",
        "branch": "master",
        "license": "BSD",
        "node": "12, 14"
      }
    ],
    "versionsArray": [
      "10.1.0"
    ],
    "api": true,
    "10.1.0": {
      "menu": "  - [Differences from @hapi/cookie](#differences-from-hapicookie)\n- [Password considerations](#password-considerations)\n- [Cookie Options](#cookie-options)\n  - [isSecure](#issecure)\n  - [ignoreErrors](#ignoreerrors)\n  - [clearInvalid](#clearinvalid)\n- [Options](#options)\n  - [Route Options](#route-options)\n  - [Methods](#methods)",
      "api": "<h3>\n<a id=\"differences-from-hapicookie\" class=\"anchor\" href=\"#differences-from-hapicookie\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Differences from @hapi/cookie</h3>\n<p>The <strong>@hapi/cookie</strong> plugin provides similar facilities to <strong>yar</strong>. The approach of the two projects does differ in some regards, though.</p>\n<ol>\n<li>\n<strong>yar</strong> is focused on session support, and does not require that a user be logged in to have a session. <strong>@hapi/cookie</strong> only provides session storage for logged in users.  If you need session handling for non-authenticated users, use <strong>yar</strong>.</li>\n<li>\n<strong>yar</strong> is capable of handling larger data sizes without any additional setup.  If your session data gets larger than cookies can handle <strong>yar</strong> will push the data out to the server cache for you.  By default this is memory storage, but can be any <a href=\"https://github.com/hapijs/catbox\">catbox</a> supported cache storage, including mongo, redis, local disk, and more.  <strong>@hapi/cookie</strong> can support larger session size as well, but requires you to handle connecting the cookie based session with your external data storage.</li>\n</ol>\n<h2>\n<a id=\"password-considerations\" class=\"anchor\" href=\"#password-considerations\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Password considerations</h2>\n<p>Keep in mind some things in regard to your password:</p>\n<ol>\n<li>It should never be committed to the repository or hard coded in your code.  Instead pass the password via environment variables or some other server configuration management option.</li>\n<li>In some situations it is possible that your password could be attacked remotely.  So choose a password that is randomly generated.  Use a random password generator to create something rather than creating your own.  Make sure it is long and includes special characters.</li>\n<li>Consider rotating your cookie session password on a regular basis.</li>\n</ol>\n<h2>\n<a id=\"cookie-options\" class=\"anchor\" href=\"#cookie-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Cookie Options</h2>\n<p>You can read about more cookie options in the <a href=\"#options\">cookie options</a> section.</p>\n<h3>\n<a id=\"issecure\" class=\"anchor\" href=\"#issecure\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>isSecure</h3>\n<p>Set <code>isSecure</code> (default <code>true</code>) to <code>false</code> if you are using standard http. Take care to do this in development mode only though. You don't want to use cookies sent over insecure channels for session management.  One way to take care of this is to use the <code>NODE_ENV</code> environment variable like this:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">let</span> <span class=\"pl-s1\">options</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">cookieOptions</span>: <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">isSecure</span>: <span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">env</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">NODE_ENV</span> !== <span class=\"pl-s\">'development'</span><span class=\"pl-kos\">,</span>\n        ...\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"ignoreerrors\" class=\"anchor\" href=\"#ignoreerrors\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>ignoreErrors</h3>\n<p><code>ignoreErrors</code> (default <code>true</code>) tells hapi that it should not respond with a HTTP 400 error if the session cookie cannot decrypt.  This could happen if the cookie is changed on the client, or more likely, if you change the cookie password in your settings.  If you want to make this condition send an error like it did in prior versions, change this to <code>false</code>, but be aware that if you change your cookie password you will cause 400 errors to be returned to end users.  In that case you should probably change this back to true for a short time to allow session cookies to get reset for the best user experience.</p>\n<p>You may turn this off, <code>false</code>, and try to use the hapi route state config option of <code>failAction</code> to instead get an event whenever a bad session cookie is encountered.  This can allow more sophisticated handling strategies or even allow for mitigation of brute force attacks on your cookie password.  See <a href=\"http://hapi.dev/api#serverstatename-options\" rel=\"nofollow\">server.state</a> documentation for more details.</p>\n<h3>\n<a id=\"clearinvalid\" class=\"anchor\" href=\"#clearinvalid\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>clearInvalid</h3>\n<p><code>clearInvalid</code> (default <code>true</code>) tells hapi that if a session cookie is invalid for any reason, to clear it from the browser.  This prevents hapi from having to reprocess the bad cookie on future requests.  In general you'll probably want this on, but if you'd prefer that session cookies be dealt with in some other way you may set this to <code>false</code>.</p>\n<h2>\n<a id=\"options\" class=\"anchor\" href=\"#options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Options</h2>\n<ul>\n<li>\n<code>name</code> - determines the name of the cookie used to store session information. Defaults to <em>session</em>.</li>\n<li>\n<code>maxCookieSize</code> - maximum cookie size before using server-side storage. Defaults to 1K. Set to zero to always use server-side storage.</li>\n<li>\n<code>storeBlank</code> - determines whether to store empty session before they've been modified. Defaults to <em>true</em>.</li>\n<li>\n<code>errorOnCacheNotReady</code> - will cause yar to throw an exception if trying to persist to cache when the cache is unavailable. Setting this to false will allow applications using yar to run uninterrupted if the cache is not ready (however sessions will not be saving). Defaults to <em>true</em>.</li>\n<li>\n<code>cache</code> - <strong>hapi</strong> <a href=\"https://hapi.dev/api#servercacheoptions\" rel=\"nofollow\">cache options</a> which includes\n(among other options):\n<ul>\n<li>\n<code>expiresIn</code> - server-side storage expiration (defaults to 1 day).</li>\n</ul>\n</li>\n<li>\n<code>cookieOptions</code> - the configuration for cookie-specific features:\n<ul>\n<li>\n<code>password</code> - (Required) used to encrypt and sign the cookie data.</li>\n<li>\n<code>path</code> - determines the cookie path. Defaults to <em>'/'</em>.</li>\n<li>\n<code>isSameSite</code> - enables the <code>same-site</code> cookie parameter.  Default to 'Lax'.  Can be <code>'Strict'|'Lax'|'None'|false</code>.</li>\n<li>\n<code>isSecure</code> - determines whether or not to transfer using TLS/SSL. Defaults to <em>true</em>.</li>\n<li>\n<code>isHttpOnly</code> - determines whether or not to set HttpOnly option in cookie. Defaults to <em>false</em>.</li>\n<li>\n<code>ttl</code> - sets the time for the cookie to live in the browser, in milliseconds.  Defaults to null (session time-life - cookies are deleted when the browser is closed).</li>\n<li>\n<code>contextualize</code> - a function using the signature <code>async function(definition, request)</code> used to override a request-specific cookie settings where:\n<ul>\n<li>\n<code>definition</code> - a copy of the <code>options</code> to be used for formatting the cookie that can be manipulated by the function to customize the request cookie header. Note that changing the <code>definition.contextualize</code> property will be ignored.</li>\n<li>\n<code>request</code> - the current request object.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>customSessionIDGenerator</code> - an optional function to create custom session IDs. Must return a string and have the signature <code>function (request)</code> where:\n<ul>\n<li>\n<code>request</code> - (optional) is the original <strong>request</strong> received from the client.</li>\n</ul>\n</li>\n</ul>\n<h3>\n<a id=\"route-options\" class=\"anchor\" href=\"#route-options\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Route Options</h3>\n<p>You can also add these options on a route per route basis at <code>config.plugins.yar</code>:\n- <code>skip</code> - a boolean value which, if true, means no session with be attached to the request (defaults to false).</p>\n<h3>\n<a id=\"methods\" class=\"anchor\" href=\"#methods\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Methods</h3>\n<p><strong>yar</strong> adds the <code>yar</code> property to every request object and initializes the <code>yar.id</code> on the first request from each browser. The <code>request.yar</code> interface provides the following methods:</p>\n<ul>\n<li>\n<code>reset()</code> - clears the session and assigns a new session id.</li>\n<li>\n<code>set(key, value)</code> - assigns a value (string, object, etc) to a given key which will persist across requests.  Returns the value.</li>\n<li>\n<code>set(keysObject)</code> - assigns values to multiple keys using each 'keysObject' top-level property. Returns the keysObject.</li>\n<li>\n<code>get(key, clear)</code> - retrieve value using a key. If 'clear' is 'true', key is cleared on return.</li>\n<li>\n<code>clear(key)</code> - clears key.</li>\n<li>\n<code>touch()</code> - Manually notify the session of changes (when using <code>get()</code> and changing the content of the returned reference directly without calling <code>set()</code>).</li>\n<li>\n<code>flash(type, message, isOverride)</code> - stores volatile data - data that should be deleted once read. When given no arguments, it will return all of the flash messages and delete the originals. When given only a type, it will return all of the flash messages of that type and delete the originals. When given a type and a message, it will set or append that message to the given type. 'isOverride' used to indicate that the message provided should replace any existing value instead of being appended to it (defaults to false).</li>\n<li>\n<code>lazy(enabled)</code> - if set to 'true', enables lazy mode. In lazy mode, <code>request.yar</code> can be modified directly (e.g. setting <code>request.yar.myKey</code> to an object value), and those keys will be stored and loaded back. Lazy mode isn't as fast as the normal get/set because it has to store the session state on every responses regardless of any changes being made.</li>\n<li>\n<code>await commit(h)</code> - used to manually prepare the session state and commit it into the response when the response is taken over in an <code>onPreResponse</code> handler. Normally, the <strong>yar</strong> <code>onPreRespinse</code> handler performs the commit, but if an application extension handler takes over, <strong>yar</strong> doesn't get a chance to commit the state before the response goes out. The method requires the hapi <code>h</code> toolkit argument available in the extension handler.</li>\n</ul>\n<p><strong>yar</strong> adds the <code>yar</code> property to the server instance. The <code>server.yar</code> interface provides the following methods:</p>\n<ul>\n<li>\n<code>revoke(id)</code> - revokes the specified session.</li>\n</ul>\n",
      "intro": "## Introduction\n\n**yar** add session support to hapi - a persistent state across multiple browser requests using an [iron](https://github.com/hapijs/iron) encrypted cookie and server-side storage. **yar** tries to fit session data into a session cookie based  on a configured maximum size. If the content is too big to fit, it uses server storage via the [hapi plugin cache](http://hapi.dev/api#servercacheoptions) interface.\n",
      "example": "## Example\n\nFor example, the first handler sets a session key and the second gets it:\n```js\nlet handler1 = (request, reply) => {\n\n    request.yar.set('example', { key: 'value' });\n\n    return null;\n};\n\nlet handler2 = (request, reply) => {\n\n    const example = request.yar.get('example');\n    return example.key;     // Will send back 'value'\n};\n```\n\nThe plugin requires a password for encryption that must be at least 32 characters long:\n```js\nlet options = {\n    storeBlank: false,\n    cookieOptions: {\n        password: 'the-password-must-be-at-least-32-characters-long',\n        isSecure: true\n    }\n};\n/*\nPlease note that there are other default cookie options that can impact your security.\nPlease look at the description of the cookie options below to make sure this is doing\nwhat you expect.\n*/\n\nconst server = new Hapi.Server();\n\ntry {\n  await server.register({\n      plugin: require('@hapi/yar'),\n      options: options\n  });\n} catch(err) {\n    console.error(err);\n}\n\nawait server.start();\n```\n",
      "usage": "",
      "faq": "",
      "advanced": "",
      "license": "BSD"
    },
    "slogan": "A hapi session manager.",
    "forks": 58,
    "stars": 134,
    "date": "2020-08-22T18:54:48Z",
    "updated": "Sat Aug 22 2020",
    "link": "https://github.com/hapijs/yar"
  }
}